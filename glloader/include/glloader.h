#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _WIN32
#ifdef GLLOADER_EXPORTS
#define GLLOADER_API __declspec(dllexport)
#else
#define GLLOADER_API __declspec(dllimport)
#endif
#else
#define GLLOADER_API
#endif

GLLOADER_API void LoadGLProcs();

// A tweaked version of glcorearb.h is pasted inline between __glcorearb_h_.
// The license associated to this chunk of code is also included inline.
// That license applies to that part of the code only.
// The rest of the code in this file is under the license at the top of this file.
#ifndef __glcorearb_h_
#define __glcorearb_h_ 1

/*
** Copyright (c) 2013-2015 The Khronos Group Inc.
**
** Permission is hereby granted, free of charge, to any person obtaining a
** copy of this software and/or associated documentation files (the
** "Materials"), to deal in the Materials without restriction, including
** without limitation the rights to use, copy, modify, merge, publish,
** distribute, sublicense, and/or sell copies of the Materials, and to
** permit persons to whom the Materials are furnished to do so, subject to
** the following conditions:
**
** The above copyright notice and this permission notice shall be included
** in all copies or substantial portions of the Materials.
**
** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
*/
/*
** This header is generated from the Khronos OpenGL / OpenGL ES XML
** API Registry. The current version of the Registry, generator scripts
** used to make the header, and the header can be found at
**   http://www.opengl.org/registry/
**
** Khronos $Revision: 32155 $ on $Date: 2015-10-22 23:25:39 -0400 (Thu, 22 Oct 2015) $
*/

#ifndef GLAPIENTRY
#ifdef _WIN32
#define GLAPIENTRY _stdcall
#else
#define GLAPIENTRY
#endif
#endif

#ifndef GLAPIENTRYP
#define GLAPIENTRYP GLAPIENTRY *
#endif

/* glcorearb.h is for use with OpenGL core profile implementations.
** It should should be placed in the same directory as gl.h and
** included as <GL/glcorearb.h>.
**
** glcorearb.h includes only APIs in the latest OpenGL core profile
** implementation together with APIs in newer ARB extensions which
** can be supported by the core profile. It does not, and never will
** include functionality removed from the core profile, such as
** fixed-function vertex and fragment processing.
**
** Do not #include both <GL/glcorearb.h> and either of <GL/gl.h> or
** <GL/glext.h> in the same source file.
*/

/* Generated C header for:
* API: gl
* Profile: core
* Versions considered: .*
* Versions emitted: .*
* Default extensions included: glcore
* Additional extensions included: _nomatch_^
* Extensions removed: _nomatch_^
*/

typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;

/*************************************************************/

/* Version */
#define GL_VERSION_1_1                    1

/* AccumOp */
#define GL_ACCUM                          0x0100
#define GL_LOAD                           0x0101
#define GL_RETURN                         0x0102
#define GL_MULT                           0x0103
#define GL_ADD                            0x0104

/* AlphaFunction */
#define GL_NEVER                          0x0200
#define GL_LESS                           0x0201
#define GL_EQUAL                          0x0202
#define GL_LEQUAL                         0x0203
#define GL_GREATER                        0x0204
#define GL_NOTEQUAL                       0x0205
#define GL_GEQUAL                         0x0206
#define GL_ALWAYS                         0x0207

/* AttribMask */
#define GL_CURRENT_BIT                    0x00000001
#define GL_POINT_BIT                      0x00000002
#define GL_LINE_BIT                       0x00000004
#define GL_POLYGON_BIT                    0x00000008
#define GL_POLYGON_STIPPLE_BIT            0x00000010
#define GL_PIXEL_MODE_BIT                 0x00000020
#define GL_LIGHTING_BIT                   0x00000040
#define GL_FOG_BIT                        0x00000080
#define GL_DEPTH_BUFFER_BIT               0x00000100
#define GL_ACCUM_BUFFER_BIT               0x00000200
#define GL_STENCIL_BUFFER_BIT             0x00000400
#define GL_VIEWPORT_BIT                   0x00000800
#define GL_TRANSFORM_BIT                  0x00001000
#define GL_ENABLE_BIT                     0x00002000
#define GL_COLOR_BUFFER_BIT               0x00004000
#define GL_HINT_BIT                       0x00008000
#define GL_EVAL_BIT                       0x00010000
#define GL_LIST_BIT                       0x00020000
#define GL_TEXTURE_BIT                    0x00040000
#define GL_SCISSOR_BIT                    0x00080000
#define GL_ALL_ATTRIB_BITS                0x000fffff

/* BeginMode */
#define GL_POINTS                         0x0000
#define GL_LINES                          0x0001
#define GL_LINE_LOOP                      0x0002
#define GL_LINE_STRIP                     0x0003
#define GL_TRIANGLES                      0x0004
#define GL_TRIANGLE_STRIP                 0x0005
#define GL_TRIANGLE_FAN                   0x0006
#define GL_QUADS                          0x0007
#define GL_QUAD_STRIP                     0x0008
#define GL_POLYGON                        0x0009

/* BlendingFactorDest */
#define GL_ZERO                           0
#define GL_ONE                            1
#define GL_SRC_COLOR                      0x0300
#define GL_ONE_MINUS_SRC_COLOR            0x0301
#define GL_SRC_ALPHA                      0x0302
#define GL_ONE_MINUS_SRC_ALPHA            0x0303
#define GL_DST_ALPHA                      0x0304
#define GL_ONE_MINUS_DST_ALPHA            0x0305

/* BlendingFactorSrc */
/*      GL_ZERO */
/*      GL_ONE */
#define GL_DST_COLOR                      0x0306
#define GL_ONE_MINUS_DST_COLOR            0x0307
#define GL_SRC_ALPHA_SATURATE             0x0308
/*      GL_SRC_ALPHA */
/*      GL_ONE_MINUS_SRC_ALPHA */
/*      GL_DST_ALPHA */
/*      GL_ONE_MINUS_DST_ALPHA */

/* Boolean */
#define GL_TRUE                           1
#define GL_FALSE                          0

/* ClearBufferMask */
/*      GL_COLOR_BUFFER_BIT */
/*      GL_ACCUM_BUFFER_BIT */
/*      GL_STENCIL_BUFFER_BIT */
/*      GL_DEPTH_BUFFER_BIT */

/* ClientArrayType */
/*      GL_VERTEX_ARRAY */
/*      GL_NORMAL_ARRAY */
/*      GL_COLOR_ARRAY */
/*      GL_INDEX_ARRAY */
/*      GL_TEXTURE_COORD_ARRAY */
/*      GL_EDGE_FLAG_ARRAY */

/* ClipPlaneName */
#define GL_CLIP_PLANE0                    0x3000
#define GL_CLIP_PLANE1                    0x3001
#define GL_CLIP_PLANE2                    0x3002
#define GL_CLIP_PLANE3                    0x3003
#define GL_CLIP_PLANE4                    0x3004
#define GL_CLIP_PLANE5                    0x3005

/* ColorMaterialFace */
/*      GL_FRONT */
/*      GL_BACK */
/*      GL_FRONT_AND_BACK */

/* ColorMaterialParameter */
/*      GL_AMBIENT */
/*      GL_DIFFUSE */
/*      GL_SPECULAR */
/*      GL_EMISSION */
/*      GL_AMBIENT_AND_DIFFUSE */

/* ColorPointerType */
/*      GL_BYTE */
/*      GL_UNSIGNED_BYTE */
/*      GL_SHORT */
/*      GL_UNSIGNED_SHORT */
/*      GL_INT */
/*      GL_UNSIGNED_INT */
/*      GL_FLOAT */
/*      GL_DOUBLE */

/* CullFaceMode */
/*      GL_FRONT */
/*      GL_BACK */
/*      GL_FRONT_AND_BACK */

/* DataType */
#define GL_BYTE                           0x1400
#define GL_UNSIGNED_BYTE                  0x1401
#define GL_SHORT                          0x1402
#define GL_UNSIGNED_SHORT                 0x1403
#define GL_INT                            0x1404
#define GL_UNSIGNED_INT                   0x1405
#define GL_FLOAT                          0x1406
#define GL_2_BYTES                        0x1407
#define GL_3_BYTES                        0x1408
#define GL_4_BYTES                        0x1409
#define GL_DOUBLE                         0x140A

/* DepthFunction */
/*      GL_NEVER */
/*      GL_LESS */
/*      GL_EQUAL */
/*      GL_LEQUAL */
/*      GL_GREATER */
/*      GL_NOTEQUAL */
/*      GL_GEQUAL */
/*      GL_ALWAYS */

/* DrawBufferMode */
#define GL_NONE                           0
#define GL_FRONT_LEFT                     0x0400
#define GL_FRONT_RIGHT                    0x0401
#define GL_BACK_LEFT                      0x0402
#define GL_BACK_RIGHT                     0x0403
#define GL_FRONT                          0x0404
#define GL_BACK                           0x0405
#define GL_LEFT                           0x0406
#define GL_RIGHT                          0x0407
#define GL_FRONT_AND_BACK                 0x0408
#define GL_AUX0                           0x0409
#define GL_AUX1                           0x040A
#define GL_AUX2                           0x040B
#define GL_AUX3                           0x040C

/* Enable */
/*      GL_FOG */
/*      GL_LIGHTING */
/*      GL_TEXTURE_1D */
/*      GL_TEXTURE_2D */
/*      GL_LINE_STIPPLE */
/*      GL_POLYGON_STIPPLE */
/*      GL_CULL_FACE */
/*      GL_ALPHA_TEST */
/*      GL_BLEND */
/*      GL_INDEX_LOGIC_OP */
/*      GL_COLOR_LOGIC_OP */
/*      GL_DITHER */
/*      GL_STENCIL_TEST */
/*      GL_DEPTH_TEST */
/*      GL_CLIP_PLANE0 */
/*      GL_CLIP_PLANE1 */
/*      GL_CLIP_PLANE2 */
/*      GL_CLIP_PLANE3 */
/*      GL_CLIP_PLANE4 */
/*      GL_CLIP_PLANE5 */
/*      GL_LIGHT0 */
/*      GL_LIGHT1 */
/*      GL_LIGHT2 */
/*      GL_LIGHT3 */
/*      GL_LIGHT4 */
/*      GL_LIGHT5 */
/*      GL_LIGHT6 */
/*      GL_LIGHT7 */
/*      GL_TEXTURE_GEN_S */
/*      GL_TEXTURE_GEN_T */
/*      GL_TEXTURE_GEN_R */
/*      GL_TEXTURE_GEN_Q */
/*      GL_MAP1_VERTEX_3 */
/*      GL_MAP1_VERTEX_4 */
/*      GL_MAP1_COLOR_4 */
/*      GL_MAP1_INDEX */
/*      GL_MAP1_NORMAL */
/*      GL_MAP1_TEXTURE_COORD_1 */
/*      GL_MAP1_TEXTURE_COORD_2 */
/*      GL_MAP1_TEXTURE_COORD_3 */
/*      GL_MAP1_TEXTURE_COORD_4 */
/*      GL_MAP2_VERTEX_3 */
/*      GL_MAP2_VERTEX_4 */
/*      GL_MAP2_COLOR_4 */
/*      GL_MAP2_INDEX */
/*      GL_MAP2_NORMAL */
/*      GL_MAP2_TEXTURE_COORD_1 */
/*      GL_MAP2_TEXTURE_COORD_2 */
/*      GL_MAP2_TEXTURE_COORD_3 */
/*      GL_MAP2_TEXTURE_COORD_4 */
/*      GL_POINT_SMOOTH */
/*      GL_LINE_SMOOTH */
/*      GL_POLYGON_SMOOTH */
/*      GL_SCISSOR_TEST */
/*      GL_COLOR_MATERIAL */
/*      GL_NORMALIZE */
/*      GL_AUTO_NORMAL */
/*      GL_VERTEX_ARRAY */
/*      GL_NORMAL_ARRAY */
/*      GL_COLOR_ARRAY */
/*      GL_INDEX_ARRAY */
/*      GL_TEXTURE_COORD_ARRAY */
/*      GL_EDGE_FLAG_ARRAY */
/*      GL_POLYGON_OFFSET_POINT */
/*      GL_POLYGON_OFFSET_LINE */
/*      GL_POLYGON_OFFSET_FILL */

/* ErrorCode */
#define GL_NO_ERROR                       0
#define GL_INVALID_ENUM                   0x0500
#define GL_INVALID_VALUE                  0x0501
#define GL_INVALID_OPERATION              0x0502
#define GL_STACK_OVERFLOW                 0x0503
#define GL_STACK_UNDERFLOW                0x0504
#define GL_OUT_OF_MEMORY                  0x0505

/* FeedBackMode */
#define GL_2D                             0x0600
#define GL_3D                             0x0601
#define GL_3D_COLOR                       0x0602
#define GL_3D_COLOR_TEXTURE               0x0603
#define GL_4D_COLOR_TEXTURE               0x0604

/* FeedBackToken */
#define GL_PASS_THROUGH_TOKEN             0x0700
#define GL_POINT_TOKEN                    0x0701
#define GL_LINE_TOKEN                     0x0702
#define GL_POLYGON_TOKEN                  0x0703
#define GL_BITMAP_TOKEN                   0x0704
#define GL_DRAW_PIXEL_TOKEN               0x0705
#define GL_COPY_PIXEL_TOKEN               0x0706
#define GL_LINE_RESET_TOKEN               0x0707

/* FogMode */
/*      GL_LINEAR */
#define GL_EXP                            0x0800
#define GL_EXP2                           0x0801


/* FogParameter */
/*      GL_FOG_COLOR */
/*      GL_FOG_DENSITY */
/*      GL_FOG_END */
/*      GL_FOG_INDEX */
/*      GL_FOG_MODE */
/*      GL_FOG_START */

/* FrontFaceDirection */
#define GL_CW                             0x0900
#define GL_CCW                            0x0901

/* GetMapTarget */
#define GL_COEFF                          0x0A00
#define GL_ORDER                          0x0A01
#define GL_DOMAIN                         0x0A02

/* GetPixelMap */
/*      GL_PIXEL_MAP_I_TO_I */
/*      GL_PIXEL_MAP_S_TO_S */
/*      GL_PIXEL_MAP_I_TO_R */
/*      GL_PIXEL_MAP_I_TO_G */
/*      GL_PIXEL_MAP_I_TO_B */
/*      GL_PIXEL_MAP_I_TO_A */
/*      GL_PIXEL_MAP_R_TO_R */
/*      GL_PIXEL_MAP_G_TO_G */
/*      GL_PIXEL_MAP_B_TO_B */
/*      GL_PIXEL_MAP_A_TO_A */

/* GetPointerTarget */
/*      GL_VERTEX_ARRAY_POINTER */
/*      GL_NORMAL_ARRAY_POINTER */
/*      GL_COLOR_ARRAY_POINTER */
/*      GL_INDEX_ARRAY_POINTER */
/*      GL_TEXTURE_COORD_ARRAY_POINTER */
/*      GL_EDGE_FLAG_ARRAY_POINTER */

/* GetTarget */
#define GL_CURRENT_COLOR                  0x0B00
#define GL_CURRENT_INDEX                  0x0B01
#define GL_CURRENT_NORMAL                 0x0B02
#define GL_CURRENT_TEXTURE_COORDS         0x0B03
#define GL_CURRENT_RASTER_COLOR           0x0B04
#define GL_CURRENT_RASTER_INDEX           0x0B05
#define GL_CURRENT_RASTER_TEXTURE_COORDS  0x0B06
#define GL_CURRENT_RASTER_POSITION        0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID  0x0B08
#define GL_CURRENT_RASTER_DISTANCE        0x0B09
#define GL_POINT_SMOOTH                   0x0B10
#define GL_POINT_SIZE                     0x0B11
#define GL_POINT_SIZE_RANGE               0x0B12
#define GL_POINT_SIZE_GRANULARITY         0x0B13
#define GL_LINE_SMOOTH                    0x0B20
#define GL_LINE_WIDTH                     0x0B21
#define GL_LINE_WIDTH_RANGE               0x0B22
#define GL_LINE_WIDTH_GRANULARITY         0x0B23
#define GL_LINE_STIPPLE                   0x0B24
#define GL_LINE_STIPPLE_PATTERN           0x0B25
#define GL_LINE_STIPPLE_REPEAT            0x0B26
#define GL_LIST_MODE                      0x0B30
#define GL_MAX_LIST_NESTING               0x0B31
#define GL_LIST_BASE                      0x0B32
#define GL_LIST_INDEX                     0x0B33
#define GL_POLYGON_MODE                   0x0B40
#define GL_POLYGON_SMOOTH                 0x0B41
#define GL_POLYGON_STIPPLE                0x0B42
#define GL_EDGE_FLAG                      0x0B43
#define GL_CULL_FACE                      0x0B44
#define GL_CULL_FACE_MODE                 0x0B45
#define GL_FRONT_FACE                     0x0B46
#define GL_LIGHTING                       0x0B50
#define GL_LIGHT_MODEL_LOCAL_VIEWER       0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE           0x0B52
#define GL_LIGHT_MODEL_AMBIENT            0x0B53
#define GL_SHADE_MODEL                    0x0B54
#define GL_COLOR_MATERIAL_FACE            0x0B55
#define GL_COLOR_MATERIAL_PARAMETER       0x0B56
#define GL_COLOR_MATERIAL                 0x0B57
#define GL_FOG                            0x0B60
#define GL_FOG_INDEX                      0x0B61
#define GL_FOG_DENSITY                    0x0B62
#define GL_FOG_START                      0x0B63
#define GL_FOG_END                        0x0B64
#define GL_FOG_MODE                       0x0B65
#define GL_FOG_COLOR                      0x0B66
#define GL_DEPTH_RANGE                    0x0B70
#define GL_DEPTH_TEST                     0x0B71
#define GL_DEPTH_WRITEMASK                0x0B72
#define GL_DEPTH_CLEAR_VALUE              0x0B73
#define GL_DEPTH_FUNC                     0x0B74
#define GL_ACCUM_CLEAR_VALUE              0x0B80
#define GL_STENCIL_TEST                   0x0B90
#define GL_STENCIL_CLEAR_VALUE            0x0B91
#define GL_STENCIL_FUNC                   0x0B92
#define GL_STENCIL_VALUE_MASK             0x0B93
#define GL_STENCIL_FAIL                   0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL        0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS        0x0B96
#define GL_STENCIL_REF                    0x0B97
#define GL_STENCIL_WRITEMASK              0x0B98
#define GL_MATRIX_MODE                    0x0BA0
#define GL_NORMALIZE                      0x0BA1
#define GL_VIEWPORT                       0x0BA2
#define GL_MODELVIEW_STACK_DEPTH          0x0BA3
#define GL_PROJECTION_STACK_DEPTH         0x0BA4
#define GL_TEXTURE_STACK_DEPTH            0x0BA5
#define GL_MODELVIEW_MATRIX               0x0BA6
#define GL_PROJECTION_MATRIX              0x0BA7
#define GL_TEXTURE_MATRIX                 0x0BA8
#define GL_ATTRIB_STACK_DEPTH             0x0BB0
#define GL_CLIENT_ATTRIB_STACK_DEPTH      0x0BB1
#define GL_ALPHA_TEST                     0x0BC0
#define GL_ALPHA_TEST_FUNC                0x0BC1
#define GL_ALPHA_TEST_REF                 0x0BC2
#define GL_DITHER                         0x0BD0
#define GL_BLEND_DST                      0x0BE0
#define GL_BLEND_SRC                      0x0BE1
#define GL_BLEND                          0x0BE2
#define GL_LOGIC_OP_MODE                  0x0BF0
#define GL_INDEX_LOGIC_OP                 0x0BF1
#define GL_COLOR_LOGIC_OP                 0x0BF2
#define GL_AUX_BUFFERS                    0x0C00
#define GL_DRAW_BUFFER                    0x0C01
#define GL_READ_BUFFER                    0x0C02
#define GL_SCISSOR_BOX                    0x0C10
#define GL_SCISSOR_TEST                   0x0C11
#define GL_INDEX_CLEAR_VALUE              0x0C20
#define GL_INDEX_WRITEMASK                0x0C21
#define GL_COLOR_CLEAR_VALUE              0x0C22
#define GL_COLOR_WRITEMASK                0x0C23
#define GL_INDEX_MODE                     0x0C30
#define GL_RGBA_MODE                      0x0C31
#define GL_DOUBLEBUFFER                   0x0C32
#define GL_STEREO                         0x0C33
#define GL_RENDER_MODE                    0x0C40
#define GL_PERSPECTIVE_CORRECTION_HINT    0x0C50
#define GL_POINT_SMOOTH_HINT              0x0C51
#define GL_LINE_SMOOTH_HINT               0x0C52
#define GL_POLYGON_SMOOTH_HINT            0x0C53
#define GL_FOG_HINT                       0x0C54
#define GL_TEXTURE_GEN_S                  0x0C60
#define GL_TEXTURE_GEN_T                  0x0C61
#define GL_TEXTURE_GEN_R                  0x0C62
#define GL_TEXTURE_GEN_Q                  0x0C63
#define GL_PIXEL_MAP_I_TO_I               0x0C70
#define GL_PIXEL_MAP_S_TO_S               0x0C71
#define GL_PIXEL_MAP_I_TO_R               0x0C72
#define GL_PIXEL_MAP_I_TO_G               0x0C73
#define GL_PIXEL_MAP_I_TO_B               0x0C74
#define GL_PIXEL_MAP_I_TO_A               0x0C75
#define GL_PIXEL_MAP_R_TO_R               0x0C76
#define GL_PIXEL_MAP_G_TO_G               0x0C77
#define GL_PIXEL_MAP_B_TO_B               0x0C78
#define GL_PIXEL_MAP_A_TO_A               0x0C79
#define GL_PIXEL_MAP_I_TO_I_SIZE          0x0CB0
#define GL_PIXEL_MAP_S_TO_S_SIZE          0x0CB1
#define GL_PIXEL_MAP_I_TO_R_SIZE          0x0CB2
#define GL_PIXEL_MAP_I_TO_G_SIZE          0x0CB3
#define GL_PIXEL_MAP_I_TO_B_SIZE          0x0CB4
#define GL_PIXEL_MAP_I_TO_A_SIZE          0x0CB5
#define GL_PIXEL_MAP_R_TO_R_SIZE          0x0CB6
#define GL_PIXEL_MAP_G_TO_G_SIZE          0x0CB7
#define GL_PIXEL_MAP_B_TO_B_SIZE          0x0CB8
#define GL_PIXEL_MAP_A_TO_A_SIZE          0x0CB9
#define GL_UNPACK_SWAP_BYTES              0x0CF0
#define GL_UNPACK_LSB_FIRST               0x0CF1
#define GL_UNPACK_ROW_LENGTH              0x0CF2
#define GL_UNPACK_SKIP_ROWS               0x0CF3
#define GL_UNPACK_SKIP_PIXELS             0x0CF4
#define GL_UNPACK_ALIGNMENT               0x0CF5
#define GL_PACK_SWAP_BYTES                0x0D00
#define GL_PACK_LSB_FIRST                 0x0D01
#define GL_PACK_ROW_LENGTH                0x0D02
#define GL_PACK_SKIP_ROWS                 0x0D03
#define GL_PACK_SKIP_PIXELS               0x0D04
#define GL_PACK_ALIGNMENT                 0x0D05
#define GL_MAP_COLOR                      0x0D10
#define GL_MAP_STENCIL                    0x0D11
#define GL_INDEX_SHIFT                    0x0D12
#define GL_INDEX_OFFSET                   0x0D13
#define GL_RED_SCALE                      0x0D14
#define GL_RED_BIAS                       0x0D15
#define GL_ZOOM_X                         0x0D16
#define GL_ZOOM_Y                         0x0D17
#define GL_GREEN_SCALE                    0x0D18
#define GL_GREEN_BIAS                     0x0D19
#define GL_BLUE_SCALE                     0x0D1A
#define GL_BLUE_BIAS                      0x0D1B
#define GL_ALPHA_SCALE                    0x0D1C
#define GL_ALPHA_BIAS                     0x0D1D
#define GL_DEPTH_SCALE                    0x0D1E
#define GL_DEPTH_BIAS                     0x0D1F
#define GL_MAX_EVAL_ORDER                 0x0D30
#define GL_MAX_LIGHTS                     0x0D31
#define GL_MAX_CLIP_PLANES                0x0D32
#define GL_MAX_TEXTURE_SIZE               0x0D33
#define GL_MAX_PIXEL_MAP_TABLE            0x0D34
#define GL_MAX_ATTRIB_STACK_DEPTH         0x0D35
#define GL_MAX_MODELVIEW_STACK_DEPTH      0x0D36
#define GL_MAX_NAME_STACK_DEPTH           0x0D37
#define GL_MAX_PROJECTION_STACK_DEPTH     0x0D38
#define GL_MAX_TEXTURE_STACK_DEPTH        0x0D39
#define GL_MAX_VIEWPORT_DIMS              0x0D3A
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH  0x0D3B
#define GL_SUBPIXEL_BITS                  0x0D50
#define GL_INDEX_BITS                     0x0D51
#define GL_RED_BITS                       0x0D52
#define GL_GREEN_BITS                     0x0D53
#define GL_BLUE_BITS                      0x0D54
#define GL_ALPHA_BITS                     0x0D55
#define GL_DEPTH_BITS                     0x0D56
#define GL_STENCIL_BITS                   0x0D57
#define GL_ACCUM_RED_BITS                 0x0D58
#define GL_ACCUM_GREEN_BITS               0x0D59
#define GL_ACCUM_BLUE_BITS                0x0D5A
#define GL_ACCUM_ALPHA_BITS               0x0D5B
#define GL_NAME_STACK_DEPTH               0x0D70
#define GL_AUTO_NORMAL                    0x0D80
#define GL_MAP1_COLOR_4                   0x0D90
#define GL_MAP1_INDEX                     0x0D91
#define GL_MAP1_NORMAL                    0x0D92
#define GL_MAP1_TEXTURE_COORD_1           0x0D93
#define GL_MAP1_TEXTURE_COORD_2           0x0D94
#define GL_MAP1_TEXTURE_COORD_3           0x0D95
#define GL_MAP1_TEXTURE_COORD_4           0x0D96
#define GL_MAP1_VERTEX_3                  0x0D97
#define GL_MAP1_VERTEX_4                  0x0D98
#define GL_MAP2_COLOR_4                   0x0DB0
#define GL_MAP2_INDEX                     0x0DB1
#define GL_MAP2_NORMAL                    0x0DB2
#define GL_MAP2_TEXTURE_COORD_1           0x0DB3
#define GL_MAP2_TEXTURE_COORD_2           0x0DB4
#define GL_MAP2_TEXTURE_COORD_3           0x0DB5
#define GL_MAP2_TEXTURE_COORD_4           0x0DB6
#define GL_MAP2_VERTEX_3                  0x0DB7
#define GL_MAP2_VERTEX_4                  0x0DB8
#define GL_MAP1_GRID_DOMAIN               0x0DD0
#define GL_MAP1_GRID_SEGMENTS             0x0DD1
#define GL_MAP2_GRID_DOMAIN               0x0DD2
#define GL_MAP2_GRID_SEGMENTS             0x0DD3
#define GL_TEXTURE_1D                     0x0DE0
#define GL_TEXTURE_2D                     0x0DE1
#define GL_FEEDBACK_BUFFER_POINTER        0x0DF0
#define GL_FEEDBACK_BUFFER_SIZE           0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE           0x0DF2
#define GL_SELECTION_BUFFER_POINTER       0x0DF3
#define GL_SELECTION_BUFFER_SIZE          0x0DF4
/*      GL_TEXTURE_BINDING_1D */
/*      GL_TEXTURE_BINDING_2D */
/*      GL_VERTEX_ARRAY */
/*      GL_NORMAL_ARRAY */
/*      GL_COLOR_ARRAY */
/*      GL_INDEX_ARRAY */
/*      GL_TEXTURE_COORD_ARRAY */
/*      GL_EDGE_FLAG_ARRAY */
/*      GL_VERTEX_ARRAY_SIZE */
/*      GL_VERTEX_ARRAY_TYPE */
/*      GL_VERTEX_ARRAY_STRIDE */
/*      GL_NORMAL_ARRAY_TYPE */
/*      GL_NORMAL_ARRAY_STRIDE */
/*      GL_COLOR_ARRAY_SIZE */
/*      GL_COLOR_ARRAY_TYPE */
/*      GL_COLOR_ARRAY_STRIDE */
/*      GL_INDEX_ARRAY_TYPE */
/*      GL_INDEX_ARRAY_STRIDE */
/*      GL_TEXTURE_COORD_ARRAY_SIZE */
/*      GL_TEXTURE_COORD_ARRAY_TYPE */
/*      GL_TEXTURE_COORD_ARRAY_STRIDE */
/*      GL_EDGE_FLAG_ARRAY_STRIDE */
/*      GL_POLYGON_OFFSET_FACTOR */
/*      GL_POLYGON_OFFSET_UNITS */

/* GetTextureParameter */
/*      GL_TEXTURE_MAG_FILTER */
/*      GL_TEXTURE_MIN_FILTER */
/*      GL_TEXTURE_WRAP_S */
/*      GL_TEXTURE_WRAP_T */
#define GL_TEXTURE_WIDTH                  0x1000
#define GL_TEXTURE_HEIGHT                 0x1001
#define GL_TEXTURE_INTERNAL_FORMAT        0x1003
#define GL_TEXTURE_BORDER_COLOR           0x1004
#define GL_TEXTURE_BORDER                 0x1005
/*      GL_TEXTURE_RED_SIZE */
/*      GL_TEXTURE_GREEN_SIZE */
/*      GL_TEXTURE_BLUE_SIZE */
/*      GL_TEXTURE_ALPHA_SIZE */
/*      GL_TEXTURE_LUMINANCE_SIZE */
/*      GL_TEXTURE_INTENSITY_SIZE */
/*      GL_TEXTURE_PRIORITY */
/*      GL_TEXTURE_RESIDENT */

/* HintMode */
#define GL_DONT_CARE                      0x1100
#define GL_FASTEST                        0x1101
#define GL_NICEST                         0x1102

/* HintTarget */
/*      GL_PERSPECTIVE_CORRECTION_HINT */
/*      GL_POINT_SMOOTH_HINT */
/*      GL_LINE_SMOOTH_HINT */
/*      GL_POLYGON_SMOOTH_HINT */
/*      GL_FOG_HINT */
/*      GL_PHONG_HINT */

/* IndexPointerType */
/*      GL_SHORT */
/*      GL_INT */
/*      GL_FLOAT */
/*      GL_DOUBLE */

/* LightModelParameter */
/*      GL_LIGHT_MODEL_AMBIENT */
/*      GL_LIGHT_MODEL_LOCAL_VIEWER */
/*      GL_LIGHT_MODEL_TWO_SIDE */

/* LightName */
#define GL_LIGHT0                         0x4000
#define GL_LIGHT1                         0x4001
#define GL_LIGHT2                         0x4002
#define GL_LIGHT3                         0x4003
#define GL_LIGHT4                         0x4004
#define GL_LIGHT5                         0x4005
#define GL_LIGHT6                         0x4006
#define GL_LIGHT7                         0x4007

/* LightParameter */
#define GL_AMBIENT                        0x1200
#define GL_DIFFUSE                        0x1201
#define GL_SPECULAR                       0x1202
#define GL_POSITION                       0x1203
#define GL_SPOT_DIRECTION                 0x1204
#define GL_SPOT_EXPONENT                  0x1205
#define GL_SPOT_CUTOFF                    0x1206
#define GL_CONSTANT_ATTENUATION           0x1207
#define GL_LINEAR_ATTENUATION             0x1208
#define GL_QUADRATIC_ATTENUATION          0x1209

/* InterleavedArrays */
/*      GL_V2F */
/*      GL_V3F */
/*      GL_C4UB_V2F */
/*      GL_C4UB_V3F */
/*      GL_C3F_V3F */
/*      GL_N3F_V3F */
/*      GL_C4F_N3F_V3F */
/*      GL_T2F_V3F */
/*      GL_T4F_V4F */
/*      GL_T2F_C4UB_V3F */
/*      GL_T2F_C3F_V3F */
/*      GL_T2F_N3F_V3F */
/*      GL_T2F_C4F_N3F_V3F */
/*      GL_T4F_C4F_N3F_V4F */

/* ListMode */
#define GL_COMPILE                        0x1300
#define GL_COMPILE_AND_EXECUTE            0x1301

/* ListNameType */
/*      GL_BYTE */
/*      GL_UNSIGNED_BYTE */
/*      GL_SHORT */
/*      GL_UNSIGNED_SHORT */
/*      GL_INT */
/*      GL_UNSIGNED_INT */
/*      GL_FLOAT */
/*      GL_2_BYTES */
/*      GL_3_BYTES */
/*      GL_4_BYTES */

/* LogicOp */
#define GL_CLEAR                          0x1500
#define GL_AND                            0x1501
#define GL_AND_REVERSE                    0x1502
#define GL_COPY                           0x1503
#define GL_AND_INVERTED                   0x1504
#define GL_NOOP                           0x1505
#define GL_XOR                            0x1506
#define GL_OR                             0x1507
#define GL_NOR                            0x1508
#define GL_EQUIV                          0x1509
#define GL_INVERT                         0x150A
#define GL_OR_REVERSE                     0x150B
#define GL_COPY_INVERTED                  0x150C
#define GL_OR_INVERTED                    0x150D
#define GL_NAND                           0x150E
#define GL_SET                            0x150F

/* MapTarget */
/*      GL_MAP1_COLOR_4 */
/*      GL_MAP1_INDEX */
/*      GL_MAP1_NORMAL */
/*      GL_MAP1_TEXTURE_COORD_1 */
/*      GL_MAP1_TEXTURE_COORD_2 */
/*      GL_MAP1_TEXTURE_COORD_3 */
/*      GL_MAP1_TEXTURE_COORD_4 */
/*      GL_MAP1_VERTEX_3 */
/*      GL_MAP1_VERTEX_4 */
/*      GL_MAP2_COLOR_4 */
/*      GL_MAP2_INDEX */
/*      GL_MAP2_NORMAL */
/*      GL_MAP2_TEXTURE_COORD_1 */
/*      GL_MAP2_TEXTURE_COORD_2 */
/*      GL_MAP2_TEXTURE_COORD_3 */
/*      GL_MAP2_TEXTURE_COORD_4 */
/*      GL_MAP2_VERTEX_3 */
/*      GL_MAP2_VERTEX_4 */

/* MaterialFace */
/*      GL_FRONT */
/*      GL_BACK */
/*      GL_FRONT_AND_BACK */

/* MaterialParameter */
#define GL_EMISSION                       0x1600
#define GL_SHININESS                      0x1601
#define GL_AMBIENT_AND_DIFFUSE            0x1602
#define GL_COLOR_INDEXES                  0x1603
/*      GL_AMBIENT */
/*      GL_DIFFUSE */
/*      GL_SPECULAR */

/* MatrixMode */
#define GL_MODELVIEW                      0x1700
#define GL_PROJECTION                     0x1701
#define GL_TEXTURE                        0x1702

/* MeshMode1 */
/*      GL_POINT */
/*      GL_LINE */

/* MeshMode2 */
/*      GL_POINT */
/*      GL_LINE */
/*      GL_FILL */

/* NormalPointerType */
/*      GL_BYTE */
/*      GL_SHORT */
/*      GL_INT */
/*      GL_FLOAT */
/*      GL_DOUBLE */

/* PixelCopyType */
#define GL_COLOR                          0x1800
#define GL_DEPTH                          0x1801
#define GL_STENCIL                        0x1802

/* PixelFormat */
#define GL_COLOR_INDEX                    0x1900
#define GL_STENCIL_INDEX                  0x1901
#define GL_DEPTH_COMPONENT                0x1902
#define GL_RED                            0x1903
#define GL_GREEN                          0x1904
#define GL_BLUE                           0x1905
#define GL_ALPHA                          0x1906
#define GL_RGB                            0x1907
#define GL_RGBA                           0x1908
#define GL_LUMINANCE                      0x1909
#define GL_LUMINANCE_ALPHA                0x190A

/* PixelMap */
/*      GL_PIXEL_MAP_I_TO_I */
/*      GL_PIXEL_MAP_S_TO_S */
/*      GL_PIXEL_MAP_I_TO_R */
/*      GL_PIXEL_MAP_I_TO_G */
/*      GL_PIXEL_MAP_I_TO_B */
/*      GL_PIXEL_MAP_I_TO_A */
/*      GL_PIXEL_MAP_R_TO_R */
/*      GL_PIXEL_MAP_G_TO_G */
/*      GL_PIXEL_MAP_B_TO_B */
/*      GL_PIXEL_MAP_A_TO_A */

/* PixelStore */
/*      GL_UNPACK_SWAP_BYTES */
/*      GL_UNPACK_LSB_FIRST */
/*      GL_UNPACK_ROW_LENGTH */
/*      GL_UNPACK_SKIP_ROWS */
/*      GL_UNPACK_SKIP_PIXELS */
/*      GL_UNPACK_ALIGNMENT */
/*      GL_PACK_SWAP_BYTES */
/*      GL_PACK_LSB_FIRST */
/*      GL_PACK_ROW_LENGTH */
/*      GL_PACK_SKIP_ROWS */
/*      GL_PACK_SKIP_PIXELS */
/*      GL_PACK_ALIGNMENT */

/* PixelTransfer */
/*      GL_MAP_COLOR */
/*      GL_MAP_STENCIL */
/*      GL_INDEX_SHIFT */
/*      GL_INDEX_OFFSET */
/*      GL_RED_SCALE */
/*      GL_RED_BIAS */
/*      GL_GREEN_SCALE */
/*      GL_GREEN_BIAS */
/*      GL_BLUE_SCALE */
/*      GL_BLUE_BIAS */
/*      GL_ALPHA_SCALE */
/*      GL_ALPHA_BIAS */
/*      GL_DEPTH_SCALE */
/*      GL_DEPTH_BIAS */

/* PixelType */
#define GL_BITMAP                         0x1A00
/*      GL_BYTE */
/*      GL_UNSIGNED_BYTE */
/*      GL_SHORT */
/*      GL_UNSIGNED_SHORT */
/*      GL_INT */
/*      GL_UNSIGNED_INT */
/*      GL_FLOAT */

/* PolygonMode */
#define GL_POINT                          0x1B00
#define GL_LINE                           0x1B01
#define GL_FILL                           0x1B02

/* ReadBufferMode */
/*      GL_FRONT_LEFT */
/*      GL_FRONT_RIGHT */
/*      GL_BACK_LEFT */
/*      GL_BACK_RIGHT */
/*      GL_FRONT */
/*      GL_BACK */
/*      GL_LEFT */
/*      GL_RIGHT */
/*      GL_AUX0 */
/*      GL_AUX1 */
/*      GL_AUX2 */
/*      GL_AUX3 */

/* RenderingMode */
#define GL_RENDER                         0x1C00
#define GL_FEEDBACK                       0x1C01
#define GL_SELECT                         0x1C02

/* ShadingModel */
#define GL_FLAT                           0x1D00
#define GL_SMOOTH                         0x1D01


/* StencilFunction */
/*      GL_NEVER */
/*      GL_LESS */
/*      GL_EQUAL */
/*      GL_LEQUAL */
/*      GL_GREATER */
/*      GL_NOTEQUAL */
/*      GL_GEQUAL */
/*      GL_ALWAYS */

/* StencilOp */
/*      GL_ZERO */
#define GL_KEEP                           0x1E00
#define GL_REPLACE                        0x1E01
#define GL_INCR                           0x1E02
#define GL_DECR                           0x1E03
/*      GL_INVERT */

/* StringName */
#define GL_VENDOR                         0x1F00
#define GL_RENDERER                       0x1F01
#define GL_VERSION                        0x1F02
#define GL_EXTENSIONS                     0x1F03

/* TextureCoordName */
#define GL_S                              0x2000
#define GL_T                              0x2001
#define GL_R                              0x2002
#define GL_Q                              0x2003

/* TexCoordPointerType */
/*      GL_SHORT */
/*      GL_INT */
/*      GL_FLOAT */
/*      GL_DOUBLE */

/* TextureEnvMode */
#define GL_MODULATE                       0x2100
#define GL_DECAL                          0x2101
/*      GL_BLEND */
/*      GL_REPLACE */

/* TextureEnvParameter */
#define GL_TEXTURE_ENV_MODE               0x2200
#define GL_TEXTURE_ENV_COLOR              0x2201

/* TextureEnvTarget */
#define GL_TEXTURE_ENV                    0x2300

/* TextureGenMode */
#define GL_EYE_LINEAR                     0x2400
#define GL_OBJECT_LINEAR                  0x2401
#define GL_SPHERE_MAP                     0x2402

/* TextureGenParameter */
#define GL_TEXTURE_GEN_MODE               0x2500
#define GL_OBJECT_PLANE                   0x2501
#define GL_EYE_PLANE                      0x2502

/* TextureMagFilter */
#define GL_NEAREST                        0x2600
#define GL_LINEAR                         0x2601

/* TextureMinFilter */
/*      GL_NEAREST */
/*      GL_LINEAR */
#define GL_NEAREST_MIPMAP_NEAREST         0x2700
#define GL_LINEAR_MIPMAP_NEAREST          0x2701
#define GL_NEAREST_MIPMAP_LINEAR          0x2702
#define GL_LINEAR_MIPMAP_LINEAR           0x2703

/* TextureParameterName */
#define GL_TEXTURE_MAG_FILTER             0x2800
#define GL_TEXTURE_MIN_FILTER             0x2801
#define GL_TEXTURE_WRAP_S                 0x2802
#define GL_TEXTURE_WRAP_T                 0x2803
/*      GL_TEXTURE_BORDER_COLOR */
/*      GL_TEXTURE_PRIORITY */

/* TextureTarget */
/*      GL_TEXTURE_1D */
/*      GL_TEXTURE_2D */
/*      GL_PROXY_TEXTURE_1D */
/*      GL_PROXY_TEXTURE_2D */

/* TextureWrapMode */
#define GL_CLAMP                          0x2900
#define GL_REPEAT                         0x2901

/* VertexPointerType */
/*      GL_SHORT */
/*      GL_INT */
/*      GL_FLOAT */
/*      GL_DOUBLE */

/* ClientAttribMask */
#define GL_CLIENT_PIXEL_STORE_BIT         0x00000001
#define GL_CLIENT_VERTEX_ARRAY_BIT        0x00000002
#define GL_CLIENT_ALL_ATTRIB_BITS         0xffffffff

/* polygon_offset */
#define GL_POLYGON_OFFSET_FACTOR          0x8038
#define GL_POLYGON_OFFSET_UNITS           0x2A00
#define GL_POLYGON_OFFSET_POINT           0x2A01
#define GL_POLYGON_OFFSET_LINE            0x2A02
#define GL_POLYGON_OFFSET_FILL            0x8037

/* texture */
#define GL_ALPHA4                         0x803B
#define GL_ALPHA8                         0x803C
#define GL_ALPHA12                        0x803D
#define GL_ALPHA16                        0x803E
#define GL_LUMINANCE4                     0x803F
#define GL_LUMINANCE8                     0x8040
#define GL_LUMINANCE12                    0x8041
#define GL_LUMINANCE16                    0x8042
#define GL_LUMINANCE4_ALPHA4              0x8043
#define GL_LUMINANCE6_ALPHA2              0x8044
#define GL_LUMINANCE8_ALPHA8              0x8045
#define GL_LUMINANCE12_ALPHA4             0x8046
#define GL_LUMINANCE12_ALPHA12            0x8047
#define GL_LUMINANCE16_ALPHA16            0x8048
#define GL_INTENSITY                      0x8049
#define GL_INTENSITY4                     0x804A
#define GL_INTENSITY8                     0x804B
#define GL_INTENSITY12                    0x804C
#define GL_INTENSITY16                    0x804D
#define GL_R3_G3_B2                       0x2A10
#define GL_RGB4                           0x804F
#define GL_RGB5                           0x8050
#define GL_RGB8                           0x8051
#define GL_RGB10                          0x8052
#define GL_RGB12                          0x8053
#define GL_RGB16                          0x8054
#define GL_RGBA2                          0x8055
#define GL_RGBA4                          0x8056
#define GL_RGB5_A1                        0x8057
#define GL_RGBA8                          0x8058
#define GL_RGB10_A2                       0x8059
#define GL_RGBA12                         0x805A
#define GL_RGBA16                         0x805B
#define GL_TEXTURE_RED_SIZE               0x805C
#define GL_TEXTURE_GREEN_SIZE             0x805D
#define GL_TEXTURE_BLUE_SIZE              0x805E
#define GL_TEXTURE_ALPHA_SIZE             0x805F
#define GL_TEXTURE_LUMINANCE_SIZE         0x8060
#define GL_TEXTURE_INTENSITY_SIZE         0x8061
#define GL_PROXY_TEXTURE_1D               0x8063
#define GL_PROXY_TEXTURE_2D               0x8064

/* texture_object */
#define GL_TEXTURE_PRIORITY               0x8066
#define GL_TEXTURE_RESIDENT               0x8067
#define GL_TEXTURE_BINDING_1D             0x8068
#define GL_TEXTURE_BINDING_2D             0x8069

/* vertex_array */
#define GL_VERTEX_ARRAY                   0x8074
#define GL_NORMAL_ARRAY                   0x8075
#define GL_COLOR_ARRAY                    0x8076
#define GL_INDEX_ARRAY                    0x8077
#define GL_TEXTURE_COORD_ARRAY            0x8078
#define GL_EDGE_FLAG_ARRAY                0x8079
#define GL_VERTEX_ARRAY_SIZE              0x807A
#define GL_VERTEX_ARRAY_TYPE              0x807B
#define GL_VERTEX_ARRAY_STRIDE            0x807C
#define GL_NORMAL_ARRAY_TYPE              0x807E
#define GL_NORMAL_ARRAY_STRIDE            0x807F
#define GL_COLOR_ARRAY_SIZE               0x8081
#define GL_COLOR_ARRAY_TYPE               0x8082
#define GL_COLOR_ARRAY_STRIDE             0x8083
#define GL_INDEX_ARRAY_TYPE               0x8085
#define GL_INDEX_ARRAY_STRIDE             0x8086
#define GL_TEXTURE_COORD_ARRAY_SIZE       0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE       0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE     0x808A
#define GL_EDGE_FLAG_ARRAY_STRIDE         0x808C
#define GL_VERTEX_ARRAY_POINTER           0x808E
#define GL_NORMAL_ARRAY_POINTER           0x808F
#define GL_COLOR_ARRAY_POINTER            0x8090
#define GL_INDEX_ARRAY_POINTER            0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER    0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER        0x8093
#define GL_V2F                            0x2A20
#define GL_V3F                            0x2A21
#define GL_C4UB_V2F                       0x2A22
#define GL_C4UB_V3F                       0x2A23
#define GL_C3F_V3F                        0x2A24
#define GL_N3F_V3F                        0x2A25
#define GL_C4F_N3F_V3F                    0x2A26
#define GL_T2F_V3F                        0x2A27
#define GL_T4F_V4F                        0x2A28
#define GL_T2F_C4UB_V3F                   0x2A29
#define GL_T2F_C3F_V3F                    0x2A2A
#define GL_T2F_N3F_V3F                    0x2A2B
#define GL_T2F_C4F_N3F_V3F                0x2A2C
#define GL_T4F_C4F_N3F_V4F                0x2A2D

/* Extensions */
#define GL_EXT_vertex_array               1
#define GL_EXT_bgra                       1
#define GL_EXT_paletted_texture           1
#define GL_WIN_swap_hint                  1
#define GL_WIN_draw_range_elements        1
// #define GL_WIN_phong_shading              1
// #define GL_WIN_specular_fog               1

/* EXT_vertex_array */
#define GL_VERTEX_ARRAY_EXT               0x8074
#define GL_NORMAL_ARRAY_EXT               0x8075
#define GL_COLOR_ARRAY_EXT                0x8076
#define GL_INDEX_ARRAY_EXT                0x8077
#define GL_TEXTURE_COORD_ARRAY_EXT        0x8078
#define GL_EDGE_FLAG_ARRAY_EXT            0x8079
#define GL_VERTEX_ARRAY_SIZE_EXT          0x807A
#define GL_VERTEX_ARRAY_TYPE_EXT          0x807B
#define GL_VERTEX_ARRAY_STRIDE_EXT        0x807C
#define GL_VERTEX_ARRAY_COUNT_EXT         0x807D
#define GL_NORMAL_ARRAY_TYPE_EXT          0x807E
#define GL_NORMAL_ARRAY_STRIDE_EXT        0x807F
#define GL_NORMAL_ARRAY_COUNT_EXT         0x8080
#define GL_COLOR_ARRAY_SIZE_EXT           0x8081
#define GL_COLOR_ARRAY_TYPE_EXT           0x8082
#define GL_COLOR_ARRAY_STRIDE_EXT         0x8083
#define GL_COLOR_ARRAY_COUNT_EXT          0x8084
#define GL_INDEX_ARRAY_TYPE_EXT           0x8085
#define GL_INDEX_ARRAY_STRIDE_EXT         0x8086
#define GL_INDEX_ARRAY_COUNT_EXT          0x8087
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT   0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT   0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT  0x808B
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT     0x808C
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT      0x808D
#define GL_VERTEX_ARRAY_POINTER_EXT       0x808E
#define GL_NORMAL_ARRAY_POINTER_EXT       0x808F
#define GL_COLOR_ARRAY_POINTER_EXT        0x8090
#define GL_INDEX_ARRAY_POINTER_EXT        0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT    0x8093
#define GL_DOUBLE_EXT                     GL_DOUBLE

/* EXT_bgra */
#define GL_BGR_EXT                        0x80E0
#define GL_BGRA_EXT                       0x80E1

/* EXT_paletted_texture */

/* These must match the GL_COLOR_TABLE_*_SGI enumerants */
#define GL_COLOR_TABLE_FORMAT_EXT         0x80D8
#define GL_COLOR_TABLE_WIDTH_EXT          0x80D9
#define GL_COLOR_TABLE_RED_SIZE_EXT       0x80DA
#define GL_COLOR_TABLE_GREEN_SIZE_EXT     0x80DB
#define GL_COLOR_TABLE_BLUE_SIZE_EXT      0x80DC
#define GL_COLOR_TABLE_ALPHA_SIZE_EXT     0x80DD
#define GL_COLOR_TABLE_LUMINANCE_SIZE_EXT 0x80DE
#define GL_COLOR_TABLE_INTENSITY_SIZE_EXT 0x80DF

#define GL_COLOR_INDEX1_EXT               0x80E2
#define GL_COLOR_INDEX2_EXT               0x80E3
#define GL_COLOR_INDEX4_EXT               0x80E4
#define GL_COLOR_INDEX8_EXT               0x80E5
#define GL_COLOR_INDEX12_EXT              0x80E6
#define GL_COLOR_INDEX16_EXT              0x80E7

/* WIN_draw_range_elements */
#define GL_MAX_ELEMENTS_VERTICES_WIN      0x80E8
#define GL_MAX_ELEMENTS_INDICES_WIN       0x80E9

/* WIN_phong_shading */
#define GL_PHONG_WIN                      0x80EA 
#define GL_PHONG_HINT_WIN                 0x80EB 

/* WIN_specular_fog */
#define GL_FOG_SPECULAR_TEXTURE_WIN       0x80EC

/* For compatibility with OpenGL v1.0 */
#define GL_LOGIC_OP GL_INDEX_LOGIC_OP
#define GL_TEXTURE_COMPONENTS GL_TEXTURE_INTERNAL_FORMAT

/*************************************************************/

#ifdef GLLOADER_IMPLEMENTATION
GLLOADER_API void (GLAPIENTRYP glAccum)(GLenum op, GLfloat value);
GLLOADER_API void (GLAPIENTRYP glAlphaFunc)(GLenum func, GLclampf ref);
GLLOADER_API GLboolean (GLAPIENTRYP glAreTexturesResident)(GLsizei n, const GLuint *textures, GLboolean *residences);
GLLOADER_API void (GLAPIENTRYP glArrayElement)(GLint i);
GLLOADER_API void (GLAPIENTRYP glBegin)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glBindTexture)(GLenum target, GLuint texture);
GLLOADER_API void (GLAPIENTRYP glBitmap)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
GLLOADER_API void (GLAPIENTRYP glBlendFunc)(GLenum sfactor, GLenum dfactor);
GLLOADER_API void (GLAPIENTRYP glCallList)(GLuint list);
GLLOADER_API void (GLAPIENTRYP glCallLists)(GLsizei n, GLenum type, const GLvoid *lists);
GLLOADER_API void (GLAPIENTRYP glClear)(GLbitfield mask);
GLLOADER_API void (GLAPIENTRYP glClearAccum)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLLOADER_API void (GLAPIENTRYP glClearColor)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
GLLOADER_API void (GLAPIENTRYP glClearDepth)(GLclampd depth);
GLLOADER_API void (GLAPIENTRYP glClearIndex)(GLfloat c);
GLLOADER_API void (GLAPIENTRYP glClearStencil)(GLint s);
GLLOADER_API void (GLAPIENTRYP glClipPlane)(GLenum plane, const GLdouble *equation);
GLLOADER_API void (GLAPIENTRYP glColor3b)(GLbyte red, GLbyte green, GLbyte blue);
GLLOADER_API void (GLAPIENTRYP glColor3bv)(const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glColor3d)(GLdouble red, GLdouble green, GLdouble blue);
GLLOADER_API void (GLAPIENTRYP glColor3dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glColor3f)(GLfloat red, GLfloat green, GLfloat blue);
GLLOADER_API void (GLAPIENTRYP glColor3fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glColor3i)(GLint red, GLint green, GLint blue);
GLLOADER_API void (GLAPIENTRYP glColor3iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glColor3s)(GLshort red, GLshort green, GLshort blue);
GLLOADER_API void (GLAPIENTRYP glColor3sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glColor3ub)(GLubyte red, GLubyte green, GLubyte blue);
GLLOADER_API void (GLAPIENTRYP glColor3ubv)(const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glColor3ui)(GLuint red, GLuint green, GLuint blue);
GLLOADER_API void (GLAPIENTRYP glColor3uiv)(const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glColor3us)(GLushort red, GLushort green, GLushort blue);
GLLOADER_API void (GLAPIENTRYP glColor3usv)(const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glColor4b)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
GLLOADER_API void (GLAPIENTRYP glColor4bv)(const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glColor4d)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
GLLOADER_API void (GLAPIENTRYP glColor4dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glColor4f)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLLOADER_API void (GLAPIENTRYP glColor4fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glColor4i)(GLint red, GLint green, GLint blue, GLint alpha);
GLLOADER_API void (GLAPIENTRYP glColor4iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glColor4s)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
GLLOADER_API void (GLAPIENTRYP glColor4sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glColor4ub)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
GLLOADER_API void (GLAPIENTRYP glColor4ubv)(const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glColor4ui)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLLOADER_API void (GLAPIENTRYP glColor4uiv)(const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glColor4us)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
GLLOADER_API void (GLAPIENTRYP glColor4usv)(const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLLOADER_API void (GLAPIENTRYP glColorMaterial)(GLenum face, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glColorPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API void (GLAPIENTRYP glCopyPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLLOADER_API void (GLAPIENTRYP glCopyTexImage1D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
GLLOADER_API void (GLAPIENTRYP glCopyTexImage2D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLLOADER_API void (GLAPIENTRYP glCopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glCopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glCullFace)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glDeleteLists)(GLuint list, GLsizei range);
GLLOADER_API void (GLAPIENTRYP glDeleteTextures)(GLsizei n, const GLuint *textures);
GLLOADER_API void (GLAPIENTRYP glDepthFunc)(GLenum func);
GLLOADER_API void (GLAPIENTRYP glDepthMask)(GLboolean flag);
GLLOADER_API void (GLAPIENTRYP glDepthRange)(GLclampd zNear, GLclampd zFar);
GLLOADER_API void (GLAPIENTRYP glDisable)(GLenum cap);
GLLOADER_API void (GLAPIENTRYP glDisableClientState)(GLenum array);
GLLOADER_API void (GLAPIENTRYP glDrawArrays)(GLenum mode, GLint first, GLsizei count);
GLLOADER_API void (GLAPIENTRYP glDrawBuffer)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glDrawElements)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
GLLOADER_API void (GLAPIENTRYP glDrawPixels)(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API void (GLAPIENTRYP glEdgeFlag)(GLboolean flag);
GLLOADER_API void (GLAPIENTRYP glEdgeFlagPointer)(GLsizei stride, const GLvoid *pointer);
GLLOADER_API void (GLAPIENTRYP glEdgeFlagv)(const GLboolean *flag);
GLLOADER_API void (GLAPIENTRYP glEnable)(GLenum cap);
GLLOADER_API void (GLAPIENTRYP glEnableClientState)(GLenum array);
GLLOADER_API void (GLAPIENTRYP glEnd)(void);
GLLOADER_API void (GLAPIENTRYP glEndList)(void);
GLLOADER_API void (GLAPIENTRYP glEvalCoord1d)(GLdouble u);
GLLOADER_API void (GLAPIENTRYP glEvalCoord1dv)(const GLdouble *u);
GLLOADER_API void (GLAPIENTRYP glEvalCoord1f)(GLfloat u);
GLLOADER_API void (GLAPIENTRYP glEvalCoord1fv)(const GLfloat *u);
GLLOADER_API void (GLAPIENTRYP glEvalCoord2d)(GLdouble u, GLdouble v);
GLLOADER_API void (GLAPIENTRYP glEvalCoord2dv)(const GLdouble *u);
GLLOADER_API void (GLAPIENTRYP glEvalCoord2f)(GLfloat u, GLfloat v);
GLLOADER_API void (GLAPIENTRYP glEvalCoord2fv)(const GLfloat *u);
GLLOADER_API void (GLAPIENTRYP glEvalMesh1)(GLenum mode, GLint i1, GLint i2);
GLLOADER_API void (GLAPIENTRYP glEvalMesh2)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
GLLOADER_API void (GLAPIENTRYP glEvalPoint1)(GLint i);
GLLOADER_API void (GLAPIENTRYP glEvalPoint2)(GLint i, GLint j);
GLLOADER_API void (GLAPIENTRYP glFeedbackBuffer)(GLsizei size, GLenum type, GLfloat *buffer);
GLLOADER_API void (GLAPIENTRYP glFinish)(void);
GLLOADER_API void (GLAPIENTRYP glFlush)(void);
GLLOADER_API void (GLAPIENTRYP glFogf)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glFogfv)(GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glFogi)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glFogiv)(GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glFrontFace)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glFrustum)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLLOADER_API GLuint (GLAPIENTRYP glGenLists)(GLsizei range);
GLLOADER_API void (GLAPIENTRYP glGenTextures)(GLsizei n, GLuint *textures);
GLLOADER_API void (GLAPIENTRYP glGetBooleanv)(GLenum pname, GLboolean *params);
GLLOADER_API void (GLAPIENTRYP glGetClipPlane)(GLenum plane, GLdouble *equation);
GLLOADER_API void (GLAPIENTRYP glGetDoublev)(GLenum pname, GLdouble *params);
GLLOADER_API GLenum (GLAPIENTRYP glGetError)(void);
GLLOADER_API void (GLAPIENTRYP glGetFloatv)(GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetIntegerv)(GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetLightfv)(GLenum light, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetLightiv)(GLenum light, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetMapdv)(GLenum target, GLenum query, GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glGetMapfv)(GLenum target, GLenum query, GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glGetMapiv)(GLenum target, GLenum query, GLint *v);
GLLOADER_API void (GLAPIENTRYP glGetMaterialfv)(GLenum face, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetMaterialiv)(GLenum face, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetPixelMapfv)(GLenum map, GLfloat *values);
GLLOADER_API void (GLAPIENTRYP glGetPixelMapuiv)(GLenum map, GLuint *values);
GLLOADER_API void (GLAPIENTRYP glGetPixelMapusv)(GLenum map, GLushort *values);
GLLOADER_API void (GLAPIENTRYP glGetPointerv)(GLenum pname, GLvoid* *params);
GLLOADER_API void (GLAPIENTRYP glGetPolygonStipple)(GLubyte *mask);
GLLOADER_API const GLubyte * (GLAPIENTRYP glGetString)(GLenum name);
GLLOADER_API void (GLAPIENTRYP glGetTexEnvfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetTexEnviv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetTexGendv)(GLenum coord, GLenum pname, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetTexGenfv)(GLenum coord, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetTexGeniv)(GLenum coord, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
GLLOADER_API void (GLAPIENTRYP glGetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glHint)(GLenum target, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glIndexMask)(GLuint mask);
GLLOADER_API void (GLAPIENTRYP glIndexPointer)(GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API void (GLAPIENTRYP glIndexd)(GLdouble c);
GLLOADER_API void (GLAPIENTRYP glIndexdv)(const GLdouble *c);
GLLOADER_API void (GLAPIENTRYP glIndexf)(GLfloat c);
GLLOADER_API void (GLAPIENTRYP glIndexfv)(const GLfloat *c);
GLLOADER_API void (GLAPIENTRYP glIndexi)(GLint c);
GLLOADER_API void (GLAPIENTRYP glIndexiv)(const GLint *c);
GLLOADER_API void (GLAPIENTRYP glIndexs)(GLshort c);
GLLOADER_API void (GLAPIENTRYP glIndexsv)(const GLshort *c);
GLLOADER_API void (GLAPIENTRYP glIndexub)(GLubyte c);
GLLOADER_API void (GLAPIENTRYP glIndexubv)(const GLubyte *c);
GLLOADER_API void (GLAPIENTRYP glInitNames)(void);
GLLOADER_API void (GLAPIENTRYP glInterleavedArrays)(GLenum format, GLsizei stride, const GLvoid *pointer);
GLLOADER_API GLboolean (GLAPIENTRYP glIsEnabled)(GLenum cap);
GLLOADER_API GLboolean (GLAPIENTRYP glIsList)(GLuint list);
GLLOADER_API GLboolean (GLAPIENTRYP glIsTexture)(GLuint texture);
GLLOADER_API void (GLAPIENTRYP glLightModelf)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glLightModelfv)(GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glLightModeli)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glLightModeliv)(GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glLightf)(GLenum light, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glLightfv)(GLenum light, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glLighti)(GLenum light, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glLightiv)(GLenum light, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glLineStipple)(GLint factor, GLushort pattern);
GLLOADER_API void (GLAPIENTRYP glLineWidth)(GLfloat width);
GLLOADER_API void (GLAPIENTRYP glListBase)(GLuint base);
GLLOADER_API void (GLAPIENTRYP glLoadIdentity)(void);
GLLOADER_API void (GLAPIENTRYP glLoadMatrixd)(const GLdouble *m);
GLLOADER_API void (GLAPIENTRYP glLoadMatrixf)(const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glLoadName)(GLuint name);
GLLOADER_API void (GLAPIENTRYP glLogicOp)(GLenum opcode);
GLLOADER_API void (GLAPIENTRYP glMap1d)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
GLLOADER_API void (GLAPIENTRYP glMap1f)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
GLLOADER_API void (GLAPIENTRYP glMap2d)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
GLLOADER_API void (GLAPIENTRYP glMap2f)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
GLLOADER_API void (GLAPIENTRYP glMapGrid1d)(GLint un, GLdouble u1, GLdouble u2);
GLLOADER_API void (GLAPIENTRYP glMapGrid1f)(GLint un, GLfloat u1, GLfloat u2);
GLLOADER_API void (GLAPIENTRYP glMapGrid2d)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
GLLOADER_API void (GLAPIENTRYP glMapGrid2f)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
GLLOADER_API void (GLAPIENTRYP glMaterialf)(GLenum face, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glMaterialfv)(GLenum face, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glMateriali)(GLenum face, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glMaterialiv)(GLenum face, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glMatrixMode)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glMultMatrixd)(const GLdouble *m);
GLLOADER_API void (GLAPIENTRYP glMultMatrixf)(const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glNewList)(GLuint list, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glNormal3b)(GLbyte nx, GLbyte ny, GLbyte nz);
GLLOADER_API void (GLAPIENTRYP glNormal3bv)(const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glNormal3d)(GLdouble nx, GLdouble ny, GLdouble nz);
GLLOADER_API void (GLAPIENTRYP glNormal3dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glNormal3f)(GLfloat nx, GLfloat ny, GLfloat nz);
GLLOADER_API void (GLAPIENTRYP glNormal3fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glNormal3i)(GLint nx, GLint ny, GLint nz);
GLLOADER_API void (GLAPIENTRYP glNormal3iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glNormal3s)(GLshort nx, GLshort ny, GLshort nz);
GLLOADER_API void (GLAPIENTRYP glNormal3sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glNormalPointer)(GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API void (GLAPIENTRYP glOrtho)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLLOADER_API void (GLAPIENTRYP glPassThrough)(GLfloat token);
GLLOADER_API void (GLAPIENTRYP glPixelMapfv)(GLenum map, GLsizei mapsize, const GLfloat *values);
GLLOADER_API void (GLAPIENTRYP glPixelMapuiv)(GLenum map, GLsizei mapsize, const GLuint *values);
GLLOADER_API void (GLAPIENTRYP glPixelMapusv)(GLenum map, GLsizei mapsize, const GLushort *values);
GLLOADER_API void (GLAPIENTRYP glPixelStoref)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glPixelStorei)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glPixelTransferf)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glPixelTransferi)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glPixelZoom)(GLfloat xfactor, GLfloat yfactor);
GLLOADER_API void (GLAPIENTRYP glPointSize)(GLfloat size);
GLLOADER_API void (GLAPIENTRYP glPolygonMode)(GLenum face, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glPolygonOffset)(GLfloat factor, GLfloat units);
GLLOADER_API void (GLAPIENTRYP glPolygonStipple)(const GLubyte *mask);
GLLOADER_API void (GLAPIENTRYP glPopAttrib)(void);
GLLOADER_API void (GLAPIENTRYP glPopClientAttrib)(void);
GLLOADER_API void (GLAPIENTRYP glPopMatrix)(void);
GLLOADER_API void (GLAPIENTRYP glPopName)(void);
GLLOADER_API void (GLAPIENTRYP glPrioritizeTextures)(GLsizei n, const GLuint *textures, const GLclampf *priorities);
GLLOADER_API void (GLAPIENTRYP glPushAttrib)(GLbitfield mask);
GLLOADER_API void (GLAPIENTRYP glPushClientAttrib)(GLbitfield mask);
GLLOADER_API void (GLAPIENTRYP glPushMatrix)(void);
GLLOADER_API void (GLAPIENTRYP glPushName)(GLuint name);
GLLOADER_API void (GLAPIENTRYP glRasterPos2d)(GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glRasterPos2dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos2f)(GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glRasterPos2fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos2i)(GLint x, GLint y);
GLLOADER_API void (GLAPIENTRYP glRasterPos2iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos2s)(GLshort x, GLshort y);
GLLOADER_API void (GLAPIENTRYP glRasterPos2sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos3d)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glRasterPos3dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos3f)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glRasterPos3fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos3i)(GLint x, GLint y, GLint z);
GLLOADER_API void (GLAPIENTRYP glRasterPos3iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos3s)(GLshort x, GLshort y, GLshort z);
GLLOADER_API void (GLAPIENTRYP glRasterPos3sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos4d)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glRasterPos4dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos4f)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glRasterPos4fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos4i)(GLint x, GLint y, GLint z, GLint w);
GLLOADER_API void (GLAPIENTRYP glRasterPos4iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glRasterPos4s)(GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API void (GLAPIENTRYP glRasterPos4sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glReadBuffer)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
GLLOADER_API void (GLAPIENTRYP glRectd)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
GLLOADER_API void (GLAPIENTRYP glRectdv)(const GLdouble *v1, const GLdouble *v2);
GLLOADER_API void (GLAPIENTRYP glRectf)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
GLLOADER_API void (GLAPIENTRYP glRectfv)(const GLfloat *v1, const GLfloat *v2);
GLLOADER_API void (GLAPIENTRYP glRecti)(GLint x1, GLint y1, GLint x2, GLint y2);
GLLOADER_API void (GLAPIENTRYP glRectiv)(const GLint *v1, const GLint *v2);
GLLOADER_API void (GLAPIENTRYP glRects)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
GLLOADER_API void (GLAPIENTRYP glRectsv)(const GLshort *v1, const GLshort *v2);
GLLOADER_API GLint (GLAPIENTRYP glRenderMode)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glRotated)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glRotatef)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glScaled)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glScalef)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glScissor)(GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glSelectBuffer)(GLsizei size, GLuint *buffer);
GLLOADER_API void (GLAPIENTRYP glShadeModel)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glStencilFunc)(GLenum func, GLint ref, GLuint mask);
GLLOADER_API void (GLAPIENTRYP glStencilMask)(GLuint mask);
GLLOADER_API void (GLAPIENTRYP glStencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
GLLOADER_API void (GLAPIENTRYP glTexCoord1d)(GLdouble s);
GLLOADER_API void (GLAPIENTRYP glTexCoord1dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord1f)(GLfloat s);
GLLOADER_API void (GLAPIENTRYP glTexCoord1fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord1i)(GLint s);
GLLOADER_API void (GLAPIENTRYP glTexCoord1iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord1s)(GLshort s);
GLLOADER_API void (GLAPIENTRYP glTexCoord1sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2d)(GLdouble s, GLdouble t);
GLLOADER_API void (GLAPIENTRYP glTexCoord2dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2f)(GLfloat s, GLfloat t);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2i)(GLint s, GLint t);
GLLOADER_API void (GLAPIENTRYP glTexCoord2iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2s)(GLshort s, GLshort t);
GLLOADER_API void (GLAPIENTRYP glTexCoord2sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord3d)(GLdouble s, GLdouble t, GLdouble r);
GLLOADER_API void (GLAPIENTRYP glTexCoord3dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord3f)(GLfloat s, GLfloat t, GLfloat r);
GLLOADER_API void (GLAPIENTRYP glTexCoord3fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord3i)(GLint s, GLint t, GLint r);
GLLOADER_API void (GLAPIENTRYP glTexCoord3iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord3s)(GLshort s, GLshort t, GLshort r);
GLLOADER_API void (GLAPIENTRYP glTexCoord3sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord4d)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLLOADER_API void (GLAPIENTRYP glTexCoord4dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord4f)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLLOADER_API void (GLAPIENTRYP glTexCoord4fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord4i)(GLint s, GLint t, GLint r, GLint q);
GLLOADER_API void (GLAPIENTRYP glTexCoord4iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord4s)(GLshort s, GLshort t, GLshort r, GLshort q);
GLLOADER_API void (GLAPIENTRYP glTexCoord4sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glTexCoordPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API void (GLAPIENTRYP glTexEnvf)(GLenum target, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glTexEnvfv)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glTexEnvi)(GLenum target, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glTexEnviv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glTexGend)(GLenum coord, GLenum pname, GLdouble param);
GLLOADER_API void (GLAPIENTRYP glTexGendv)(GLenum coord, GLenum pname, const GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glTexGenf)(GLenum coord, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glTexGenfv)(GLenum coord, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glTexGeni)(GLenum coord, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glTexGeniv)(GLenum coord, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glTexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API void (GLAPIENTRYP glTexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API void (GLAPIENTRYP glTexParameterf)(GLenum target, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glTexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glTexParameteri)(GLenum target, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glTexParameteriv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API void (GLAPIENTRYP glTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API void (GLAPIENTRYP glTranslated)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glTranslatef)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glVertex2d)(GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glVertex2dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertex2f)(GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glVertex2fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertex2i)(GLint x, GLint y);
GLLOADER_API void (GLAPIENTRYP glVertex2iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertex2s)(GLshort x, GLshort y);
GLLOADER_API void (GLAPIENTRYP glVertex2sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertex3d)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glVertex3dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertex3f)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glVertex3fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertex3i)(GLint x, GLint y, GLint z);
GLLOADER_API void (GLAPIENTRYP glVertex3iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertex3s)(GLshort x, GLshort y, GLshort z);
GLLOADER_API void (GLAPIENTRYP glVertex3sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertex4d)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glVertex4dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertex4f)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glVertex4fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertex4i)(GLint x, GLint y, GLint z, GLint w);
GLLOADER_API void (GLAPIENTRYP glVertex4iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertex4s)(GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API void (GLAPIENTRYP glVertex4sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API void (GLAPIENTRYP glViewport)(GLint x, GLint y, GLsizei width, GLsizei height);
#else
GLLOADER_API extern void (GLAPIENTRYP glAccum)(GLenum op, GLfloat value);
GLLOADER_API extern void (GLAPIENTRYP glAlphaFunc)(GLenum func, GLclampf ref);
GLLOADER_API extern GLboolean(GLAPIENTRYP glAreTexturesResident)(GLsizei n, const GLuint *textures, GLboolean *residences);
GLLOADER_API extern void (GLAPIENTRYP glArrayElement)(GLint i);
GLLOADER_API extern void (GLAPIENTRYP glBegin)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glBindTexture)(GLenum target, GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glBitmap)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
GLLOADER_API extern void (GLAPIENTRYP glBlendFunc)(GLenum sfactor, GLenum dfactor);
GLLOADER_API extern void (GLAPIENTRYP glCallList)(GLuint list);
GLLOADER_API extern void (GLAPIENTRYP glCallLists)(GLsizei n, GLenum type, const GLvoid *lists);
GLLOADER_API extern void (GLAPIENTRYP glClear)(GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glClearAccum)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLLOADER_API extern void (GLAPIENTRYP glClearColor)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
GLLOADER_API extern void (GLAPIENTRYP glClearDepth)(GLclampd depth);
GLLOADER_API extern void (GLAPIENTRYP glClearIndex)(GLfloat c);
GLLOADER_API extern void (GLAPIENTRYP glClearStencil)(GLint s);
GLLOADER_API extern void (GLAPIENTRYP glClipPlane)(GLenum plane, const GLdouble *equation);
GLLOADER_API extern void (GLAPIENTRYP glColor3b)(GLbyte red, GLbyte green, GLbyte blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3bv)(const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glColor3d)(GLdouble red, GLdouble green, GLdouble blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glColor3f)(GLfloat red, GLfloat green, GLfloat blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glColor3i)(GLint red, GLint green, GLint blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glColor3s)(GLshort red, GLshort green, GLshort blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glColor3ub)(GLubyte red, GLubyte green, GLubyte blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3ubv)(const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glColor3ui)(GLuint red, GLuint green, GLuint blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3uiv)(const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glColor3us)(GLushort red, GLushort green, GLushort blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3usv)(const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4b)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor4bv)(const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4d)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor4dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4f)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor4fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4i)(GLint red, GLint green, GLint blue, GLint alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor4iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4s)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor4sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4ub)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor4ubv)(const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4ui)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor4uiv)(const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4us)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor4usv)(const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLLOADER_API extern void (GLAPIENTRYP glColorMaterial)(GLenum face, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glColorPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API extern void (GLAPIENTRYP glCopyPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexImage1D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexImage2D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glCullFace)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glDeleteLists)(GLuint list, GLsizei range);
GLLOADER_API extern void (GLAPIENTRYP glDeleteTextures)(GLsizei n, const GLuint *textures);
GLLOADER_API extern void (GLAPIENTRYP glDepthFunc)(GLenum func);
GLLOADER_API extern void (GLAPIENTRYP glDepthMask)(GLboolean flag);
GLLOADER_API extern void (GLAPIENTRYP glDepthRange)(GLclampd zNear, GLclampd zFar);
GLLOADER_API extern void (GLAPIENTRYP glDisable)(GLenum cap);
GLLOADER_API extern void (GLAPIENTRYP glDisableClientState)(GLenum array);
GLLOADER_API extern void (GLAPIENTRYP glDrawArrays)(GLenum mode, GLint first, GLsizei count);
GLLOADER_API extern void (GLAPIENTRYP glDrawBuffer)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glDrawElements)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
GLLOADER_API extern void (GLAPIENTRYP glDrawPixels)(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API extern void (GLAPIENTRYP glEdgeFlag)(GLboolean flag);
GLLOADER_API extern void (GLAPIENTRYP glEdgeFlagPointer)(GLsizei stride, const GLvoid *pointer);
GLLOADER_API extern void (GLAPIENTRYP glEdgeFlagv)(const GLboolean *flag);
GLLOADER_API extern void (GLAPIENTRYP glEnable)(GLenum cap);
GLLOADER_API extern void (GLAPIENTRYP glEnableClientState)(GLenum array);
GLLOADER_API extern void (GLAPIENTRYP glEnd)(void);
GLLOADER_API extern void (GLAPIENTRYP glEndList)(void);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord1d)(GLdouble u);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord1dv)(const GLdouble *u);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord1f)(GLfloat u);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord1fv)(const GLfloat *u);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord2d)(GLdouble u, GLdouble v);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord2dv)(const GLdouble *u);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord2f)(GLfloat u, GLfloat v);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord2fv)(const GLfloat *u);
GLLOADER_API extern void (GLAPIENTRYP glEvalMesh1)(GLenum mode, GLint i1, GLint i2);
GLLOADER_API extern void (GLAPIENTRYP glEvalMesh2)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
GLLOADER_API extern void (GLAPIENTRYP glEvalPoint1)(GLint i);
GLLOADER_API extern void (GLAPIENTRYP glEvalPoint2)(GLint i, GLint j);
GLLOADER_API extern void (GLAPIENTRYP glFeedbackBuffer)(GLsizei size, GLenum type, GLfloat *buffer);
GLLOADER_API extern void (GLAPIENTRYP glFinish)(void);
GLLOADER_API extern void (GLAPIENTRYP glFlush)(void);
GLLOADER_API extern void (GLAPIENTRYP glFogf)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glFogfv)(GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glFogi)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glFogiv)(GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glFrontFace)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glFrustum)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLLOADER_API extern GLuint(GLAPIENTRYP glGenLists)(GLsizei range);
GLLOADER_API extern void (GLAPIENTRYP glGenTextures)(GLsizei n, GLuint *textures);
GLLOADER_API extern void (GLAPIENTRYP glGetBooleanv)(GLenum pname, GLboolean *params);
GLLOADER_API extern void (GLAPIENTRYP glGetClipPlane)(GLenum plane, GLdouble *equation);
GLLOADER_API extern void (GLAPIENTRYP glGetDoublev)(GLenum pname, GLdouble *params);
GLLOADER_API extern GLenum(GLAPIENTRYP glGetError)(void);
GLLOADER_API extern void (GLAPIENTRYP glGetFloatv)(GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetIntegerv)(GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetLightfv)(GLenum light, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetLightiv)(GLenum light, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMapdv)(GLenum target, GLenum query, GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glGetMapfv)(GLenum target, GLenum query, GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glGetMapiv)(GLenum target, GLenum query, GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glGetMaterialfv)(GLenum face, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMaterialiv)(GLenum face, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetPixelMapfv)(GLenum map, GLfloat *values);
GLLOADER_API extern void (GLAPIENTRYP glGetPixelMapuiv)(GLenum map, GLuint *values);
GLLOADER_API extern void (GLAPIENTRYP glGetPixelMapusv)(GLenum map, GLushort *values);
GLLOADER_API extern void (GLAPIENTRYP glGetPointerv)(GLenum pname, GLvoid* *params);
GLLOADER_API extern void (GLAPIENTRYP glGetPolygonStipple)(GLubyte *mask);
GLLOADER_API extern const GLubyte * (GLAPIENTRYP glGetString)(GLenum name);
GLLOADER_API extern void (GLAPIENTRYP glGetTexEnvfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexEnviv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexGendv)(GLenum coord, GLenum pname, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexGenfv)(GLenum coord, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexGeniv)(GLenum coord, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glHint)(GLenum target, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glIndexMask)(GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glIndexPointer)(GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API extern void (GLAPIENTRYP glIndexd)(GLdouble c);
GLLOADER_API extern void (GLAPIENTRYP glIndexdv)(const GLdouble *c);
GLLOADER_API extern void (GLAPIENTRYP glIndexf)(GLfloat c);
GLLOADER_API extern void (GLAPIENTRYP glIndexfv)(const GLfloat *c);
GLLOADER_API extern void (GLAPIENTRYP glIndexi)(GLint c);
GLLOADER_API extern void (GLAPIENTRYP glIndexiv)(const GLint *c);
GLLOADER_API extern void (GLAPIENTRYP glIndexs)(GLshort c);
GLLOADER_API extern void (GLAPIENTRYP glIndexsv)(const GLshort *c);
GLLOADER_API extern void (GLAPIENTRYP glIndexub)(GLubyte c);
GLLOADER_API extern void (GLAPIENTRYP glIndexubv)(const GLubyte *c);
GLLOADER_API extern void (GLAPIENTRYP glInitNames)(void);
GLLOADER_API extern void (GLAPIENTRYP glInterleavedArrays)(GLenum format, GLsizei stride, const GLvoid *pointer);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsEnabled)(GLenum cap);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsList)(GLuint list);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsTexture)(GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glLightModelf)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glLightModelfv)(GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glLightModeli)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glLightModeliv)(GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glLightf)(GLenum light, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glLightfv)(GLenum light, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glLighti)(GLenum light, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glLightiv)(GLenum light, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glLineStipple)(GLint factor, GLushort pattern);
GLLOADER_API extern void (GLAPIENTRYP glLineWidth)(GLfloat width);
GLLOADER_API extern void (GLAPIENTRYP glListBase)(GLuint base);
GLLOADER_API extern void (GLAPIENTRYP glLoadIdentity)(void);
GLLOADER_API extern void (GLAPIENTRYP glLoadMatrixd)(const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glLoadMatrixf)(const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glLoadName)(GLuint name);
GLLOADER_API extern void (GLAPIENTRYP glLogicOp)(GLenum opcode);
GLLOADER_API extern void (GLAPIENTRYP glMap1d)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
GLLOADER_API extern void (GLAPIENTRYP glMap1f)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glMap2d)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
GLLOADER_API extern void (GLAPIENTRYP glMap2f)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glMapGrid1d)(GLint un, GLdouble u1, GLdouble u2);
GLLOADER_API extern void (GLAPIENTRYP glMapGrid1f)(GLint un, GLfloat u1, GLfloat u2);
GLLOADER_API extern void (GLAPIENTRYP glMapGrid2d)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
GLLOADER_API extern void (GLAPIENTRYP glMapGrid2f)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
GLLOADER_API extern void (GLAPIENTRYP glMaterialf)(GLenum face, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glMaterialfv)(GLenum face, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glMateriali)(GLenum face, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glMaterialiv)(GLenum face, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glMatrixMode)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glMultMatrixd)(const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glMultMatrixf)(const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glNewList)(GLuint list, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glNormal3b)(GLbyte nx, GLbyte ny, GLbyte nz);
GLLOADER_API extern void (GLAPIENTRYP glNormal3bv)(const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glNormal3d)(GLdouble nx, GLdouble ny, GLdouble nz);
GLLOADER_API extern void (GLAPIENTRYP glNormal3dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glNormal3f)(GLfloat nx, GLfloat ny, GLfloat nz);
GLLOADER_API extern void (GLAPIENTRYP glNormal3fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glNormal3i)(GLint nx, GLint ny, GLint nz);
GLLOADER_API extern void (GLAPIENTRYP glNormal3iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glNormal3s)(GLshort nx, GLshort ny, GLshort nz);
GLLOADER_API extern void (GLAPIENTRYP glNormal3sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glNormalPointer)(GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API extern void (GLAPIENTRYP glOrtho)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLLOADER_API extern void (GLAPIENTRYP glPassThrough)(GLfloat token);
GLLOADER_API extern void (GLAPIENTRYP glPixelMapfv)(GLenum map, GLsizei mapsize, const GLfloat *values);
GLLOADER_API extern void (GLAPIENTRYP glPixelMapuiv)(GLenum map, GLsizei mapsize, const GLuint *values);
GLLOADER_API extern void (GLAPIENTRYP glPixelMapusv)(GLenum map, GLsizei mapsize, const GLushort *values);
GLLOADER_API extern void (GLAPIENTRYP glPixelStoref)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPixelStorei)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glPixelTransferf)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPixelTransferi)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glPixelZoom)(GLfloat xfactor, GLfloat yfactor);
GLLOADER_API extern void (GLAPIENTRYP glPointSize)(GLfloat size);
GLLOADER_API extern void (GLAPIENTRYP glPolygonMode)(GLenum face, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glPolygonOffset)(GLfloat factor, GLfloat units);
GLLOADER_API extern void (GLAPIENTRYP glPolygonStipple)(const GLubyte *mask);
GLLOADER_API extern void (GLAPIENTRYP glPopAttrib)(void);
GLLOADER_API extern void (GLAPIENTRYP glPopClientAttrib)(void);
GLLOADER_API extern void (GLAPIENTRYP glPopMatrix)(void);
GLLOADER_API extern void (GLAPIENTRYP glPopName)(void);
GLLOADER_API extern void (GLAPIENTRYP glPrioritizeTextures)(GLsizei n, const GLuint *textures, const GLclampf *priorities);
GLLOADER_API extern void (GLAPIENTRYP glPushAttrib)(GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glPushClientAttrib)(GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glPushMatrix)(void);
GLLOADER_API extern void (GLAPIENTRYP glPushName)(GLuint name);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2d)(GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2f)(GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2i)(GLint x, GLint y);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2s)(GLshort x, GLshort y);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3d)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3f)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3i)(GLint x, GLint y, GLint z);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3s)(GLshort x, GLshort y, GLshort z);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4d)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4f)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4i)(GLint x, GLint y, GLint z, GLint w);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4s)(GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glReadBuffer)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
GLLOADER_API extern void (GLAPIENTRYP glRectd)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
GLLOADER_API extern void (GLAPIENTRYP glRectdv)(const GLdouble *v1, const GLdouble *v2);
GLLOADER_API extern void (GLAPIENTRYP glRectf)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
GLLOADER_API extern void (GLAPIENTRYP glRectfv)(const GLfloat *v1, const GLfloat *v2);
GLLOADER_API extern void (GLAPIENTRYP glRecti)(GLint x1, GLint y1, GLint x2, GLint y2);
GLLOADER_API extern void (GLAPIENTRYP glRectiv)(const GLint *v1, const GLint *v2);
GLLOADER_API extern void (GLAPIENTRYP glRects)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
GLLOADER_API extern void (GLAPIENTRYP glRectsv)(const GLshort *v1, const GLshort *v2);
GLLOADER_API extern GLint(GLAPIENTRYP glRenderMode)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glRotated)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glRotatef)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glScaled)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glScalef)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glScissor)(GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glSelectBuffer)(GLsizei size, GLuint *buffer);
GLLOADER_API extern void (GLAPIENTRYP glShadeModel)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glStencilFunc)(GLenum func, GLint ref, GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glStencilMask)(GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glStencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1d)(GLdouble s);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1f)(GLfloat s);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1i)(GLint s);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1s)(GLshort s);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2d)(GLdouble s, GLdouble t);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2f)(GLfloat s, GLfloat t);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2i)(GLint s, GLint t);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2s)(GLshort s, GLshort t);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3d)(GLdouble s, GLdouble t, GLdouble r);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3f)(GLfloat s, GLfloat t, GLfloat r);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3i)(GLint s, GLint t, GLint r);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3s)(GLshort s, GLshort t, GLshort r);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4d)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4f)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4i)(GLint s, GLint t, GLint r, GLint q);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4s)(GLshort s, GLshort t, GLshort r, GLshort q);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API extern void (GLAPIENTRYP glTexEnvf)(GLenum target, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glTexEnvfv)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glTexEnvi)(GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glTexEnviv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTexGend)(GLenum coord, GLenum pname, GLdouble param);
GLLOADER_API extern void (GLAPIENTRYP glTexGendv)(GLenum coord, GLenum pname, const GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glTexGenf)(GLenum coord, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glTexGenfv)(GLenum coord, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glTexGeni)(GLenum coord, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glTexGeniv)(GLenum coord, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterf)(GLenum target, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glTexParameteri)(GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glTexParameteriv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTranslated)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glTranslatef)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glVertex2d)(GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glVertex2dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex2f)(GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glVertex2fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex2i)(GLint x, GLint y);
GLLOADER_API extern void (GLAPIENTRYP glVertex2iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex2s)(GLshort x, GLshort y);
GLLOADER_API extern void (GLAPIENTRYP glVertex2sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex3d)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glVertex3dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex3f)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glVertex3fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex3i)(GLint x, GLint y, GLint z);
GLLOADER_API extern void (GLAPIENTRYP glVertex3iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex3s)(GLshort x, GLshort y, GLshort z);
GLLOADER_API extern void (GLAPIENTRYP glVertex3sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex4d)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glVertex4dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex4f)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glVertex4fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex4i)(GLint x, GLint y, GLint z, GLint w);
GLLOADER_API extern void (GLAPIENTRYP glVertex4iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex4s)(GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API extern void (GLAPIENTRYP glVertex4sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLLOADER_API extern void (GLAPIENTRYP glViewport)(GLint x, GLint y, GLsizei width, GLsizei height);
#endif

#ifndef GL_VERSION_1_0
#define GL_VERSION_1_0 1
typedef void GLvoid;
typedef unsigned int GLenum;
typedef float GLfloat;
typedef int GLint;
typedef int GLsizei;
typedef unsigned int GLbitfield;
typedef double GLdouble;
typedef unsigned int GLuint;
typedef unsigned char GLboolean;
typedef unsigned char GLubyte;
typedef void (GLAPIENTRYP PFNGLCULLFACEPROC) (GLenum mode);
typedef void (GLAPIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);
typedef void (GLAPIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);
typedef void (GLAPIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);
typedef void (GLAPIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);
typedef void (GLAPIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);
typedef void (GLAPIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLDRAWBUFFERPROC) (GLenum buf);
typedef void (GLAPIENTRYP PFNGLCLEARPROC) (GLbitfield mask);
typedef void (GLAPIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAPIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);
typedef void (GLAPIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);
typedef void (GLAPIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);
typedef void (GLAPIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (GLAPIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);
typedef void (GLAPIENTRYP PFNGLDISABLEPROC) (GLenum cap);
typedef void (GLAPIENTRYP PFNGLENABLEPROC) (GLenum cap);
typedef void (GLAPIENTRYP PFNGLFINISHPROC) (void);
typedef void (GLAPIENTRYP PFNGLFLUSHPROC) (void);
typedef void (GLAPIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);
typedef void (GLAPIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);
typedef void (GLAPIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);
typedef void (GLAPIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);
typedef void (GLAPIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);
typedef void (GLAPIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLREADBUFFERPROC) (GLenum src);
typedef void (GLAPIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
typedef void (GLAPIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);
typedef void (GLAPIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *data);
typedef GLenum(GLAPIENTRYP PFNGLGETERRORPROC) (void);
typedef void (GLAPIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);
typedef void (GLAPIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);
typedef const GLubyte *(GLAPIENTRYP PFNGLGETSTRINGPROC) (GLenum name);
typedef void (GLAPIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
typedef void (GLAPIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);
typedef GLboolean(GLAPIENTRYP PFNGLISENABLEDPROC) (GLenum cap);
typedef void (GLAPIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);
typedef void (GLAPIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glCullFace)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glFrontFace)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glHint)(GLenum target, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glLineWidth)(GLfloat width);
GLLOADER_API extern void (GLAPIENTRYP glPointSize)(GLfloat size);
GLLOADER_API extern void (GLAPIENTRYP glPolygonMode)(GLenum face, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glScissor)(GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterf)(GLenum target, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glTexParameteri)(GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glTexParameteriv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glDrawBuffer)(GLenum buf);
GLLOADER_API extern void (GLAPIENTRYP glClear)(GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLLOADER_API extern void (GLAPIENTRYP glClearStencil)(GLint s);
GLLOADER_API extern void (GLAPIENTRYP glClearDepth)(GLdouble depth);
GLLOADER_API extern void (GLAPIENTRYP glStencilMask)(GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLLOADER_API extern void (GLAPIENTRYP glDepthMask)(GLboolean flag);
GLLOADER_API extern void (GLAPIENTRYP glDisable)(GLenum cap);
GLLOADER_API extern void (GLAPIENTRYP glEnable)(GLenum cap);
GLLOADER_API extern void (GLAPIENTRYP glFinish)(void);
GLLOADER_API extern void (GLAPIENTRYP glFlush)(void);
GLLOADER_API extern void (GLAPIENTRYP glBlendFunc)(GLenum sfactor, GLenum dfactor);
GLLOADER_API extern void (GLAPIENTRYP glLogicOp)(GLenum opcode);
GLLOADER_API extern void (GLAPIENTRYP glStencilFunc)(GLenum func, GLint ref, GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glStencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
GLLOADER_API extern void (GLAPIENTRYP glDepthFunc)(GLenum func);
GLLOADER_API extern void (GLAPIENTRYP glPixelStoref)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPixelStorei)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glReadBuffer)(GLenum src);
GLLOADER_API extern void (GLAPIENTRYP glReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetBooleanv)(GLenum pname, GLboolean *data);
GLLOADER_API extern void (GLAPIENTRYP glGetDoublev)(GLenum pname, GLdouble *data);
GLLOADER_API extern GLenum(GLAPIENTRYP glGetError)(void);
GLLOADER_API extern void (GLAPIENTRYP glGetFloatv)(GLenum pname, GLfloat *data);
GLLOADER_API extern void (GLAPIENTRYP glGetIntegerv)(GLenum pname, GLint *data);
GLLOADER_API extern const GLubyte *(GLAPIENTRYP glGetString)(GLenum name);
GLLOADER_API extern void (GLAPIENTRYP glGetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsEnabled)(GLenum cap);
GLLOADER_API extern void (GLAPIENTRYP glDepthRange)(GLdouble near, GLdouble far);
GLLOADER_API extern void (GLAPIENTRYP glViewport)(GLint x, GLint y, GLsizei width, GLsizei height);
#endif /* GL_VERSION_1_0 */

#ifndef GL_VERSION_1_1
#define GL_VERSION_1_1 1
typedef float GLclampf;
typedef double GLclampd;
#define GL_DEPTH_BUFFER_BIT               0x00000100
#define GL_STENCIL_BUFFER_BIT             0x00000400
#define GL_COLOR_BUFFER_BIT               0x00004000
#define GL_FALSE                          0
#define GL_TRUE                           1
#define GL_POINTS                         0x0000
#define GL_LINES                          0x0001
#define GL_LINE_LOOP                      0x0002
#define GL_LINE_STRIP                     0x0003
#define GL_TRIANGLES                      0x0004
#define GL_TRIANGLE_STRIP                 0x0005
#define GL_TRIANGLE_FAN                   0x0006
#define GL_QUADS                          0x0007
#define GL_NEVER                          0x0200
#define GL_LESS                           0x0201
#define GL_EQUAL                          0x0202
#define GL_LEQUAL                         0x0203
#define GL_GREATER                        0x0204
#define GL_NOTEQUAL                       0x0205
#define GL_GEQUAL                         0x0206
#define GL_ALWAYS                         0x0207
#define GL_ZERO                           0
#define GL_ONE                            1
#define GL_SRC_COLOR                      0x0300
#define GL_ONE_MINUS_SRC_COLOR            0x0301
#define GL_SRC_ALPHA                      0x0302
#define GL_ONE_MINUS_SRC_ALPHA            0x0303
#define GL_DST_ALPHA                      0x0304
#define GL_ONE_MINUS_DST_ALPHA            0x0305
#define GL_DST_COLOR                      0x0306
#define GL_ONE_MINUS_DST_COLOR            0x0307
#define GL_SRC_ALPHA_SATURATE             0x0308
#define GL_NONE                           0
#define GL_FRONT_LEFT                     0x0400
#define GL_FRONT_RIGHT                    0x0401
#define GL_BACK_LEFT                      0x0402
#define GL_BACK_RIGHT                     0x0403
#define GL_FRONT                          0x0404
#define GL_BACK                           0x0405
#define GL_LEFT                           0x0406
#define GL_RIGHT                          0x0407
#define GL_FRONT_AND_BACK                 0x0408
#define GL_NO_ERROR                       0
#define GL_INVALID_ENUM                   0x0500
#define GL_INVALID_VALUE                  0x0501
#define GL_INVALID_OPERATION              0x0502
#define GL_OUT_OF_MEMORY                  0x0505
#define GL_CW                             0x0900
#define GL_CCW                            0x0901
#define GL_POINT_SIZE                     0x0B11
#define GL_POINT_SIZE_RANGE               0x0B12
#define GL_POINT_SIZE_GRANULARITY         0x0B13
#define GL_LINE_SMOOTH                    0x0B20
#define GL_LINE_WIDTH                     0x0B21
#define GL_LINE_WIDTH_RANGE               0x0B22
#define GL_LINE_WIDTH_GRANULARITY         0x0B23
#define GL_POLYGON_MODE                   0x0B40
#define GL_POLYGON_SMOOTH                 0x0B41
#define GL_CULL_FACE                      0x0B44
#define GL_CULL_FACE_MODE                 0x0B45
#define GL_FRONT_FACE                     0x0B46
#define GL_DEPTH_RANGE                    0x0B70
#define GL_DEPTH_TEST                     0x0B71
#define GL_DEPTH_WRITEMASK                0x0B72
#define GL_DEPTH_CLEAR_VALUE              0x0B73
#define GL_DEPTH_FUNC                     0x0B74
#define GL_STENCIL_TEST                   0x0B90
#define GL_STENCIL_CLEAR_VALUE            0x0B91
#define GL_STENCIL_FUNC                   0x0B92
#define GL_STENCIL_VALUE_MASK             0x0B93
#define GL_STENCIL_FAIL                   0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL        0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS        0x0B96
#define GL_STENCIL_REF                    0x0B97
#define GL_STENCIL_WRITEMASK              0x0B98
#define GL_VIEWPORT                       0x0BA2
#define GL_DITHER                         0x0BD0
#define GL_BLEND_DST                      0x0BE0
#define GL_BLEND_SRC                      0x0BE1
#define GL_BLEND                          0x0BE2
#define GL_LOGIC_OP_MODE                  0x0BF0
#define GL_COLOR_LOGIC_OP                 0x0BF2
#define GL_DRAW_BUFFER                    0x0C01
#define GL_READ_BUFFER                    0x0C02
#define GL_SCISSOR_BOX                    0x0C10
#define GL_SCISSOR_TEST                   0x0C11
#define GL_COLOR_CLEAR_VALUE              0x0C22
#define GL_COLOR_WRITEMASK                0x0C23
#define GL_DOUBLEBUFFER                   0x0C32
#define GL_STEREO                         0x0C33
#define GL_LINE_SMOOTH_HINT               0x0C52
#define GL_POLYGON_SMOOTH_HINT            0x0C53
#define GL_UNPACK_SWAP_BYTES              0x0CF0
#define GL_UNPACK_LSB_FIRST               0x0CF1
#define GL_UNPACK_ROW_LENGTH              0x0CF2
#define GL_UNPACK_SKIP_ROWS               0x0CF3
#define GL_UNPACK_SKIP_PIXELS             0x0CF4
#define GL_UNPACK_ALIGNMENT               0x0CF5
#define GL_PACK_SWAP_BYTES                0x0D00
#define GL_PACK_LSB_FIRST                 0x0D01
#define GL_PACK_ROW_LENGTH                0x0D02
#define GL_PACK_SKIP_ROWS                 0x0D03
#define GL_PACK_SKIP_PIXELS               0x0D04
#define GL_PACK_ALIGNMENT                 0x0D05
#define GL_MAX_TEXTURE_SIZE               0x0D33
#define GL_MAX_VIEWPORT_DIMS              0x0D3A
#define GL_SUBPIXEL_BITS                  0x0D50
#define GL_TEXTURE_1D                     0x0DE0
#define GL_TEXTURE_2D                     0x0DE1
#define GL_POLYGON_OFFSET_UNITS           0x2A00
#define GL_POLYGON_OFFSET_POINT           0x2A01
#define GL_POLYGON_OFFSET_LINE            0x2A02
#define GL_POLYGON_OFFSET_FILL            0x8037
#define GL_POLYGON_OFFSET_FACTOR          0x8038
#define GL_TEXTURE_BINDING_1D             0x8068
#define GL_TEXTURE_BINDING_2D             0x8069
#define GL_TEXTURE_WIDTH                  0x1000
#define GL_TEXTURE_HEIGHT                 0x1001
#define GL_TEXTURE_INTERNAL_FORMAT        0x1003
#define GL_TEXTURE_BORDER_COLOR           0x1004
#define GL_TEXTURE_RED_SIZE               0x805C
#define GL_TEXTURE_GREEN_SIZE             0x805D
#define GL_TEXTURE_BLUE_SIZE              0x805E
#define GL_TEXTURE_ALPHA_SIZE             0x805F
#define GL_DONT_CARE                      0x1100
#define GL_FASTEST                        0x1101
#define GL_NICEST                         0x1102
#define GL_BYTE                           0x1400
#define GL_UNSIGNED_BYTE                  0x1401
#define GL_SHORT                          0x1402
#define GL_UNSIGNED_SHORT                 0x1403
#define GL_INT                            0x1404
#define GL_UNSIGNED_INT                   0x1405
#define GL_FLOAT                          0x1406
#define GL_DOUBLE                         0x140A
#define GL_STACK_OVERFLOW                 0x0503
#define GL_STACK_UNDERFLOW                0x0504
#define GL_CLEAR                          0x1500
#define GL_AND                            0x1501
#define GL_AND_REVERSE                    0x1502
#define GL_COPY                           0x1503
#define GL_AND_INVERTED                   0x1504
#define GL_NOOP                           0x1505
#define GL_XOR                            0x1506
#define GL_OR                             0x1507
#define GL_NOR                            0x1508
#define GL_EQUIV                          0x1509
#define GL_INVERT                         0x150A
#define GL_OR_REVERSE                     0x150B
#define GL_COPY_INVERTED                  0x150C
#define GL_OR_INVERTED                    0x150D
#define GL_NAND                           0x150E
#define GL_SET                            0x150F
#define GL_TEXTURE                        0x1702
#define GL_COLOR                          0x1800
#define GL_DEPTH                          0x1801
#define GL_STENCIL                        0x1802
#define GL_STENCIL_INDEX                  0x1901
#define GL_DEPTH_COMPONENT                0x1902
#define GL_RED                            0x1903
#define GL_GREEN                          0x1904
#define GL_BLUE                           0x1905
#define GL_ALPHA                          0x1906
#define GL_RGB                            0x1907
#define GL_RGBA                           0x1908
#define GL_POINT                          0x1B00
#define GL_LINE                           0x1B01
#define GL_FILL                           0x1B02
#define GL_KEEP                           0x1E00
#define GL_REPLACE                        0x1E01
#define GL_INCR                           0x1E02
#define GL_DECR                           0x1E03
#define GL_VENDOR                         0x1F00
#define GL_RENDERER                       0x1F01
#define GL_VERSION                        0x1F02
#define GL_EXTENSIONS                     0x1F03
#define GL_NEAREST                        0x2600
#define GL_LINEAR                         0x2601
#define GL_NEAREST_MIPMAP_NEAREST         0x2700
#define GL_LINEAR_MIPMAP_NEAREST          0x2701
#define GL_NEAREST_MIPMAP_LINEAR          0x2702
#define GL_LINEAR_MIPMAP_LINEAR           0x2703
#define GL_TEXTURE_MAG_FILTER             0x2800
#define GL_TEXTURE_MIN_FILTER             0x2801
#define GL_TEXTURE_WRAP_S                 0x2802
#define GL_TEXTURE_WRAP_T                 0x2803
#define GL_PROXY_TEXTURE_1D               0x8063
#define GL_PROXY_TEXTURE_2D               0x8064
#define GL_REPEAT                         0x2901
#define GL_R3_G3_B2                       0x2A10
#define GL_RGB4                           0x804F
#define GL_RGB5                           0x8050
#define GL_RGB8                           0x8051
#define GL_RGB10                          0x8052
#define GL_RGB12                          0x8053
#define GL_RGB16                          0x8054
#define GL_RGBA2                          0x8055
#define GL_RGBA4                          0x8056
#define GL_RGB5_A1                        0x8057
#define GL_RGBA8                          0x8058
#define GL_RGB10_A2                       0x8059
#define GL_RGBA12                         0x805A
#define GL_RGBA16                         0x805B
#define GL_VERTEX_ARRAY                   0x8074
typedef void (GLAPIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices);
typedef void (GLAPIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);
typedef void (GLAPIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);
typedef void (GLAPIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAPIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAPIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);
typedef void (GLAPIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);
typedef void (GLAPIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);
typedef GLboolean(GLAPIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glDrawArrays)(GLenum mode, GLint first, GLsizei count);
GLLOADER_API extern void (GLAPIENTRYP glDrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
GLLOADER_API extern void (GLAPIENTRYP glGetPointerv)(GLenum pname, void **params);
GLLOADER_API extern void (GLAPIENTRYP glPolygonOffset)(GLfloat factor, GLfloat units);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glBindTexture)(GLenum target, GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glDeleteTextures)(GLsizei n, const GLuint *textures);
GLLOADER_API extern void (GLAPIENTRYP glGenTextures)(GLsizei n, GLuint *textures);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsTexture)(GLuint texture);
#endif /* GL_VERSION_1_1 */

//#ifndef GL_VERSION_2_0
//#define GL_VERSION_2_0 1
typedef short GLshort;
typedef signed char GLbyte;
typedef unsigned short GLushort;
//#endif /* GL_VERSION_2_0 */

#endif // __glcorearb_h_

// A tweaked version of glext.h is pasted inline between __glext_h_.
// The license associated to this chunk of code is also included inline.
// That license applies to that part of the code only.
// The rest of the code in this file is under the license at the top of this file.
#ifndef __glext_h_
#define __glext_h_ 1

/*
** Copyright (c) 2013-2015 The Khronos Group Inc.
**
** Permission is hereby granted, free of charge, to any person obtaining a
** copy of this software and/or associated documentation files (the
** "Materials"), to deal in the Materials without restriction, including
** without limitation the rights to use, copy, modify, merge, publish,
** distribute, sublicense, and/or sell copies of the Materials, and to
** permit persons to whom the Materials are furnished to do so, subject to
** the following conditions:
**
** The above copyright notice and this permission notice shall be included
** in all copies or substantial portions of the Materials.
**
** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
*/
/*
** This header is generated from the Khronos OpenGL / OpenGL ES XML
** API Registry. The current version of the Registry, generator scripts
** used to make the header, and the header can be found at
**   http://www.opengl.org/registry/
**
** Khronos $Revision: 32348 $ on $Date: 2016-01-08 06:02:24 -0500 (Fri, 08 Jan 2016) $
*/

#define GL_GLEXT_VERSION 20160108


/* Generated C header for:
* API: gl
* Profile: compatibility
* Versions considered: .*
* Versions emitted: 1\.[2-9]|[234]\.[0-9]
* Default extensions included: gl
* Additional extensions included: _nomatch_^
* Extensions removed: _nomatch_^
*/

#ifndef GL_VERSION_1_2
#define GL_VERSION_1_2 1
#define GL_UNSIGNED_BYTE_3_3_2            0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4         0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1         0x8034
#define GL_UNSIGNED_INT_8_8_8_8           0x8035
#define GL_UNSIGNED_INT_10_10_10_2        0x8036
#define GL_TEXTURE_BINDING_3D             0x806A
#define GL_PACK_SKIP_IMAGES               0x806B
#define GL_PACK_IMAGE_HEIGHT              0x806C
#define GL_UNPACK_SKIP_IMAGES             0x806D
#define GL_UNPACK_IMAGE_HEIGHT            0x806E
#define GL_TEXTURE_3D                     0x806F
#define GL_PROXY_TEXTURE_3D               0x8070
#define GL_TEXTURE_DEPTH                  0x8071
#define GL_TEXTURE_WRAP_R                 0x8072
#define GL_MAX_3D_TEXTURE_SIZE            0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV        0x8362
#define GL_UNSIGNED_SHORT_5_6_5           0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV       0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV     0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV     0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV       0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV    0x8368
#define GL_BGR                            0x80E0
#define GL_BGRA                           0x80E1
#define GL_MAX_ELEMENTS_VERTICES          0x80E8
#define GL_MAX_ELEMENTS_INDICES           0x80E9
#define GL_CLAMP_TO_EDGE                  0x812F
#define GL_TEXTURE_MIN_LOD                0x813A
#define GL_TEXTURE_MAX_LOD                0x813B
#define GL_TEXTURE_BASE_LEVEL             0x813C
#define GL_TEXTURE_MAX_LEVEL              0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE        0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY  0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE        0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY  0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE       0x846E
#define GL_RESCALE_NORMAL                 0x803A
#define GL_LIGHT_MODEL_COLOR_CONTROL      0x81F8
#define GL_SINGLE_COLOR                   0x81F9
#define GL_SEPARATE_SPECULAR_COLOR        0x81FA
#define GL_ALIASED_POINT_SIZE_RANGE       0x846D
typedef void (GLAPIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
typedef void (GLAPIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glDrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
GLLOADER_API extern void (GLAPIENTRYP glTexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif /* GL_VERSION_1_2 */

#ifndef GL_VERSION_1_3
#define GL_VERSION_1_3 1
#define GL_TEXTURE0                       0x84C0
#define GL_TEXTURE1                       0x84C1
#define GL_TEXTURE2                       0x84C2
#define GL_TEXTURE3                       0x84C3
#define GL_TEXTURE4                       0x84C4
#define GL_TEXTURE5                       0x84C5
#define GL_TEXTURE6                       0x84C6
#define GL_TEXTURE7                       0x84C7
#define GL_TEXTURE8                       0x84C8
#define GL_TEXTURE9                       0x84C9
#define GL_TEXTURE10                      0x84CA
#define GL_TEXTURE11                      0x84CB
#define GL_TEXTURE12                      0x84CC
#define GL_TEXTURE13                      0x84CD
#define GL_TEXTURE14                      0x84CE
#define GL_TEXTURE15                      0x84CF
#define GL_TEXTURE16                      0x84D0
#define GL_TEXTURE17                      0x84D1
#define GL_TEXTURE18                      0x84D2
#define GL_TEXTURE19                      0x84D3
#define GL_TEXTURE20                      0x84D4
#define GL_TEXTURE21                      0x84D5
#define GL_TEXTURE22                      0x84D6
#define GL_TEXTURE23                      0x84D7
#define GL_TEXTURE24                      0x84D8
#define GL_TEXTURE25                      0x84D9
#define GL_TEXTURE26                      0x84DA
#define GL_TEXTURE27                      0x84DB
#define GL_TEXTURE28                      0x84DC
#define GL_TEXTURE29                      0x84DD
#define GL_TEXTURE30                      0x84DE
#define GL_TEXTURE31                      0x84DF
#define GL_ACTIVE_TEXTURE                 0x84E0
#define GL_MULTISAMPLE                    0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE       0x809E
#define GL_SAMPLE_ALPHA_TO_ONE            0x809F
#define GL_SAMPLE_COVERAGE                0x80A0
#define GL_SAMPLE_BUFFERS                 0x80A8
#define GL_SAMPLES                        0x80A9
#define GL_SAMPLE_COVERAGE_VALUE          0x80AA
#define GL_SAMPLE_COVERAGE_INVERT         0x80AB
#define GL_TEXTURE_CUBE_MAP               0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP       0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X    0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X    0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y    0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y    0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z    0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z    0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP         0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE      0x851C
#define GL_COMPRESSED_RGB                 0x84ED
#define GL_COMPRESSED_RGBA                0x84EE
#define GL_TEXTURE_COMPRESSION_HINT       0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE  0x86A0
#define GL_TEXTURE_COMPRESSED             0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS     0x86A3
#define GL_CLAMP_TO_BORDER                0x812D
#define GL_CLIENT_ACTIVE_TEXTURE          0x84E1
#define GL_MAX_TEXTURE_UNITS              0x84E2
#define GL_TRANSPOSE_MODELVIEW_MATRIX     0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX    0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX       0x84E5
#define GL_TRANSPOSE_COLOR_MATRIX         0x84E6
#define GL_MULTISAMPLE_BIT                0x20000000
#define GL_NORMAL_MAP                     0x8511
#define GL_REFLECTION_MAP                 0x8512
#define GL_COMPRESSED_ALPHA               0x84E9
#define GL_COMPRESSED_LUMINANCE           0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA     0x84EB
#define GL_COMPRESSED_INTENSITY           0x84EC
#define GL_COMBINE                        0x8570
#define GL_COMBINE_RGB                    0x8571
#define GL_COMBINE_ALPHA                  0x8572
#define GL_SOURCE0_RGB                    0x8580
#define GL_SOURCE1_RGB                    0x8581
#define GL_SOURCE2_RGB                    0x8582
#define GL_SOURCE0_ALPHA                  0x8588
#define GL_SOURCE1_ALPHA                  0x8589
#define GL_SOURCE2_ALPHA                  0x858A
#define GL_OPERAND0_RGB                   0x8590
#define GL_OPERAND1_RGB                   0x8591
#define GL_OPERAND2_RGB                   0x8592
#define GL_OPERAND0_ALPHA                 0x8598
#define GL_OPERAND1_ALPHA                 0x8599
#define GL_OPERAND2_ALPHA                 0x859A
#define GL_RGB_SCALE                      0x8573
#define GL_ADD_SIGNED                     0x8574
#define GL_INTERPOLATE                    0x8575
#define GL_SUBTRACT                       0x84E7
#define GL_CONSTANT                       0x8576
#define GL_PRIMARY_COLOR                  0x8577
#define GL_PREVIOUS                       0x8578
#define GL_DOT3_RGB                       0x86AE
#define GL_DOT3_RGBA                      0x86AF
typedef void (GLAPIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);
typedef void (GLAPIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);
typedef void (GLAPIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);
typedef void (GLAPIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glActiveTexture)(GLenum texture);
GLLOADER_API extern void (GLAPIENTRYP glSampleCoverage)(GLfloat value, GLboolean invert);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glGetCompressedTexImage)(GLenum target, GLint level, void *img);
GLLOADER_API extern void (GLAPIENTRYP glClientActiveTexture)(GLenum texture);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1d)(GLenum target, GLdouble s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1dv)(GLenum target, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1f)(GLenum target, GLfloat s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1fv)(GLenum target, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1i)(GLenum target, GLint s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1iv)(GLenum target, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1s)(GLenum target, GLshort s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1sv)(GLenum target, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2d)(GLenum target, GLdouble s, GLdouble t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2dv)(GLenum target, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2f)(GLenum target, GLfloat s, GLfloat t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2fv)(GLenum target, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2i)(GLenum target, GLint s, GLint t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2iv)(GLenum target, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2s)(GLenum target, GLshort s, GLshort t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2sv)(GLenum target, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3d)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3dv)(GLenum target, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3f)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3fv)(GLenum target, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3i)(GLenum target, GLint s, GLint t, GLint r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3iv)(GLenum target, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3s)(GLenum target, GLshort s, GLshort t, GLshort r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3sv)(GLenum target, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4d)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4dv)(GLenum target, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4f)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4fv)(GLenum target, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4i)(GLenum target, GLint s, GLint t, GLint r, GLint q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4iv)(GLenum target, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4s)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4sv)(GLenum target, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glLoadTransposeMatrixf)(const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glLoadTransposeMatrixd)(const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glMultTransposeMatrixf)(const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMultTransposeMatrixd)(const GLdouble *m);
#endif /* GL_VERSION_1_3 */

#ifndef GL_VERSION_1_4
#define GL_VERSION_1_4 1
#define GL_BLEND_DST_RGB                  0x80C8
#define GL_BLEND_SRC_RGB                  0x80C9
#define GL_BLEND_DST_ALPHA                0x80CA
#define GL_BLEND_SRC_ALPHA                0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE      0x8128
#define GL_DEPTH_COMPONENT16              0x81A5
#define GL_DEPTH_COMPONENT24              0x81A6
#define GL_DEPTH_COMPONENT32              0x81A7
#define GL_MIRRORED_REPEAT                0x8370
#define GL_MAX_TEXTURE_LOD_BIAS           0x84FD
#define GL_TEXTURE_LOD_BIAS               0x8501
#define GL_INCR_WRAP                      0x8507
#define GL_DECR_WRAP                      0x8508
#define GL_TEXTURE_DEPTH_SIZE             0x884A
#define GL_TEXTURE_COMPARE_MODE           0x884C
#define GL_TEXTURE_COMPARE_FUNC           0x884D
#define GL_POINT_SIZE_MIN                 0x8126
#define GL_POINT_SIZE_MAX                 0x8127
#define GL_POINT_DISTANCE_ATTENUATION     0x8129
#define GL_GENERATE_MIPMAP                0x8191
#define GL_GENERATE_MIPMAP_HINT           0x8192
#define GL_FOG_COORDINATE_SOURCE          0x8450
#define GL_FOG_COORDINATE                 0x8451
#define GL_FRAGMENT_DEPTH                 0x8452
#define GL_CURRENT_FOG_COORDINATE         0x8453
#define GL_FOG_COORDINATE_ARRAY_TYPE      0x8454
#define GL_FOG_COORDINATE_ARRAY_STRIDE    0x8455
#define GL_FOG_COORDINATE_ARRAY_POINTER   0x8456
#define GL_FOG_COORDINATE_ARRAY           0x8457
#define GL_COLOR_SUM                      0x8458
#define GL_CURRENT_SECONDARY_COLOR        0x8459
#define GL_SECONDARY_COLOR_ARRAY_SIZE     0x845A
#define GL_SECONDARY_COLOR_ARRAY_TYPE     0x845B
#define GL_SECONDARY_COLOR_ARRAY_STRIDE   0x845C
#define GL_SECONDARY_COLOR_ARRAY_POINTER  0x845D
#define GL_SECONDARY_COLOR_ARRAY          0x845E
#define GL_TEXTURE_FILTER_CONTROL         0x8500
#define GL_DEPTH_TEXTURE_MODE             0x884B
#define GL_COMPARE_R_TO_TEXTURE           0x884E
#define GL_FUNC_ADD                       0x8006
#define GL_FUNC_SUBTRACT                  0x800A
#define GL_FUNC_REVERSE_SUBTRACT          0x800B
#define GL_MIN                            0x8007
#define GL_MAX                            0x8008
#define GL_CONSTANT_COLOR                 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR       0x8002
#define GL_CONSTANT_ALPHA                 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA       0x8004
typedef void (GLAPIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);
typedef void (GLAPIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);
typedef void (GLAPIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);
typedef void (GLAPIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);
typedef void (GLAPIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);
typedef void (GLAPIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glBlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterf)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterfv)(GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glPointParameteri)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glPointParameteriv)(GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordf)(GLfloat coord);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordfv)(const GLfloat *coord);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordd)(GLdouble coord);
GLLOADER_API extern void (GLAPIENTRYP glFogCoorddv)(const GLdouble *coord);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordPointer)(GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3b)(GLbyte red, GLbyte green, GLbyte blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3bv)(const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3d)(GLdouble red, GLdouble green, GLdouble blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3f)(GLfloat red, GLfloat green, GLfloat blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3i)(GLint red, GLint green, GLint blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3s)(GLshort red, GLshort green, GLshort blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3ub)(GLubyte red, GLubyte green, GLubyte blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3ubv)(const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3ui)(GLuint red, GLuint green, GLuint blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3uiv)(const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3us)(GLushort red, GLushort green, GLushort blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3usv)(const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColorPointer)(GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2d)(GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2f)(GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2i)(GLint x, GLint y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2s)(GLshort x, GLshort y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3d)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3dv)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3f)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3fv)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3i)(GLint x, GLint y, GLint z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3iv)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3s)(GLshort x, GLshort y, GLshort z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3sv)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glBlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquation)(GLenum mode);
#endif /* GL_VERSION_1_4 */

#ifndef GL_VERSION_1_5
#define GL_VERSION_1_5 1
#include <stddef.h>
typedef ptrdiff_t GLsizeiptr;
typedef ptrdiff_t GLintptr;
#define GL_BUFFER_SIZE                    0x8764
#define GL_BUFFER_USAGE                   0x8765
#define GL_QUERY_COUNTER_BITS             0x8864
#define GL_CURRENT_QUERY                  0x8865
#define GL_QUERY_RESULT                   0x8866
#define GL_QUERY_RESULT_AVAILABLE         0x8867
#define GL_ARRAY_BUFFER                   0x8892
#define GL_ELEMENT_ARRAY_BUFFER           0x8893
#define GL_ARRAY_BUFFER_BINDING           0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING   0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY                      0x88B8
#define GL_WRITE_ONLY                     0x88B9
#define GL_READ_WRITE                     0x88BA
#define GL_BUFFER_ACCESS                  0x88BB
#define GL_BUFFER_MAPPED                  0x88BC
#define GL_BUFFER_MAP_POINTER             0x88BD
#define GL_STREAM_DRAW                    0x88E0
#define GL_STREAM_READ                    0x88E1
#define GL_STREAM_COPY                    0x88E2
#define GL_STATIC_DRAW                    0x88E4
#define GL_STATIC_READ                    0x88E5
#define GL_STATIC_COPY                    0x88E6
#define GL_DYNAMIC_DRAW                   0x88E8
#define GL_DYNAMIC_READ                   0x88E9
#define GL_DYNAMIC_COPY                   0x88EA
#define GL_SAMPLES_PASSED                 0x8914
#define GL_SRC1_ALPHA                     0x8589
#define GL_VERTEX_ARRAY_BUFFER_BINDING    0x8896
#define GL_NORMAL_ARRAY_BUFFER_BINDING    0x8897
#define GL_COLOR_ARRAY_BUFFER_BINDING     0x8898
#define GL_INDEX_ARRAY_BUFFER_BINDING     0x8899
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING    0x889E
#define GL_FOG_COORD_SRC                  0x8450
#define GL_FOG_COORD                      0x8451
#define GL_CURRENT_FOG_COORD              0x8453
#define GL_FOG_COORD_ARRAY_TYPE           0x8454
#define GL_FOG_COORD_ARRAY_STRIDE         0x8455
#define GL_FOG_COORD_ARRAY_POINTER        0x8456
#define GL_FOG_COORD_ARRAY                0x8457
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_SRC0_RGB                       0x8580
#define GL_SRC1_RGB                       0x8581
#define GL_SRC2_RGB                       0x8582
#define GL_SRC0_ALPHA                     0x8588
#define GL_SRC2_ALPHA                     0x858A
typedef void (GLAPIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);
typedef void (GLAPIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);
typedef GLboolean(GLAPIENTRYP PFNGLISQUERYPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);
typedef void (GLAPIENTRYP PFNGLENDQUERYPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);
typedef void (GLAPIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);
typedef void (GLAPIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);
typedef GLboolean(GLAPIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);
typedef void (GLAPIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);
typedef void (GLAPIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
typedef void (GLAPIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, void *data);
typedef void *(GLAPIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);
typedef GLboolean(GLAPIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params);
GLLOADER_API extern void (GLAPIENTRYP glGenQueries)(GLsizei n, GLuint *ids);
GLLOADER_API extern void (GLAPIENTRYP glDeleteQueries)(GLsizei n, const GLuint *ids);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsQuery)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glBeginQuery)(GLenum target, GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glEndQuery)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryiv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glBindBuffer)(GLenum target, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glDeleteBuffers)(GLsizei n, const GLuint *buffers);
GLLOADER_API extern void (GLAPIENTRYP glGenBuffers)(GLsizei n, GLuint *buffers);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsBuffer)(GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glBufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
GLLOADER_API extern void (GLAPIENTRYP glBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glGetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
GLLOADER_API extern void *(GLAPIENTRYP glMapBuffer)(GLenum target, GLenum access);
GLLOADER_API extern GLboolean(GLAPIENTRYP glUnmapBuffer)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glGetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetBufferPointerv)(GLenum target, GLenum pname, void **params);
#endif /* GL_VERSION_1_5 */

#ifndef GL_VERSION_2_0
#define GL_VERSION_2_0 1
typedef char GLchar;
#define GL_BLEND_EQUATION_RGB             0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED    0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE       0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE     0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE       0x8625
#define GL_CURRENT_VERTEX_ATTRIB          0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE      0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER    0x8645
#define GL_STENCIL_BACK_FUNC              0x8800
#define GL_STENCIL_BACK_FAIL              0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL   0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS   0x8803
#define GL_MAX_DRAW_BUFFERS               0x8824
#define GL_DRAW_BUFFER0                   0x8825
#define GL_DRAW_BUFFER1                   0x8826
#define GL_DRAW_BUFFER2                   0x8827
#define GL_DRAW_BUFFER3                   0x8828
#define GL_DRAW_BUFFER4                   0x8829
#define GL_DRAW_BUFFER5                   0x882A
#define GL_DRAW_BUFFER6                   0x882B
#define GL_DRAW_BUFFER7                   0x882C
#define GL_DRAW_BUFFER8                   0x882D
#define GL_DRAW_BUFFER9                   0x882E
#define GL_DRAW_BUFFER10                  0x882F
#define GL_DRAW_BUFFER11                  0x8830
#define GL_DRAW_BUFFER12                  0x8831
#define GL_DRAW_BUFFER13                  0x8832
#define GL_DRAW_BUFFER14                  0x8833
#define GL_DRAW_BUFFER15                  0x8834
#define GL_BLEND_EQUATION_ALPHA           0x883D
#define GL_MAX_VERTEX_ATTRIBS             0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS        0x8872
#define GL_FRAGMENT_SHADER                0x8B30
#define GL_VERTEX_SHADER                  0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS  0x8B4A
#define GL_MAX_VARYING_FLOATS             0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_SHADER_TYPE                    0x8B4F
#define GL_FLOAT_VEC2                     0x8B50
#define GL_FLOAT_VEC3                     0x8B51
#define GL_FLOAT_VEC4                     0x8B52
#define GL_INT_VEC2                       0x8B53
#define GL_INT_VEC3                       0x8B54
#define GL_INT_VEC4                       0x8B55
#define GL_BOOL                           0x8B56
#define GL_BOOL_VEC2                      0x8B57
#define GL_BOOL_VEC3                      0x8B58
#define GL_BOOL_VEC4                      0x8B59
#define GL_FLOAT_MAT2                     0x8B5A
#define GL_FLOAT_MAT3                     0x8B5B
#define GL_FLOAT_MAT4                     0x8B5C
#define GL_SAMPLER_1D                     0x8B5D
#define GL_SAMPLER_2D                     0x8B5E
#define GL_SAMPLER_3D                     0x8B5F
#define GL_SAMPLER_CUBE                   0x8B60
#define GL_SAMPLER_1D_SHADOW              0x8B61
#define GL_SAMPLER_2D_SHADOW              0x8B62
#define GL_DELETE_STATUS                  0x8B80
#define GL_COMPILE_STATUS                 0x8B81
#define GL_LINK_STATUS                    0x8B82
#define GL_VALIDATE_STATUS                0x8B83
#define GL_INFO_LOG_LENGTH                0x8B84
#define GL_ATTACHED_SHADERS               0x8B85
#define GL_ACTIVE_UNIFORMS                0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH      0x8B87
#define GL_SHADER_SOURCE_LENGTH           0x8B88
#define GL_ACTIVE_ATTRIBUTES              0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH    0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION       0x8B8C
#define GL_CURRENT_PROGRAM                0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN      0x8CA0
#define GL_LOWER_LEFT                     0x8CA1
#define GL_UPPER_LEFT                     0x8CA2
#define GL_STENCIL_BACK_REF               0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK        0x8CA4
#define GL_STENCIL_BACK_WRITEMASK         0x8CA5
#define GL_VERTEX_PROGRAM_TWO_SIDE        0x8643
#define GL_POINT_SPRITE                   0x8861
#define GL_COORD_REPLACE                  0x8862
#define GL_MAX_TEXTURE_COORDS             0x8871
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAPIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);
typedef void (GLAPIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (GLAPIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (GLAPIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);
typedef void (GLAPIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);
typedef void (GLAPIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);
typedef GLuint(GLAPIENTRYP PFNGLCREATEPROGRAMPROC) (void);
typedef GLuint(GLAPIENTRYP PFNGLCREATESHADERPROC) (GLenum type);
typedef void (GLAPIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);
typedef void (GLAPIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);
typedef void (GLAPIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);
typedef void (GLAPIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);
typedef void (GLAPIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);
typedef void (GLAPIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
typedef GLint(GLAPIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (GLAPIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (GLAPIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
typedef GLint(GLAPIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **pointer);
typedef GLboolean(GLAPIENTRYP PFNGLISPROGRAMPROC) (GLuint program);
typedef GLboolean(GLAPIENTRYP PFNGLISSHADERPROC) (GLuint shader);
typedef void (GLAPIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);
typedef void (GLAPIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
typedef void (GLAPIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);
typedef void (GLAPIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);
typedef void (GLAPIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAPIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAPIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAPIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);
typedef void (GLAPIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);
typedef void (GLAPIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAPIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAPIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
GLLOADER_API extern void (GLAPIENTRYP glDrawBuffers)(GLsizei n, const GLenum *bufs);
GLLOADER_API extern void (GLAPIENTRYP glStencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLLOADER_API extern void (GLAPIENTRYP glStencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glStencilMaskSeparate)(GLenum face, GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glAttachShader)(GLuint program, GLuint shader);
GLLOADER_API extern void (GLAPIENTRYP glBindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glCompileShader)(GLuint shader);
GLLOADER_API extern GLuint(GLAPIENTRYP glCreateProgram)(void);
GLLOADER_API extern GLuint(GLAPIENTRYP glCreateShader)(GLenum type);
GLLOADER_API extern void (GLAPIENTRYP glDeleteProgram)(GLuint program);
GLLOADER_API extern void (GLAPIENTRYP glDeleteShader)(GLuint shader);
GLLOADER_API extern void (GLAPIENTRYP glDetachShader)(GLuint program, GLuint shader);
GLLOADER_API extern void (GLAPIENTRYP glDisableVertexAttribArray)(GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glEnableVertexAttribArray)(GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
GLLOADER_API extern GLint(GLAPIENTRYP glGetAttribLocation)(GLuint program, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramiv)(GLuint program, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
GLLOADER_API extern void (GLAPIENTRYP glGetShaderiv)(GLuint shader, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
GLLOADER_API extern void (GLAPIENTRYP glGetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
GLLOADER_API extern GLint(GLAPIENTRYP glGetUniformLocation)(GLuint program, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformfv)(GLuint program, GLint location, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformiv)(GLuint program, GLint location, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsProgram)(GLuint program);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsShader)(GLuint shader);
GLLOADER_API extern void (GLAPIENTRYP glLinkProgram)(GLuint program);
GLLOADER_API extern void (GLAPIENTRYP glShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
GLLOADER_API extern void (GLAPIENTRYP glUseProgram)(GLuint program);
GLLOADER_API extern void (GLAPIENTRYP glUniform1f)(GLint location, GLfloat v0);
GLLOADER_API extern void (GLAPIENTRYP glUniform2f)(GLint location, GLfloat v0, GLfloat v1);
GLLOADER_API extern void (GLAPIENTRYP glUniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLLOADER_API extern void (GLAPIENTRYP glUniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLLOADER_API extern void (GLAPIENTRYP glUniform1i)(GLint location, GLint v0);
GLLOADER_API extern void (GLAPIENTRYP glUniform2i)(GLint location, GLint v0, GLint v1);
GLLOADER_API extern void (GLAPIENTRYP glUniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
GLLOADER_API extern void (GLAPIENTRYP glUniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLLOADER_API extern void (GLAPIENTRYP glUniform1fv)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2fv)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3fv)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4fv)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform1iv)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2iv)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3iv)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4iv)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glValidateProgram)(GLuint program);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1d)(GLuint index, GLdouble x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1dv)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1f)(GLuint index, GLfloat x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1fv)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1s)(GLuint index, GLshort x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1sv)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2dv)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2fv)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2s)(GLuint index, GLshort x, GLshort y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2sv)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3dv)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3fv)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3sv)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4Nbv)(GLuint index, const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4Niv)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4Nsv)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4Nubv)(GLuint index, const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4Nuiv)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4Nusv)(GLuint index, const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4bv)(GLuint index, const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4dv)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4fv)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4iv)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4sv)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4ubv)(GLuint index, const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4uiv)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4usv)(GLuint index, const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
#endif /* GL_VERSION_2_0 */

#ifndef GL_VERSION_2_1
#define GL_VERSION_2_1 1
#define GL_PIXEL_PACK_BUFFER              0x88EB
#define GL_PIXEL_UNPACK_BUFFER            0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING      0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING    0x88EF
#define GL_FLOAT_MAT2x3                   0x8B65
#define GL_FLOAT_MAT2x4                   0x8B66
#define GL_FLOAT_MAT3x2                   0x8B67
#define GL_FLOAT_MAT3x4                   0x8B68
#define GL_FLOAT_MAT4x2                   0x8B69
#define GL_FLOAT_MAT4x3                   0x8B6A
#define GL_SRGB                           0x8C40
#define GL_SRGB8                          0x8C41
#define GL_SRGB_ALPHA                     0x8C42
#define GL_SRGB8_ALPHA8                   0x8C43
#define GL_COMPRESSED_SRGB                0x8C48
#define GL_COMPRESSED_SRGB_ALPHA          0x8C49
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#define GL_SLUMINANCE_ALPHA               0x8C44
#define GL_SLUMINANCE8_ALPHA8             0x8C45
#define GL_SLUMINANCE                     0x8C46
#define GL_SLUMINANCE8                    0x8C47
#define GL_COMPRESSED_SLUMINANCE          0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA    0x8C4B
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif /* GL_VERSION_2_1 */

#ifndef GL_VERSION_3_0
#define GL_VERSION_3_0 1
typedef unsigned short GLhalf;
#define GL_COMPARE_REF_TO_TEXTURE         0x884E
#define GL_CLIP_DISTANCE0                 0x3000
#define GL_CLIP_DISTANCE1                 0x3001
#define GL_CLIP_DISTANCE2                 0x3002
#define GL_CLIP_DISTANCE3                 0x3003
#define GL_CLIP_DISTANCE4                 0x3004
#define GL_CLIP_DISTANCE5                 0x3005
#define GL_CLIP_DISTANCE6                 0x3006
#define GL_CLIP_DISTANCE7                 0x3007
#define GL_MAX_CLIP_DISTANCES             0x0D32
#define GL_MAJOR_VERSION                  0x821B
#define GL_MINOR_VERSION                  0x821C
#define GL_NUM_EXTENSIONS                 0x821D
#define GL_CONTEXT_FLAGS                  0x821E
#define GL_COMPRESSED_RED                 0x8225
#define GL_COMPRESSED_RG                  0x8226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_RGBA32F                        0x8814
#define GL_RGB32F                         0x8815
#define GL_RGBA16F                        0x881A
#define GL_RGB16F                         0x881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER    0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS       0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET       0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET       0x8905
#define GL_CLAMP_READ_COLOR               0x891C
#define GL_FIXED_ONLY                     0x891D
#define GL_MAX_VARYING_COMPONENTS         0x8B4B
#define GL_TEXTURE_1D_ARRAY               0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY         0x8C19
#define GL_TEXTURE_2D_ARRAY               0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY         0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY       0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY       0x8C1D
#define GL_R11F_G11F_B10F                 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV   0x8C3B
#define GL_RGB9_E5                        0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV       0x8C3E
#define GL_TEXTURE_SHARED_SIZE            0x8C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS    0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_PRIMITIVES_GENERATED           0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_RASTERIZER_DISCARD             0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_INTERLEAVED_ATTRIBS            0x8C8C
#define GL_SEPARATE_ATTRIBS               0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER      0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_RGBA32UI                       0x8D70
#define GL_RGB32UI                        0x8D71
#define GL_RGBA16UI                       0x8D76
#define GL_RGB16UI                        0x8D77
#define GL_RGBA8UI                        0x8D7C
#define GL_RGB8UI                         0x8D7D
#define GL_RGBA32I                        0x8D82
#define GL_RGB32I                         0x8D83
#define GL_RGBA16I                        0x8D88
#define GL_RGB16I                         0x8D89
#define GL_RGBA8I                         0x8D8E
#define GL_RGB8I                          0x8D8F
#define GL_RED_INTEGER                    0x8D94
#define GL_GREEN_INTEGER                  0x8D95
#define GL_BLUE_INTEGER                   0x8D96
#define GL_RGB_INTEGER                    0x8D98
#define GL_RGBA_INTEGER                   0x8D99
#define GL_BGR_INTEGER                    0x8D9A
#define GL_BGRA_INTEGER                   0x8D9B
#define GL_SAMPLER_1D_ARRAY               0x8DC0
#define GL_SAMPLER_2D_ARRAY               0x8DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW        0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW        0x8DC4
#define GL_SAMPLER_CUBE_SHADOW            0x8DC5
#define GL_UNSIGNED_INT_VEC2              0x8DC6
#define GL_UNSIGNED_INT_VEC3              0x8DC7
#define GL_UNSIGNED_INT_VEC4              0x8DC8
#define GL_INT_SAMPLER_1D                 0x8DC9
#define GL_INT_SAMPLER_2D                 0x8DCA
#define GL_INT_SAMPLER_3D                 0x8DCB
#define GL_INT_SAMPLER_CUBE               0x8DCC
#define GL_INT_SAMPLER_1D_ARRAY           0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY           0x8DCF
#define GL_UNSIGNED_INT_SAMPLER_1D        0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D        0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D        0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE      0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY  0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY  0x8DD7
#define GL_QUERY_WAIT                     0x8E13
#define GL_QUERY_NO_WAIT                  0x8E14
#define GL_QUERY_BY_REGION_WAIT           0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT        0x8E16
#define GL_BUFFER_ACCESS_FLAGS            0x911F
#define GL_BUFFER_MAP_LENGTH              0x9120
#define GL_BUFFER_MAP_OFFSET              0x9121
#define GL_DEPTH_COMPONENT32F             0x8CAC
#define GL_DEPTH32F_STENCIL8              0x8CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_INVALID_FRAMEBUFFER_OPERATION  0x0506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_DEFAULT            0x8218
#define GL_FRAMEBUFFER_UNDEFINED          0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT       0x821A
#define GL_MAX_RENDERBUFFER_SIZE          0x84E8
#define GL_DEPTH_STENCIL                  0x84F9
#define GL_UNSIGNED_INT_24_8              0x84FA
#define GL_DEPTH24_STENCIL8               0x88F0
#define GL_TEXTURE_STENCIL_SIZE           0x88F1
#define GL_TEXTURE_RED_TYPE               0x8C10
#define GL_TEXTURE_GREEN_TYPE             0x8C11
#define GL_TEXTURE_BLUE_TYPE              0x8C12
#define GL_TEXTURE_ALPHA_TYPE             0x8C13
#define GL_TEXTURE_DEPTH_TYPE             0x8C16
#define GL_UNSIGNED_NORMALIZED            0x8C17
#define GL_FRAMEBUFFER_BINDING            0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING       0x8CA6
#define GL_RENDERBUFFER_BINDING           0x8CA7
#define GL_READ_FRAMEBUFFER               0x8CA8
#define GL_DRAW_FRAMEBUFFER               0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING       0x8CAA
#define GL_RENDERBUFFER_SAMPLES           0x8CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE           0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED        0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS          0x8CDF
#define GL_COLOR_ATTACHMENT0              0x8CE0
#define GL_COLOR_ATTACHMENT1              0x8CE1
#define GL_COLOR_ATTACHMENT2              0x8CE2
#define GL_COLOR_ATTACHMENT3              0x8CE3
#define GL_COLOR_ATTACHMENT4              0x8CE4
#define GL_COLOR_ATTACHMENT5              0x8CE5
#define GL_COLOR_ATTACHMENT6              0x8CE6
#define GL_COLOR_ATTACHMENT7              0x8CE7
#define GL_COLOR_ATTACHMENT8              0x8CE8
#define GL_COLOR_ATTACHMENT9              0x8CE9
#define GL_COLOR_ATTACHMENT10             0x8CEA
#define GL_COLOR_ATTACHMENT11             0x8CEB
#define GL_COLOR_ATTACHMENT12             0x8CEC
#define GL_COLOR_ATTACHMENT13             0x8CED
#define GL_COLOR_ATTACHMENT14             0x8CEE
#define GL_COLOR_ATTACHMENT15             0x8CEF
#define GL_COLOR_ATTACHMENT16             0x8CF0
#define GL_COLOR_ATTACHMENT17             0x8CF1
#define GL_COLOR_ATTACHMENT18             0x8CF2
#define GL_COLOR_ATTACHMENT19             0x8CF3
#define GL_COLOR_ATTACHMENT20             0x8CF4
#define GL_COLOR_ATTACHMENT21             0x8CF5
#define GL_COLOR_ATTACHMENT22             0x8CF6
#define GL_COLOR_ATTACHMENT23             0x8CF7
#define GL_COLOR_ATTACHMENT24             0x8CF8
#define GL_COLOR_ATTACHMENT25             0x8CF9
#define GL_COLOR_ATTACHMENT26             0x8CFA
#define GL_COLOR_ATTACHMENT27             0x8CFB
#define GL_COLOR_ATTACHMENT28             0x8CFC
#define GL_COLOR_ATTACHMENT29             0x8CFD
#define GL_COLOR_ATTACHMENT30             0x8CFE
#define GL_COLOR_ATTACHMENT31             0x8CFF
#define GL_DEPTH_ATTACHMENT               0x8D00
#define GL_STENCIL_ATTACHMENT             0x8D20
#define GL_FRAMEBUFFER                    0x8D40
#define GL_RENDERBUFFER                   0x8D41
#define GL_RENDERBUFFER_WIDTH             0x8D42
#define GL_RENDERBUFFER_HEIGHT            0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT   0x8D44
#define GL_STENCIL_INDEX1                 0x8D46
#define GL_STENCIL_INDEX4                 0x8D47
#define GL_STENCIL_INDEX8                 0x8D48
#define GL_STENCIL_INDEX16                0x8D49
#define GL_RENDERBUFFER_RED_SIZE          0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE        0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE         0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE        0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE        0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE      0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_MAX_SAMPLES                    0x8D57
#define GL_INDEX                          0x8222
#define GL_TEXTURE_LUMINANCE_TYPE         0x8C14
#define GL_TEXTURE_INTENSITY_TYPE         0x8C15
#define GL_FRAMEBUFFER_SRGB               0x8DB9
#define GL_HALF_FLOAT                     0x140B
#define GL_MAP_READ_BIT                   0x0001
#define GL_MAP_WRITE_BIT                  0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT       0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT      0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT         0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT         0x0020
#define GL_COMPRESSED_RED_RGTC1           0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1    0x8DBC
#define GL_COMPRESSED_RG_RGTC2            0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2     0x8DBE
#define GL_RG                             0x8227
#define GL_RG_INTEGER                     0x8228
#define GL_R8                             0x8229
#define GL_R16                            0x822A
#define GL_RG8                            0x822B
#define GL_RG16                           0x822C
#define GL_R16F                           0x822D
#define GL_R32F                           0x822E
#define GL_RG16F                          0x822F
#define GL_RG32F                          0x8230
#define GL_R8I                            0x8231
#define GL_R8UI                           0x8232
#define GL_R16I                           0x8233
#define GL_R16UI                          0x8234
#define GL_R32I                           0x8235
#define GL_R32UI                          0x8236
#define GL_RG8I                           0x8237
#define GL_RG8UI                          0x8238
#define GL_RG16I                          0x8239
#define GL_RG16UI                         0x823A
#define GL_RG32I                          0x823B
#define GL_RG32UI                         0x823C
#define GL_VERTEX_ARRAY_BINDING           0x85B5
#define GL_CLAMP_VERTEX_COLOR             0x891A
#define GL_CLAMP_FRAGMENT_COLOR           0x891B
#define GL_ALPHA_INTEGER                  0x8D97
typedef void (GLAPIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (GLAPIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);
typedef void (GLAPIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);
typedef void (GLAPIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);
typedef void (GLAPIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);
typedef GLboolean(GLAPIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);
typedef void (GLAPIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);
typedef void (GLAPIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);
typedef void (GLAPIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
typedef void (GLAPIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
typedef void (GLAPIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);
typedef void (GLAPIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);
typedef void (GLAPIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);
typedef void (GLAPIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);
typedef GLint(GLAPIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);
typedef void (GLAPIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);
typedef void (GLAPIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAPIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAPIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);
typedef void (GLAPIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);
typedef void (GLAPIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte *(GLAPIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);
typedef GLboolean(GLAPIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
typedef void (GLAPIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
typedef void (GLAPIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef GLboolean(GLAPIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);
typedef void (GLAPIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
typedef void (GLAPIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
typedef void (GLAPIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
typedef GLenum(GLAPIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAPIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void *(GLAPIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (GLAPIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (GLAPIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);
typedef void (GLAPIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);
typedef void (GLAPIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);
typedef GLboolean(GLAPIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);
GLLOADER_API extern void (GLAPIENTRYP glColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLLOADER_API extern void (GLAPIENTRYP glGetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
GLLOADER_API extern void (GLAPIENTRYP glGetIntegeri_v)(GLenum target, GLuint index, GLint *data);
GLLOADER_API extern void (GLAPIENTRYP glEnablei)(GLenum target, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glDisablei)(GLenum target, GLuint index);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsEnabledi)(GLenum target, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glBeginTransformFeedback)(GLenum primitiveMode);
GLLOADER_API extern void (GLAPIENTRYP glEndTransformFeedback)(void);
GLLOADER_API extern void (GLAPIENTRYP glBindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glBindBufferBase)(GLenum target, GLuint index, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glTransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
GLLOADER_API extern void (GLAPIENTRYP glGetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glClampColor)(GLenum target, GLenum clamp);
GLLOADER_API extern void (GLAPIENTRYP glBeginConditionalRender)(GLuint id, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glEndConditionalRender)(void);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI1i)(GLuint index, GLint x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI2i)(GLuint index, GLint x, GLint y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI1ui)(GLuint index, GLuint x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI1iv)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI2iv)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI3iv)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4iv)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI1uiv)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI2uiv)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI3uiv)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4uiv)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4bv)(GLuint index, const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4sv)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4ubv)(GLuint index, const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4usv)(GLuint index, const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformuiv)(GLuint program, GLint location, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glBindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
GLLOADER_API extern GLint(GLAPIENTRYP glGetFragDataLocation)(GLuint program, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glUniform1ui)(GLint location, GLuint v0);
GLLOADER_API extern void (GLAPIENTRYP glUniform2ui)(GLint location, GLuint v0, GLuint v1);
GLLOADER_API extern void (GLAPIENTRYP glUniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLLOADER_API extern void (GLAPIENTRYP glUniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLLOADER_API extern void (GLAPIENTRYP glUniform1uiv)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2uiv)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3uiv)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4uiv)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLLOADER_API extern const GLubyte *(GLAPIENTRYP glGetStringi)(GLenum name, GLuint index);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsRenderbuffer)(GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glBindRenderbuffer)(GLenum target, GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glDeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
GLLOADER_API extern void (GLAPIENTRYP glGenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
GLLOADER_API extern void (GLAPIENTRYP glRenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glGetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsFramebuffer)(GLuint framebuffer);
GLLOADER_API extern void (GLAPIENTRYP glBindFramebuffer)(GLenum target, GLuint framebuffer);
GLLOADER_API extern void (GLAPIENTRYP glDeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
GLLOADER_API extern void (GLAPIENTRYP glGenFramebuffers)(GLsizei n, GLuint *framebuffers);
GLLOADER_API extern GLenum(GLAPIENTRYP glCheckFramebufferStatus)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glGetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGenerateMipmap)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glBlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLLOADER_API extern void (GLAPIENTRYP glRenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLLOADER_API extern void *(GLAPIENTRYP glMapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLLOADER_API extern void (GLAPIENTRYP glFlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
GLLOADER_API extern void (GLAPIENTRYP glBindVertexArray)(GLuint array);
GLLOADER_API extern void (GLAPIENTRYP glDeleteVertexArrays)(GLsizei n, const GLuint *arrays);
GLLOADER_API extern void (GLAPIENTRYP glGenVertexArrays)(GLsizei n, GLuint *arrays);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsVertexArray)(GLuint array);
#endif /* GL_VERSION_3_0 */

#ifndef GL_VERSION_3_1
#define GL_VERSION_3_1 1
#define GL_SAMPLER_2D_RECT                0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW         0x8B64
#define GL_SAMPLER_BUFFER                 0x8DC2
#define GL_INT_SAMPLER_2D_RECT            0x8DCD
#define GL_INT_SAMPLER_BUFFER             0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT   0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER    0x8DD8
#define GL_TEXTURE_BUFFER                 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE        0x8C2B
#define GL_TEXTURE_BINDING_BUFFER         0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_RECTANGLE              0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE      0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE        0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE     0x84F8
#define GL_R8_SNORM                       0x8F94
#define GL_RG8_SNORM                      0x8F95
#define GL_RGB8_SNORM                     0x8F96
#define GL_RGBA8_SNORM                    0x8F97
#define GL_R16_SNORM                      0x8F98
#define GL_RG16_SNORM                     0x8F99
#define GL_RGB16_SNORM                    0x8F9A
#define GL_RGBA16_SNORM                   0x8F9B
#define GL_SIGNED_NORMALIZED              0x8F9C
#define GL_PRIMITIVE_RESTART              0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX        0x8F9E
#define GL_COPY_READ_BUFFER               0x8F36
#define GL_COPY_WRITE_BUFFER              0x8F37
#define GL_UNIFORM_BUFFER                 0x8A11
#define GL_UNIFORM_BUFFER_BINDING         0x8A28
#define GL_UNIFORM_BUFFER_START           0x8A29
#define GL_UNIFORM_BUFFER_SIZE            0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS      0x8A2B
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS    0x8A2C
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS    0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS    0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS    0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE         0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS          0x8A36
#define GL_UNIFORM_TYPE                   0x8A37
#define GL_UNIFORM_SIZE                   0x8A38
#define GL_UNIFORM_NAME_LENGTH            0x8A39
#define GL_UNIFORM_BLOCK_INDEX            0x8A3A
#define GL_UNIFORM_OFFSET                 0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE           0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE          0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR           0x8A3E
#define GL_UNIFORM_BLOCK_BINDING          0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE        0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH      0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS  0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_INVALID_INDEX                  0xFFFFFFFFu
typedef void (GLAPIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
typedef void (GLAPIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);
typedef void (GLAPIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
typedef void (GLAPIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
typedef GLuint(GLAPIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);
typedef void (GLAPIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
typedef void (GLAPIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
GLLOADER_API extern void (GLAPIENTRYP glDrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
GLLOADER_API extern void (GLAPIENTRYP glTexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glPrimitiveRestartIndex)(GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glCopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
GLLOADER_API extern GLuint(GLAPIENTRYP glGetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
GLLOADER_API extern void (GLAPIENTRYP glUniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
#endif /* GL_VERSION_3_1 */

#ifndef GL_VERSION_3_2
#define GL_VERSION_3_2 1
typedef struct __GLsync *GLsync;
#ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif
typedef uint64_t GLuint64;
typedef int64_t GLint64;
#define GL_CONTEXT_CORE_PROFILE_BIT       0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_LINES_ADJACENCY                0x000A
#define GL_LINE_STRIP_ADJACENCY           0x000B
#define GL_TRIANGLES_ADJACENCY            0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY       0x000D
#define GL_PROGRAM_POINT_SIZE             0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_GEOMETRY_SHADER                0x8DD9
#define GL_GEOMETRY_VERTICES_OUT          0x8916
#define GL_GEOMETRY_INPUT_TYPE            0x8917
#define GL_GEOMETRY_OUTPUT_TYPE           0x8918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES   0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS   0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS  0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS  0x9125
#define GL_CONTEXT_PROFILE_MASK           0x9126
#define GL_DEPTH_CLAMP                    0x864F
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION        0x8E4D
#define GL_LAST_VERTEX_CONVENTION         0x8E4E
#define GL_PROVOKING_VERTEX               0x8E4F
#define GL_TEXTURE_CUBE_MAP_SEAMLESS      0x884F
#define GL_MAX_SERVER_WAIT_TIMEOUT        0x9111
#define GL_OBJECT_TYPE                    0x9112
#define GL_SYNC_CONDITION                 0x9113
#define GL_SYNC_STATUS                    0x9114
#define GL_SYNC_FLAGS                     0x9115
#define GL_SYNC_FENCE                     0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE     0x9117
#define GL_UNSIGNALED                     0x9118
#define GL_SIGNALED                       0x9119
#define GL_ALREADY_SIGNALED               0x911A
#define GL_TIMEOUT_EXPIRED                0x911B
#define GL_CONDITION_SATISFIED            0x911C
#define GL_WAIT_FAILED                    0x911D
#define GL_TIMEOUT_IGNORED                0xFFFFFFFFFFFFFFFFull
#define GL_SYNC_FLUSH_COMMANDS_BIT        0x00000001
#define GL_SAMPLE_POSITION                0x8E50
#define GL_SAMPLE_MASK                    0x8E51
#define GL_SAMPLE_MASK_VALUE              0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS          0x8E59
#define GL_TEXTURE_2D_MULTISAMPLE         0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE   0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY   0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_SAMPLES                0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_SAMPLER_2D_MULTISAMPLE         0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE     0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY   0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES      0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES      0x910F
#define GL_MAX_INTEGER_SAMPLES            0x9110
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
typedef void (GLAPIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
typedef void (GLAPIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);
typedef GLsync(GLAPIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);
typedef GLboolean(GLAPIENTRYP PFNGLISSYNCPROC) (GLsync sync);
typedef void (GLAPIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);
typedef GLenum(GLAPIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAPIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAPIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);
typedef void (GLAPIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
typedef void (GLAPIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);
typedef void (GLAPIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAPIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAPIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);
typedef void (GLAPIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
GLLOADER_API extern void (GLAPIENTRYP glDrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
GLLOADER_API extern void (GLAPIENTRYP glProvokingVertex)(GLenum mode);
GLLOADER_API extern GLsync(GLAPIENTRYP glFenceSync)(GLenum condition, GLbitfield flags);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsSync)(GLsync sync);
GLLOADER_API extern void (GLAPIENTRYP glDeleteSync)(GLsync sync);
GLLOADER_API extern GLenum(GLAPIENTRYP glClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLLOADER_API extern void (GLAPIENTRYP glWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLLOADER_API extern void (GLAPIENTRYP glGetInteger64v)(GLenum pname, GLint64 *data);
GLLOADER_API extern void (GLAPIENTRYP glGetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
GLLOADER_API extern void (GLAPIENTRYP glGetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
GLLOADER_API extern void (GLAPIENTRYP glGetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glTexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLLOADER_API extern void (GLAPIENTRYP glTexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLLOADER_API extern void (GLAPIENTRYP glGetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
GLLOADER_API extern void (GLAPIENTRYP glSampleMaski)(GLuint maskNumber, GLbitfield mask);
#endif /* GL_VERSION_3_2 */

#ifndef GL_VERSION_3_3
#define GL_VERSION_3_3 1
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR    0x88FE
#define GL_SRC1_COLOR                     0x88F9
#define GL_ONE_MINUS_SRC1_COLOR           0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA           0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS   0x88FC
#define GL_ANY_SAMPLES_PASSED             0x8C2F
#define GL_SAMPLER_BINDING                0x8919
#define GL_RGB10_A2UI                     0x906F
#define GL_TEXTURE_SWIZZLE_R              0x8E42
#define GL_TEXTURE_SWIZZLE_G              0x8E43
#define GL_TEXTURE_SWIZZLE_B              0x8E44
#define GL_TEXTURE_SWIZZLE_A              0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA           0x8E46
#define GL_TIME_ELAPSED                   0x88BF
#define GL_TIMESTAMP                      0x8E28
#define GL_INT_2_10_10_10_REV             0x8D9F
typedef void (GLAPIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
typedef GLint(GLAPIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);
typedef void (GLAPIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);
typedef GLboolean(GLAPIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);
typedef void (GLAPIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);
typedef void (GLAPIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);
typedef void (GLAPIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);
typedef void (GLAPIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);
typedef void (GLAPIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);
typedef void (GLAPIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);
typedef void (GLAPIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);
typedef void (GLAPIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);
typedef void (GLAPIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);
typedef void (GLAPIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);
typedef void (GLAPIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);
typedef void (GLAPIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (GLAPIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);
typedef void (GLAPIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
typedef void (GLAPIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);
typedef void (GLAPIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);
typedef void (GLAPIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);
typedef void (GLAPIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
GLLOADER_API extern void (GLAPIENTRYP glBindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
GLLOADER_API extern GLint(GLAPIENTRYP glGetFragDataIndex)(GLuint program, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGenSamplers)(GLsizei count, GLuint *samplers);
GLLOADER_API extern void (GLAPIENTRYP glDeleteSamplers)(GLsizei count, const GLuint *samplers);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsSampler)(GLuint sampler);
GLLOADER_API extern void (GLAPIENTRYP glBindSampler)(GLuint unit, GLuint sampler);
GLLOADER_API extern void (GLAPIENTRYP glSamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glSamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glSamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glSamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
GLLOADER_API extern void (GLAPIENTRYP glSamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glSamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
GLLOADER_API extern void (GLAPIENTRYP glGetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glQueryCounter)(GLuint id, GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribDivisor)(GLuint index, GLuint divisor);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glVertexP2ui)(GLenum type, GLuint value);
GLLOADER_API extern void (GLAPIENTRYP glVertexP2uiv)(GLenum type, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glVertexP3ui)(GLenum type, GLuint value);
GLLOADER_API extern void (GLAPIENTRYP glVertexP3uiv)(GLenum type, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glVertexP4ui)(GLenum type, GLuint value);
GLLOADER_API extern void (GLAPIENTRYP glVertexP4uiv)(GLenum type, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordP1ui)(GLenum type, GLuint coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordP1uiv)(GLenum type, const GLuint *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordP2ui)(GLenum type, GLuint coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordP2uiv)(GLenum type, const GLuint *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordP3ui)(GLenum type, GLuint coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordP3uiv)(GLenum type, const GLuint *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordP4ui)(GLenum type, GLuint coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordP4uiv)(GLenum type, const GLuint *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoordP1ui)(GLenum texture, GLenum type, GLuint coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoordP1uiv)(GLenum texture, GLenum type, const GLuint *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoordP2ui)(GLenum texture, GLenum type, GLuint coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoordP2uiv)(GLenum texture, GLenum type, const GLuint *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoordP3ui)(GLenum texture, GLenum type, GLuint coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoordP3uiv)(GLenum texture, GLenum type, const GLuint *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoordP4ui)(GLenum texture, GLenum type, GLuint coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoordP4uiv)(GLenum texture, GLenum type, const GLuint *coords);
GLLOADER_API extern void (GLAPIENTRYP glNormalP3ui)(GLenum type, GLuint coords);
GLLOADER_API extern void (GLAPIENTRYP glNormalP3uiv)(GLenum type, const GLuint *coords);
GLLOADER_API extern void (GLAPIENTRYP glColorP3ui)(GLenum type, GLuint color);
GLLOADER_API extern void (GLAPIENTRYP glColorP3uiv)(GLenum type, const GLuint *color);
GLLOADER_API extern void (GLAPIENTRYP glColorP4ui)(GLenum type, GLuint color);
GLLOADER_API extern void (GLAPIENTRYP glColorP4uiv)(GLenum type, const GLuint *color);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColorP3ui)(GLenum type, GLuint color);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColorP3uiv)(GLenum type, const GLuint *color);
#endif /* GL_VERSION_3_3 */

#ifndef GL_VERSION_4_0
#define GL_VERSION_4_0 1
#define GL_SAMPLE_SHADING                 0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE       0x8C37
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_TEXTURE_CUBE_MAP_ARRAY         0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY   0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY         0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW  0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY     0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_DRAW_INDIRECT_BUFFER           0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING   0x8F43
#define GL_GEOMETRY_SHADER_INVOCATIONS    0x887F
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_MAX_VERTEX_STREAMS             0x8E71
#define GL_DOUBLE_VEC2                    0x8FFC
#define GL_DOUBLE_VEC3                    0x8FFD
#define GL_DOUBLE_VEC4                    0x8FFE
#define GL_DOUBLE_MAT2                    0x8F46
#define GL_DOUBLE_MAT3                    0x8F47
#define GL_DOUBLE_MAT4                    0x8F48
#define GL_DOUBLE_MAT2x3                  0x8F49
#define GL_DOUBLE_MAT2x4                  0x8F4A
#define GL_DOUBLE_MAT3x2                  0x8F4B
#define GL_DOUBLE_MAT3x4                  0x8F4C
#define GL_DOUBLE_MAT4x2                  0x8F4D
#define GL_DOUBLE_MAT4x3                  0x8F4E
#define GL_ACTIVE_SUBROUTINES             0x8DE5
#define GL_ACTIVE_SUBROUTINE_UNIFORMS     0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH   0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_MAX_SUBROUTINES                0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_NUM_COMPATIBLE_SUBROUTINES     0x8E4A
#define GL_COMPATIBLE_SUBROUTINES         0x8E4B
#define GL_PATCHES                        0x000E
#define GL_PATCH_VERTICES                 0x8E72
#define GL_PATCH_DEFAULT_INNER_LEVEL      0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL      0x8E74
#define GL_TESS_CONTROL_OUTPUT_VERTICES   0x8E75
#define GL_TESS_GEN_MODE                  0x8E76
#define GL_TESS_GEN_SPACING               0x8E77
#define GL_TESS_GEN_VERTEX_ORDER          0x8E78
#define GL_TESS_GEN_POINT_MODE            0x8E79
#define GL_ISOLINES                       0x8E7A
#define GL_FRACTIONAL_ODD                 0x8E7B
#define GL_FRACTIONAL_EVEN                0x8E7C
#define GL_MAX_PATCH_VERTICES             0x8E7D
#define GL_MAX_TESS_GEN_LEVEL             0x8E7E
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_PATCH_COMPONENTS      0x8E84
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_TESS_EVALUATION_SHADER         0x8E87
#define GL_TESS_CONTROL_SHADER            0x8E88
#define GL_TRANSFORM_FEEDBACK             0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING     0x8E25
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
typedef void (GLAPIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAPIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (GLAPIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAPIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect);
typedef void (GLAPIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);
typedef void (GLAPIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
typedef GLint(GLAPIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
typedef GLuint(GLAPIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
typedef void (GLAPIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
typedef void (GLAPIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
typedef void (GLAPIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);
typedef void (GLAPIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
typedef void (GLAPIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);
typedef void (GLAPIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);
typedef void (GLAPIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);
typedef GLboolean(GLAPIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);
typedef void (GLAPIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);
typedef void (GLAPIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);
typedef void (GLAPIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);
typedef void (GLAPIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);
typedef void (GLAPIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);
typedef void (GLAPIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glMinSampleShading)(GLfloat value);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquationi)(GLuint buf, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendFunci)(GLuint buf, GLenum src, GLenum dst);
GLLOADER_API extern void (GLAPIENTRYP glBlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLLOADER_API extern void (GLAPIENTRYP glDrawArraysIndirect)(GLenum mode, const void *indirect);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
GLLOADER_API extern void (GLAPIENTRYP glUniform1d)(GLint location, GLdouble x);
GLLOADER_API extern void (GLAPIENTRYP glUniform2d)(GLint location, GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glUniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glUniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glUniform1dv)(GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2dv)(GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3dv)(GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4dv)(GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformdv)(GLuint program, GLint location, GLdouble *params);
GLLOADER_API extern GLint(GLAPIENTRYP glGetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
GLLOADER_API extern GLuint(GLAPIENTRYP glGetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glUniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
GLLOADER_API extern void (GLAPIENTRYP glPatchParameteri)(GLenum pname, GLint value);
GLLOADER_API extern void (GLAPIENTRYP glPatchParameterfv)(GLenum pname, const GLfloat *values);
GLLOADER_API extern void (GLAPIENTRYP glBindTransformFeedback)(GLenum target, GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glDeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
GLLOADER_API extern void (GLAPIENTRYP glGenTransformFeedbacks)(GLsizei n, GLuint *ids);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsTransformFeedback)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glPauseTransformFeedback)(void);
GLLOADER_API extern void (GLAPIENTRYP glResumeTransformFeedback)(void);
GLLOADER_API extern void (GLAPIENTRYP glDrawTransformFeedback)(GLenum mode, GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glDrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
GLLOADER_API extern void (GLAPIENTRYP glBeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glEndQueryIndexed)(GLenum target, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
#endif /* GL_VERSION_4_0 */

#ifndef GL_VERSION_4_1
#define GL_VERSION_4_1 1
#define GL_FIXED                          0x140C
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_LOW_FLOAT                      0x8DF0
#define GL_MEDIUM_FLOAT                   0x8DF1
#define GL_HIGH_FLOAT                     0x8DF2
#define GL_LOW_INT                        0x8DF3
#define GL_MEDIUM_INT                     0x8DF4
#define GL_HIGH_INT                       0x8DF5
#define GL_SHADER_COMPILER                0x8DFA
#define GL_SHADER_BINARY_FORMATS          0x8DF8
#define GL_NUM_SHADER_BINARY_FORMATS      0x8DF9
#define GL_MAX_VERTEX_UNIFORM_VECTORS     0x8DFB
#define GL_MAX_VARYING_VECTORS            0x8DFC
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS   0x8DFD
#define GL_RGB565                         0x8D62
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_BINARY_LENGTH          0x8741
#define GL_NUM_PROGRAM_BINARY_FORMATS     0x87FE
#define GL_PROGRAM_BINARY_FORMATS         0x87FF
#define GL_VERTEX_SHADER_BIT              0x00000001
#define GL_FRAGMENT_SHADER_BIT            0x00000002
#define GL_GEOMETRY_SHADER_BIT            0x00000004
#define GL_TESS_CONTROL_SHADER_BIT        0x00000008
#define GL_TESS_EVALUATION_SHADER_BIT     0x00000010
#define GL_ALL_SHADER_BITS                0xFFFFFFFF
#define GL_PROGRAM_SEPARABLE              0x8258
#define GL_ACTIVE_PROGRAM                 0x8259
#define GL_PROGRAM_PIPELINE_BINDING       0x825A
#define GL_MAX_VIEWPORTS                  0x825B
#define GL_VIEWPORT_SUBPIXEL_BITS         0x825C
#define GL_VIEWPORT_BOUNDS_RANGE          0x825D
#define GL_LAYER_PROVOKING_VERTEX         0x825E
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_UNDEFINED_VERTEX               0x8260
typedef void (GLAPIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);
typedef void (GLAPIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
typedef void (GLAPIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
typedef void (GLAPIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
typedef void (GLAPIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
typedef void (GLAPIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
typedef void (GLAPIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);
typedef void (GLAPIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (GLAPIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);
typedef GLuint(GLAPIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar *const*strings);
typedef void (GLAPIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (GLAPIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);
typedef void (GLAPIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);
typedef GLboolean(GLAPIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (GLAPIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
typedef void (GLAPIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
typedef void (GLAPIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
typedef void (GLAPIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
GLLOADER_API extern void (GLAPIENTRYP glReleaseShaderCompiler)(void);
GLLOADER_API extern void (GLAPIENTRYP glShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
GLLOADER_API extern void (GLAPIENTRYP glGetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
GLLOADER_API extern void (GLAPIENTRYP glDepthRangef)(GLfloat n, GLfloat f);
GLLOADER_API extern void (GLAPIENTRYP glClearDepthf)(GLfloat d);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
GLLOADER_API extern void (GLAPIENTRYP glProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
GLLOADER_API extern void (GLAPIENTRYP glProgramParameteri)(GLuint program, GLenum pname, GLint value);
GLLOADER_API extern void (GLAPIENTRYP glUseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
GLLOADER_API extern void (GLAPIENTRYP glActiveShaderProgram)(GLuint pipeline, GLuint program);
GLLOADER_API extern GLuint(GLAPIENTRYP glCreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
GLLOADER_API extern void (GLAPIENTRYP glBindProgramPipeline)(GLuint pipeline);
GLLOADER_API extern void (GLAPIENTRYP glDeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
GLLOADER_API extern void (GLAPIENTRYP glGenProgramPipelines)(GLsizei n, GLuint *pipelines);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsProgramPipeline)(GLuint pipeline);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1i)(GLuint program, GLint location, GLint v0);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glValidateProgramPipeline)(GLuint pipeline);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1d)(GLuint index, GLdouble x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1dv)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL2dv)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL3dv)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL4dv)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLLOADER_API extern void (GLAPIENTRYP glViewportIndexedfv)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glScissorIndexedv)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glDepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glDepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
GLLOADER_API extern void (GLAPIENTRYP glGetFloati_v)(GLenum target, GLuint index, GLfloat *data);
GLLOADER_API extern void (GLAPIENTRYP glGetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
#endif /* GL_VERSION_4_1 */

#ifndef GL_VERSION_4_2
#define GL_VERSION_4_2 1
#define GL_COPY_READ_BUFFER_BINDING       0x8F36
#define GL_COPY_WRITE_BUFFER_BINDING      0x8F37
#define GL_TRANSFORM_FEEDBACK_ACTIVE      0x8E24
#define GL_TRANSFORM_FEEDBACK_PAUSED      0x8E23
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH  0x9127
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH  0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE   0x912A
#define GL_PACK_COMPRESSED_BLOCK_WIDTH    0x912B
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT   0x912C
#define GL_PACK_COMPRESSED_BLOCK_DEPTH    0x912D
#define GL_PACK_COMPRESSED_BLOCK_SIZE     0x912E
#define GL_NUM_SAMPLE_COUNTS              0x9380
#define GL_MIN_MAP_BUFFER_ALIGNMENT       0x90BC
#define GL_ATOMIC_COUNTER_BUFFER          0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING  0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_START    0x92C2
#define GL_ATOMIC_COUNTER_BUFFER_SIZE     0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_VERTEX_ATOMIC_COUNTERS     0x92D2
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS   0x92D5
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS   0x92D6
#define GL_MAX_COMBINED_ATOMIC_COUNTERS   0x92D7
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS  0x92D9
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNSIGNED_INT_ATOMIC_COUNTER    0x92DB
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT      0x00000002
#define GL_UNIFORM_BARRIER_BIT            0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT      0x00000008
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_COMMAND_BARRIER_BIT            0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT       0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT     0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT      0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT        0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT     0x00001000
#define GL_ALL_BARRIER_BITS               0xFFFFFFFF
#define GL_MAX_IMAGE_UNITS                0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_IMAGE_BINDING_NAME             0x8F3A
#define GL_IMAGE_BINDING_LEVEL            0x8F3B
#define GL_IMAGE_BINDING_LAYERED          0x8F3C
#define GL_IMAGE_BINDING_LAYER            0x8F3D
#define GL_IMAGE_BINDING_ACCESS           0x8F3E
#define GL_IMAGE_1D                       0x904C
#define GL_IMAGE_2D                       0x904D
#define GL_IMAGE_3D                       0x904E
#define GL_IMAGE_2D_RECT                  0x904F
#define GL_IMAGE_CUBE                     0x9050
#define GL_IMAGE_BUFFER                   0x9051
#define GL_IMAGE_1D_ARRAY                 0x9052
#define GL_IMAGE_2D_ARRAY                 0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY           0x9054
#define GL_IMAGE_2D_MULTISAMPLE           0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY     0x9056
#define GL_INT_IMAGE_1D                   0x9057
#define GL_INT_IMAGE_2D                   0x9058
#define GL_INT_IMAGE_3D                   0x9059
#define GL_INT_IMAGE_2D_RECT              0x905A
#define GL_INT_IMAGE_CUBE                 0x905B
#define GL_INT_IMAGE_BUFFER               0x905C
#define GL_INT_IMAGE_1D_ARRAY             0x905D
#define GL_INT_IMAGE_2D_ARRAY             0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY       0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE       0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_UNSIGNED_INT_IMAGE_1D          0x9062
#define GL_UNSIGNED_INT_IMAGE_2D          0x9063
#define GL_UNSIGNED_INT_IMAGE_3D          0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT     0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE        0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER      0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY    0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY    0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_MAX_IMAGE_SAMPLES              0x906D
#define GL_IMAGE_BINDING_FORMAT           0x906E
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS      0x90CA
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS    0x90CD
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS    0x90CE
#define GL_MAX_COMBINED_IMAGE_UNIFORMS    0x90CF
#define GL_COMPRESSED_RGBA_BPTC_UNORM     0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_TEXTURE_IMMUTABLE_FORMAT       0x912F
typedef void (GLAPIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (GLAPIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (GLAPIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);
typedef void (GLAPIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAPIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAPIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);
typedef void (GLAPIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
GLLOADER_API extern void (GLAPIENTRYP glDrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLLOADER_API extern void (GLAPIENTRYP glGetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glBindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
GLLOADER_API extern void (GLAPIENTRYP glMemoryBarrier)(GLbitfield barriers);
GLLOADER_API extern void (GLAPIENTRYP glTexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glTexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glTexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLLOADER_API extern void (GLAPIENTRYP glDrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
GLLOADER_API extern void (GLAPIENTRYP glDrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
#endif /* GL_VERSION_4_2 */

#ifndef GL_VERSION_4_3
#define GL_VERSION_4_3 1
typedef void (GLAPIENTRY  *GLDEBUGPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *message, const void *userParam);
#define GL_NUM_SHADING_LANGUAGE_VERSIONS  0x82E9
#define GL_VERTEX_ATTRIB_ARRAY_LONG       0x874E
#define GL_COMPRESSED_RGB8_ETC2           0x9274
#define GL_COMPRESSED_SRGB8_ETC2          0x9275
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_RGBA8_ETC2_EAC      0x9278
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_R11_EAC             0x9270
#define GL_COMPRESSED_SIGNED_R11_EAC      0x9271
#define GL_COMPRESSED_RG11_EAC            0x9272
#define GL_COMPRESSED_SIGNED_RG11_EAC     0x9273
#define GL_PRIMITIVE_RESTART_FIXED_INDEX  0x8D69
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_MAX_ELEMENT_INDEX              0x8D6B
#define GL_COMPUTE_SHADER                 0x91B9
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS     0x91BB
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS     0x91BD
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS    0x8265
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT   0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE    0x91BF
#define GL_COMPUTE_WORK_GROUP_SIZE        0x8267
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_DISPATCH_INDIRECT_BUFFER       0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_COMPUTE_SHADER_BIT             0x00000020
#define GL_DEBUG_OUTPUT_SYNCHRONOUS       0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION        0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM      0x8245
#define GL_DEBUG_SOURCE_API               0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM     0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER   0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY       0x8249
#define GL_DEBUG_SOURCE_APPLICATION       0x824A
#define GL_DEBUG_SOURCE_OTHER             0x824B
#define GL_DEBUG_TYPE_ERROR               0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR  0x824E
#define GL_DEBUG_TYPE_PORTABILITY         0x824F
#define GL_DEBUG_TYPE_PERFORMANCE         0x8250
#define GL_DEBUG_TYPE_OTHER               0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH       0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES      0x9144
#define GL_DEBUG_LOGGED_MESSAGES          0x9145
#define GL_DEBUG_SEVERITY_HIGH            0x9146
#define GL_DEBUG_SEVERITY_MEDIUM          0x9147
#define GL_DEBUG_SEVERITY_LOW             0x9148
#define GL_DEBUG_TYPE_MARKER              0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP          0x8269
#define GL_DEBUG_TYPE_POP_GROUP           0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION    0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH    0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH        0x826D
#define GL_BUFFER                         0x82E0
#define GL_SHADER                         0x82E1
#define GL_PROGRAM                        0x82E2
#define GL_QUERY                          0x82E3
#define GL_PROGRAM_PIPELINE               0x82E4
#define GL_SAMPLER                        0x82E6
#define GL_MAX_LABEL_LENGTH               0x82E8
#define GL_DEBUG_OUTPUT                   0x92E0
#define GL_CONTEXT_FLAG_DEBUG_BIT         0x00000002
#define GL_MAX_UNIFORM_LOCATIONS          0x826E
#define GL_FRAMEBUFFER_DEFAULT_WIDTH      0x9310
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT     0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS     0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES    0x9313
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_MAX_FRAMEBUFFER_WIDTH          0x9315
#define GL_MAX_FRAMEBUFFER_HEIGHT         0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS         0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES        0x9318
#define GL_INTERNALFORMAT_SUPPORTED       0x826F
#define GL_INTERNALFORMAT_PREFERRED       0x8270
#define GL_INTERNALFORMAT_RED_SIZE        0x8271
#define GL_INTERNALFORMAT_GREEN_SIZE      0x8272
#define GL_INTERNALFORMAT_BLUE_SIZE       0x8273
#define GL_INTERNALFORMAT_ALPHA_SIZE      0x8274
#define GL_INTERNALFORMAT_DEPTH_SIZE      0x8275
#define GL_INTERNALFORMAT_STENCIL_SIZE    0x8276
#define GL_INTERNALFORMAT_SHARED_SIZE     0x8277
#define GL_INTERNALFORMAT_RED_TYPE        0x8278
#define GL_INTERNALFORMAT_GREEN_TYPE      0x8279
#define GL_INTERNALFORMAT_BLUE_TYPE       0x827A
#define GL_INTERNALFORMAT_ALPHA_TYPE      0x827B
#define GL_INTERNALFORMAT_DEPTH_TYPE      0x827C
#define GL_INTERNALFORMAT_STENCIL_TYPE    0x827D
#define GL_MAX_WIDTH                      0x827E
#define GL_MAX_HEIGHT                     0x827F
#define GL_MAX_DEPTH                      0x8280
#define GL_MAX_LAYERS                     0x8281
#define GL_MAX_COMBINED_DIMENSIONS        0x8282
#define GL_COLOR_COMPONENTS               0x8283
#define GL_DEPTH_COMPONENTS               0x8284
#define GL_STENCIL_COMPONENTS             0x8285
#define GL_COLOR_RENDERABLE               0x8286
#define GL_DEPTH_RENDERABLE               0x8287
#define GL_STENCIL_RENDERABLE             0x8288
#define GL_FRAMEBUFFER_RENDERABLE         0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_BLEND              0x828B
#define GL_READ_PIXELS                    0x828C
#define GL_READ_PIXELS_FORMAT             0x828D
#define GL_READ_PIXELS_TYPE               0x828E
#define GL_TEXTURE_IMAGE_FORMAT           0x828F
#define GL_TEXTURE_IMAGE_TYPE             0x8290
#define GL_GET_TEXTURE_IMAGE_FORMAT       0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE         0x8292
#define GL_MIPMAP                         0x8293
#define GL_MANUAL_GENERATE_MIPMAP         0x8294
#define GL_AUTO_GENERATE_MIPMAP           0x8295
#define GL_COLOR_ENCODING                 0x8296
#define GL_SRGB_READ                      0x8297
#define GL_SRGB_WRITE                     0x8298
#define GL_FILTER                         0x829A
#define GL_VERTEX_TEXTURE                 0x829B
#define GL_TESS_CONTROL_TEXTURE           0x829C
#define GL_TESS_EVALUATION_TEXTURE        0x829D
#define GL_GEOMETRY_TEXTURE               0x829E
#define GL_FRAGMENT_TEXTURE               0x829F
#define GL_COMPUTE_TEXTURE                0x82A0
#define GL_TEXTURE_SHADOW                 0x82A1
#define GL_TEXTURE_GATHER                 0x82A2
#define GL_TEXTURE_GATHER_SHADOW          0x82A3
#define GL_SHADER_IMAGE_LOAD              0x82A4
#define GL_SHADER_IMAGE_STORE             0x82A5
#define GL_SHADER_IMAGE_ATOMIC            0x82A6
#define GL_IMAGE_TEXEL_SIZE               0x82A7
#define GL_IMAGE_COMPATIBILITY_CLASS      0x82A8
#define GL_IMAGE_PIXEL_FORMAT             0x82A9
#define GL_IMAGE_PIXEL_TYPE               0x82AA
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE  0x82B3
#define GL_CLEAR_BUFFER                   0x82B4
#define GL_TEXTURE_VIEW                   0x82B5
#define GL_VIEW_COMPATIBILITY_CLASS       0x82B6
#define GL_FULL_SUPPORT                   0x82B7
#define GL_CAVEAT_SUPPORT                 0x82B8
#define GL_IMAGE_CLASS_4_X_32             0x82B9
#define GL_IMAGE_CLASS_2_X_32             0x82BA
#define GL_IMAGE_CLASS_1_X_32             0x82BB
#define GL_IMAGE_CLASS_4_X_16             0x82BC
#define GL_IMAGE_CLASS_2_X_16             0x82BD
#define GL_IMAGE_CLASS_1_X_16             0x82BE
#define GL_IMAGE_CLASS_4_X_8              0x82BF
#define GL_IMAGE_CLASS_2_X_8              0x82C0
#define GL_IMAGE_CLASS_1_X_8              0x82C1
#define GL_IMAGE_CLASS_11_11_10           0x82C2
#define GL_IMAGE_CLASS_10_10_10_2         0x82C3
#define GL_VIEW_CLASS_128_BITS            0x82C4
#define GL_VIEW_CLASS_96_BITS             0x82C5
#define GL_VIEW_CLASS_64_BITS             0x82C6
#define GL_VIEW_CLASS_48_BITS             0x82C7
#define GL_VIEW_CLASS_32_BITS             0x82C8
#define GL_VIEW_CLASS_24_BITS             0x82C9
#define GL_VIEW_CLASS_16_BITS             0x82CA
#define GL_VIEW_CLASS_8_BITS              0x82CB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB       0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA      0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA      0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA      0x82CF
#define GL_VIEW_CLASS_RGTC1_RED           0x82D0
#define GL_VIEW_CLASS_RGTC2_RG            0x82D1
#define GL_VIEW_CLASS_BPTC_UNORM          0x82D2
#define GL_VIEW_CLASS_BPTC_FLOAT          0x82D3
#define GL_UNIFORM                        0x92E1
#define GL_UNIFORM_BLOCK                  0x92E2
#define GL_PROGRAM_INPUT                  0x92E3
#define GL_PROGRAM_OUTPUT                 0x92E4
#define GL_BUFFER_VARIABLE                0x92E5
#define GL_SHADER_STORAGE_BLOCK           0x92E6
#define GL_VERTEX_SUBROUTINE              0x92E8
#define GL_TESS_CONTROL_SUBROUTINE        0x92E9
#define GL_TESS_EVALUATION_SUBROUTINE     0x92EA
#define GL_GEOMETRY_SUBROUTINE            0x92EB
#define GL_FRAGMENT_SUBROUTINE            0x92EC
#define GL_COMPUTE_SUBROUTINE             0x92ED
#define GL_VERTEX_SUBROUTINE_UNIFORM      0x92EE
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_GEOMETRY_SUBROUTINE_UNIFORM    0x92F1
#define GL_FRAGMENT_SUBROUTINE_UNIFORM    0x92F2
#define GL_COMPUTE_SUBROUTINE_UNIFORM     0x92F3
#define GL_TRANSFORM_FEEDBACK_VARYING     0x92F4
#define GL_ACTIVE_RESOURCES               0x92F5
#define GL_MAX_NAME_LENGTH                0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES       0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_NAME_LENGTH                    0x92F9
#define GL_TYPE                           0x92FA
#define GL_ARRAY_SIZE                     0x92FB
#define GL_OFFSET                         0x92FC
#define GL_BLOCK_INDEX                    0x92FD
#define GL_ARRAY_STRIDE                   0x92FE
#define GL_MATRIX_STRIDE                  0x92FF
#define GL_IS_ROW_MAJOR                   0x9300
#define GL_ATOMIC_COUNTER_BUFFER_INDEX    0x9301
#define GL_BUFFER_BINDING                 0x9302
#define GL_BUFFER_DATA_SIZE               0x9303
#define GL_NUM_ACTIVE_VARIABLES           0x9304
#define GL_ACTIVE_VARIABLES               0x9305
#define GL_REFERENCED_BY_VERTEX_SHADER    0x9306
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_GEOMETRY_SHADER  0x9309
#define GL_REFERENCED_BY_FRAGMENT_SHADER  0x930A
#define GL_REFERENCED_BY_COMPUTE_SHADER   0x930B
#define GL_TOP_LEVEL_ARRAY_SIZE           0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE         0x930D
#define GL_LOCATION                       0x930E
#define GL_LOCATION_INDEX                 0x930F
#define GL_IS_PER_PATCH                   0x92E7
#define GL_SHADER_STORAGE_BUFFER          0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING  0x90D3
#define GL_SHADER_STORAGE_BUFFER_START    0x90D4
#define GL_SHADER_STORAGE_BUFFER_SIZE     0x90D5
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE  0x90DE
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BARRIER_BIT     0x00002000
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_DEPTH_STENCIL_TEXTURE_MODE     0x90EA
#define GL_TEXTURE_BUFFER_OFFSET          0x919D
#define GL_TEXTURE_BUFFER_SIZE            0x919E
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_VIEW_MIN_LEVEL         0x82DB
#define GL_TEXTURE_VIEW_NUM_LEVELS        0x82DC
#define GL_TEXTURE_VIEW_MIN_LAYER         0x82DD
#define GL_TEXTURE_VIEW_NUM_LAYERS        0x82DE
#define GL_TEXTURE_IMMUTABLE_LEVELS       0x82DF
#define GL_VERTEX_ATTRIB_BINDING          0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET  0x82D5
#define GL_VERTEX_BINDING_DIVISOR         0x82D6
#define GL_VERTEX_BINDING_OFFSET          0x82D7
#define GL_VERTEX_BINDING_STRIDE          0x82D8
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_BINDINGS     0x82DA
#define GL_VERTEX_BINDING_BUFFER          0x8F4F
#define GL_DISPLAY_LIST                   0x82E7
typedef void (GLAPIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
typedef void (GLAPIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
typedef void (GLAPIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (GLAPIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
typedef void (GLAPIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
typedef void (GLAPIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAPIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (GLAPIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);
typedef void (GLAPIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);
typedef void (GLAPIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
typedef GLuint(GLAPIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
typedef GLint(GLAPIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
typedef GLint(GLAPIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef void (GLAPIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAPIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAPIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (GLAPIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
typedef void (GLAPIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
typedef void (GLAPIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
typedef void (GLAPIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
typedef void (GLAPIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);
typedef GLuint(GLAPIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
typedef void (GLAPIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);
typedef void (GLAPIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);
typedef void (GLAPIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
typedef void (GLAPIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
typedef void (GLAPIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);
typedef void (GLAPIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
GLLOADER_API extern void (GLAPIENTRYP glClearBufferData)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glClearBufferSubData)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glDispatchCompute)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
GLLOADER_API extern void (GLAPIENTRYP glDispatchComputeIndirect)(GLintptr indirect);
GLLOADER_API extern void (GLAPIENTRYP glCopyImageSubData)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferParameteri)(GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glGetFramebufferParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetInternalformati64v)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glInvalidateTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
GLLOADER_API extern void (GLAPIENTRYP glInvalidateTexImage)(GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glInvalidateBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLLOADER_API extern void (GLAPIENTRYP glInvalidateBufferData)(GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glInvalidateFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
GLLOADER_API extern void (GLAPIENTRYP glInvalidateSubFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawArraysIndirect)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramInterfaceiv)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
GLLOADER_API extern GLuint(GLAPIENTRYP glGetProgramResourceIndex)(GLuint program, GLenum programInterface, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramResourceName)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramResourceiv)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
GLLOADER_API extern GLint(GLAPIENTRYP glGetProgramResourceLocation)(GLuint program, GLenum programInterface, const GLchar *name);
GLLOADER_API extern GLint(GLAPIENTRYP glGetProgramResourceLocationIndex)(GLuint program, GLenum programInterface, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glShaderStorageBlockBinding)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
GLLOADER_API extern void (GLAPIENTRYP glTexBufferRange)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glTexStorage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLLOADER_API extern void (GLAPIENTRYP glTexStorage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLLOADER_API extern void (GLAPIENTRYP glTextureView)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLLOADER_API extern void (GLAPIENTRYP glBindVertexBuffer)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribFormat)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribIFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribLFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribBinding)(GLuint attribindex, GLuint bindingindex);
GLLOADER_API extern void (GLAPIENTRYP glVertexBindingDivisor)(GLuint bindingindex, GLuint divisor);
GLLOADER_API extern void (GLAPIENTRYP glDebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
GLLOADER_API extern void (GLAPIENTRYP glDebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
GLLOADER_API extern void (GLAPIENTRYP glDebugMessageCallback)(GLDEBUGPROC callback, const void *userParam);
GLLOADER_API extern GLuint(GLAPIENTRYP glGetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
GLLOADER_API extern void (GLAPIENTRYP glPushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
GLLOADER_API extern void (GLAPIENTRYP glPopDebugGroup)(void);
GLLOADER_API extern void (GLAPIENTRYP glObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
GLLOADER_API extern void (GLAPIENTRYP glGetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
GLLOADER_API extern void (GLAPIENTRYP glObjectPtrLabel)(const void *ptr, GLsizei length, const GLchar *label);
GLLOADER_API extern void (GLAPIENTRYP glGetObjectPtrLabel)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
#endif /* GL_VERSION_4_3 */

#ifndef GL_VERSION_4_4
#define GL_VERSION_4_4 1
#define GL_MAX_VERTEX_ATTRIB_STRIDE       0x82E5
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_TEXTURE_BUFFER_BINDING         0x8C2A
#define GL_MAP_PERSISTENT_BIT             0x0040
#define GL_MAP_COHERENT_BIT               0x0080
#define GL_DYNAMIC_STORAGE_BIT            0x0100
#define GL_CLIENT_STORAGE_BIT             0x0200
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_BUFFER_IMMUTABLE_STORAGE       0x821F
#define GL_BUFFER_STORAGE_FLAGS           0x8220
#define GL_CLEAR_TEXTURE                  0x9365
#define GL_LOCATION_COMPONENT             0x934A
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_QUERY_BUFFER                   0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT       0x00008000
#define GL_QUERY_BUFFER_BINDING           0x9193
#define GL_QUERY_RESULT_NO_WAIT           0x9194
#define GL_MIRROR_CLAMP_TO_EDGE           0x8743
typedef void (GLAPIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
typedef void (GLAPIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
typedef void (GLAPIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
typedef void (GLAPIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
typedef void (GLAPIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
typedef void (GLAPIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);
typedef void (GLAPIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *samplers);
typedef void (GLAPIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);
typedef void (GLAPIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
GLLOADER_API extern void (GLAPIENTRYP glBufferStorage)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
GLLOADER_API extern void (GLAPIENTRYP glClearTexImage)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glClearTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glBindBuffersBase)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
GLLOADER_API extern void (GLAPIENTRYP glBindBuffersRange)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
GLLOADER_API extern void (GLAPIENTRYP glBindTextures)(GLuint first, GLsizei count, const GLuint *textures);
GLLOADER_API extern void (GLAPIENTRYP glBindSamplers)(GLuint first, GLsizei count, const GLuint *samplers);
GLLOADER_API extern void (GLAPIENTRYP glBindImageTextures)(GLuint first, GLsizei count, const GLuint *textures);
GLLOADER_API extern void (GLAPIENTRYP glBindVertexBuffers)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
#endif /* GL_VERSION_4_4 */

#ifndef GL_VERSION_4_5
#define GL_VERSION_4_5 1
#define GL_CONTEXT_LOST                   0x0507
#define GL_NEGATIVE_ONE_TO_ONE            0x935E
#define GL_ZERO_TO_ONE                    0x935F
#define GL_CLIP_ORIGIN                    0x935C
#define GL_CLIP_DEPTH_MODE                0x935D
#define GL_QUERY_WAIT_INVERTED            0x8E17
#define GL_QUERY_NO_WAIT_INVERTED         0x8E18
#define GL_QUERY_BY_REGION_WAIT_INVERTED  0x8E19
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#define GL_MAX_CULL_DISTANCES             0x82F9
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#define GL_TEXTURE_TARGET                 0x1006
#define GL_QUERY_TARGET                   0x82EA
#define GL_GUILTY_CONTEXT_RESET           0x8253
#define GL_INNOCENT_CONTEXT_RESET         0x8254
#define GL_UNKNOWN_CONTEXT_RESET          0x8255
#define GL_RESET_NOTIFICATION_STRATEGY    0x8256
#define GL_LOSE_CONTEXT_ON_RESET          0x8252
#define GL_NO_RESET_NOTIFICATION          0x8261
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_CONTEXT_RELEASE_BEHAVIOR       0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
typedef void (GLAPIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);
typedef void (GLAPIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);
typedef void (GLAPIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param);
typedef void (GLAPIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint *param);
typedef void (GLAPIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
typedef void (GLAPIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);
typedef void (GLAPIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
typedef void (GLAPIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
typedef void (GLAPIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
typedef void (GLAPIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
typedef void (GLAPIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
typedef void *(GLAPIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);
typedef void *(GLAPIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef GLboolean(GLAPIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);
typedef void (GLAPIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (GLAPIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLint64 *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
typedef void (GLAPIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);
typedef void (GLAPIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
typedef void (GLAPIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
typedef void (GLAPIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (GLAPIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef GLenum(GLAPIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum target);
typedef void (GLAPIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pname, GLint *param);
typedef void (GLAPIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
typedef void (GLAPIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);
typedef void (GLAPIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAPIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloat *param);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint *param);
typedef void (GLAPIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);
typedef void (GLAPIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
typedef void (GLAPIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizei bufSize, void *pixels);
typedef void (GLAPIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);
typedef void (GLAPIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);
typedef void (GLAPIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (GLAPIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);
typedef void (GLAPIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);
typedef void (GLAPIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
typedef void (GLAPIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);
typedef void (GLAPIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);
typedef void (GLAPIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);
typedef void (GLAPIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);
typedef void (GLAPIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
typedef void (GLAPIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
typedef GLenum(GLAPIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);
typedef void (GLAPIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSize, void *pixels);
typedef void (GLAPIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
typedef void (GLAPIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
typedef void (GLAPIENTRYP PFNGLGETNMAPDVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
typedef void (GLAPIENTRYP PFNGLGETNMAPFVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
typedef void (GLAPIENTRYP PFNGLGETNMAPIVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
typedef void (GLAPIENTRYP PFNGLGETNPIXELMAPFVPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
typedef void (GLAPIENTRYP PFNGLGETNPIXELMAPUIVPROC) (GLenum map, GLsizei bufSize, GLuint *values);
typedef void (GLAPIENTRYP PFNGLGETNPIXELMAPUSVPROC) (GLenum map, GLsizei bufSize, GLushort *values);
typedef void (GLAPIENTRYP PFNGLGETNPOLYGONSTIPPLEPROC) (GLsizei bufSize, GLubyte *pattern);
typedef void (GLAPIENTRYP PFNGLGETNCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
typedef void (GLAPIENTRYP PFNGLGETNCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
typedef void (GLAPIENTRYP PFNGLGETNSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
typedef void (GLAPIENTRYP PFNGLGETNHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
typedef void (GLAPIENTRYP PFNGLGETNMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
typedef void (GLAPIENTRYP PFNGLTEXTUREBARRIERPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glClipControl)(GLenum origin, GLenum depth);
GLLOADER_API extern void (GLAPIENTRYP glCreateTransformFeedbacks)(GLsizei n, GLuint *ids);
GLLOADER_API extern void (GLAPIENTRYP glTransformFeedbackBufferBase)(GLuint xfb, GLuint index, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glTransformFeedbackBufferRange)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glGetTransformFeedbackiv)(GLuint xfb, GLenum pname, GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glGetTransformFeedbacki_v)(GLuint xfb, GLenum pname, GLuint index, GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glGetTransformFeedbacki64_v)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
GLLOADER_API extern void (GLAPIENTRYP glCreateBuffers)(GLsizei n, GLuint *buffers);
GLLOADER_API extern void (GLAPIENTRYP glNamedBufferStorage)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
GLLOADER_API extern void (GLAPIENTRYP glNamedBufferData)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
GLLOADER_API extern void (GLAPIENTRYP glNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCopyNamedBufferSubData)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glClearNamedBufferData)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glClearNamedBufferSubData)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void *(GLAPIENTRYP glMapNamedBuffer)(GLuint buffer, GLenum access);
GLLOADER_API extern void *(GLAPIENTRYP glMapNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLLOADER_API extern GLboolean(GLAPIENTRYP glUnmapNamedBuffer)(GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glFlushMappedNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedBufferParameteriv)(GLuint buffer, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedBufferParameteri64v)(GLuint buffer, GLenum pname, GLint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedBufferPointerv)(GLuint buffer, GLenum pname, void **params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
GLLOADER_API extern void (GLAPIENTRYP glCreateFramebuffers)(GLsizei n, GLuint *framebuffers);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferRenderbuffer)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferParameteri)(GLuint framebuffer, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferTexture)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferTextureLayer)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferDrawBuffer)(GLuint framebuffer, GLenum buf);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferDrawBuffers)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferReadBuffer)(GLuint framebuffer, GLenum src);
GLLOADER_API extern void (GLAPIENTRYP glInvalidateNamedFramebufferData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
GLLOADER_API extern void (GLAPIENTRYP glInvalidateNamedFramebufferSubData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glClearNamedFramebufferiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glClearNamedFramebufferuiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glClearNamedFramebufferfv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glClearNamedFramebufferfi)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLLOADER_API extern void (GLAPIENTRYP glBlitNamedFramebuffer)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLLOADER_API extern GLenum(GLAPIENTRYP glCheckNamedFramebufferStatus)(GLuint framebuffer, GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedFramebufferParameteriv)(GLuint framebuffer, GLenum pname, GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedFramebufferAttachmentParameteriv)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glCreateRenderbuffers)(GLsizei n, GLuint *renderbuffers);
GLLOADER_API extern void (GLAPIENTRYP glNamedRenderbufferStorage)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glNamedRenderbufferStorageMultisample)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedRenderbufferParameteriv)(GLuint renderbuffer, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glCreateTextures)(GLenum target, GLsizei n, GLuint *textures);
GLLOADER_API extern void (GLAPIENTRYP glTextureBuffer)(GLuint texture, GLenum internalformat, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glTextureBufferRange)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage1D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage2D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage3D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage2DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage3DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLLOADER_API extern void (GLAPIENTRYP glTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCopyTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glCopyTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glCopyTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameterf)(GLuint texture, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameterfv)(GLuint texture, GLenum pname, const GLfloat *param);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameteri)(GLuint texture, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameterIiv)(GLuint texture, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameterIuiv)(GLuint texture, GLenum pname, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameteriv)(GLuint texture, GLenum pname, const GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glGenerateTextureMipmap)(GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glBindTextureUnit)(GLuint unit, GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureImage)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetCompressedTextureImage)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureLevelParameterfv)(GLuint texture, GLint level, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureLevelParameteriv)(GLuint texture, GLint level, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureParameterfv)(GLuint texture, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureParameterIiv)(GLuint texture, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureParameterIuiv)(GLuint texture, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureParameteriv)(GLuint texture, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glCreateVertexArrays)(GLsizei n, GLuint *arrays);
GLLOADER_API extern void (GLAPIENTRYP glDisableVertexArrayAttrib)(GLuint vaobj, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glEnableVertexArrayAttrib)(GLuint vaobj, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayElementBuffer)(GLuint vaobj, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexBuffer)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexBuffers)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayAttribBinding)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayAttribFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayAttribIFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayAttribLFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayBindingDivisor)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexArrayiv)(GLuint vaobj, GLenum pname, GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexArrayIndexediv)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexArrayIndexed64iv)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
GLLOADER_API extern void (GLAPIENTRYP glCreateSamplers)(GLsizei n, GLuint *samplers);
GLLOADER_API extern void (GLAPIENTRYP glCreateProgramPipelines)(GLsizei n, GLuint *pipelines);
GLLOADER_API extern void (GLAPIENTRYP glCreateQueries)(GLenum target, GLsizei n, GLuint *ids);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryBufferObjecti64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryBufferObjectiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryBufferObjectui64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryBufferObjectuiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glMemoryBarrierByRegion)(GLbitfield barriers);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetCompressedTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
GLLOADER_API extern GLenum(GLAPIENTRYP glGetGraphicsResetStatus)(void);
GLLOADER_API extern void (GLAPIENTRYP glGetnCompressedTexImage)(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetnTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformdv)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformfv)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformiv)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformuiv)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glReadnPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
GLLOADER_API extern void (GLAPIENTRYP glGetnMapdv)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glGetnMapfv)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glGetnMapiv)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glGetnPixelMapfv)(GLenum map, GLsizei bufSize, GLfloat *values);
GLLOADER_API extern void (GLAPIENTRYP glGetnPixelMapuiv)(GLenum map, GLsizei bufSize, GLuint *values);
GLLOADER_API extern void (GLAPIENTRYP glGetnPixelMapusv)(GLenum map, GLsizei bufSize, GLushort *values);
GLLOADER_API extern void (GLAPIENTRYP glGetnPolygonStipple)(GLsizei bufSize, GLubyte *pattern);
GLLOADER_API extern void (GLAPIENTRYP glGetnColorTable)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
GLLOADER_API extern void (GLAPIENTRYP glGetnConvolutionFilter)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
GLLOADER_API extern void (GLAPIENTRYP glGetnSeparableFilter)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
GLLOADER_API extern void (GLAPIENTRYP glGetnHistogram)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
GLLOADER_API extern void (GLAPIENTRYP glGetnMinmax)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
GLLOADER_API extern void (GLAPIENTRYP glTextureBarrier)(void);
#endif /* GL_VERSION_4_5 */

#ifndef GL_ARB_ES2_compatibility
#define GL_ARB_ES2_compatibility 1
#endif /* GL_ARB_ES2_compatibility */

#ifndef GL_ARB_ES3_1_compatibility
#define GL_ARB_ES3_1_compatibility 1
#endif /* GL_ARB_ES3_1_compatibility */

#ifndef GL_ARB_ES3_2_compatibility
#define GL_ARB_ES3_2_compatibility 1
#define GL_PRIMITIVE_BOUNDING_BOX_ARB     0x92BE
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB 0x9381
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB 0x9382
typedef void (GLAPIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLLOADER_API extern void (GLAPIENTRYP glPrimitiveBoundingBoxARB)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
#endif /* GL_ARB_ES3_2_compatibility */

#ifndef GL_ARB_ES3_compatibility
#define GL_ARB_ES3_compatibility 1
#endif /* GL_ARB_ES3_compatibility */

#ifndef GL_ARB_arrays_of_arrays
#define GL_ARB_arrays_of_arrays 1
#endif /* GL_ARB_arrays_of_arrays */

#ifndef GL_ARB_base_instance
#define GL_ARB_base_instance 1
#endif /* GL_ARB_base_instance */

#ifndef GL_ARB_bindless_texture
#define GL_ARB_bindless_texture 1
typedef uint64_t GLuint64EXT;
#define GL_UNSIGNED_INT64_ARB             0x140F
typedef GLuint64(GLAPIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);
typedef GLuint64(GLAPIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler);
typedef void (GLAPIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);
typedef void (GLAPIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);
typedef GLuint64(GLAPIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (GLAPIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);
typedef void (GLAPIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);
typedef void (GLAPIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);
typedef void (GLAPIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GLuint64 value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);
typedef GLboolean(GLAPIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);
typedef GLboolean(GLAPIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64EXT *params);
GLLOADER_API extern GLuint64(GLAPIENTRYP glGetTextureHandleARB)(GLuint texture);
GLLOADER_API extern GLuint64(GLAPIENTRYP glGetTextureSamplerHandleARB)(GLuint texture, GLuint sampler);
GLLOADER_API extern void (GLAPIENTRYP glMakeTextureHandleResidentARB)(GLuint64 handle);
GLLOADER_API extern void (GLAPIENTRYP glMakeTextureHandleNonResidentARB)(GLuint64 handle);
GLLOADER_API extern GLuint64(GLAPIENTRYP glGetImageHandleARB)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLLOADER_API extern void (GLAPIENTRYP glMakeImageHandleResidentARB)(GLuint64 handle, GLenum access);
GLLOADER_API extern void (GLAPIENTRYP glMakeImageHandleNonResidentARB)(GLuint64 handle);
GLLOADER_API extern void (GLAPIENTRYP glUniformHandleui64ARB)(GLint location, GLuint64 value);
GLLOADER_API extern void (GLAPIENTRYP glUniformHandleui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformHandleui64ARB)(GLuint program, GLint location, GLuint64 value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformHandleui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsTextureHandleResidentARB)(GLuint64 handle);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsImageHandleResidentARB)(GLuint64 handle);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1ui64ARB)(GLuint index, GLuint64EXT x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1ui64vARB)(GLuint index, const GLuint64EXT *v);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribLui64vARB)(GLuint index, GLenum pname, GLuint64EXT *params);
#endif /* GL_ARB_bindless_texture */

#ifndef GL_ARB_blend_func_extended
#define GL_ARB_blend_func_extended 1
#endif /* GL_ARB_blend_func_extended */

#ifndef GL_ARB_buffer_storage
#define GL_ARB_buffer_storage 1
#endif /* GL_ARB_buffer_storage */

#ifndef GL_ARB_cl_event
#define GL_ARB_cl_event 1
struct _cl_context;
struct _cl_event;
#define GL_SYNC_CL_EVENT_ARB              0x8240
#define GL_SYNC_CL_EVENT_COMPLETE_ARB     0x8241
typedef GLsync(GLAPIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
GLLOADER_API extern GLsync(GLAPIENTRYP glCreateSyncFromCLeventARB)(struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
#endif /* GL_ARB_cl_event */

#ifndef GL_ARB_clear_buffer_object
#define GL_ARB_clear_buffer_object 1
#endif /* GL_ARB_clear_buffer_object */

#ifndef GL_ARB_clear_texture
#define GL_ARB_clear_texture 1
#endif /* GL_ARB_clear_texture */

#ifndef GL_ARB_clip_control
#define GL_ARB_clip_control 1
#endif /* GL_ARB_clip_control */

#ifndef GL_ARB_color_buffer_float
#define GL_ARB_color_buffer_float 1
#define GL_RGBA_FLOAT_MODE_ARB            0x8820
#define GL_CLAMP_VERTEX_COLOR_ARB         0x891A
#define GL_CLAMP_FRAGMENT_COLOR_ARB       0x891B
#define GL_CLAMP_READ_COLOR_ARB           0x891C
#define GL_FIXED_ONLY_ARB                 0x891D
typedef void (GLAPIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);
GLLOADER_API extern void (GLAPIENTRYP glClampColorARB)(GLenum target, GLenum clamp);
#endif /* GL_ARB_color_buffer_float */

#ifndef GL_ARB_compatibility
#define GL_ARB_compatibility 1
#endif /* GL_ARB_compatibility */

#ifndef GL_ARB_compressed_texture_pixel_storage
#define GL_ARB_compressed_texture_pixel_storage 1
#endif /* GL_ARB_compressed_texture_pixel_storage */

#ifndef GL_ARB_compute_shader
#define GL_ARB_compute_shader 1
#endif /* GL_ARB_compute_shader */

#ifndef GL_ARB_compute_variable_group_size
#define GL_ARB_compute_variable_group_size 1
#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB 0x9344
#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB 0x90EB
#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB 0x9345
#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB 0x91BF
typedef void (GLAPIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
GLLOADER_API extern void (GLAPIENTRYP glDispatchComputeGroupSizeARB)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
#endif /* GL_ARB_compute_variable_group_size */

#ifndef GL_ARB_conditional_render_inverted
#define GL_ARB_conditional_render_inverted 1
#endif /* GL_ARB_conditional_render_inverted */

#ifndef GL_ARB_conservative_depth
#define GL_ARB_conservative_depth 1
#endif /* GL_ARB_conservative_depth */

#ifndef GL_ARB_copy_buffer
#define GL_ARB_copy_buffer 1
#endif /* GL_ARB_copy_buffer */

#ifndef GL_ARB_copy_image
#define GL_ARB_copy_image 1
#endif /* GL_ARB_copy_image */

#ifndef GL_ARB_cull_distance
#define GL_ARB_cull_distance 1
#endif /* GL_ARB_cull_distance */

#ifndef GL_ARB_debug_output
#define GL_ARB_debug_output 1
typedef void (GLAPIENTRY  *GLDEBUGPROCARB)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *message, const void *userParam);
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB   0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION_ARB    0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB  0x8245
#define GL_DEBUG_SOURCE_API_ARB           0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB   0x8249
#define GL_DEBUG_SOURCE_APPLICATION_ARB   0x824A
#define GL_DEBUG_SOURCE_OTHER_ARB         0x824B
#define GL_DEBUG_TYPE_ERROR_ARB           0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#define GL_DEBUG_TYPE_PORTABILITY_ARB     0x824F
#define GL_DEBUG_TYPE_PERFORMANCE_ARB     0x8250
#define GL_DEBUG_TYPE_OTHER_ARB           0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB   0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB  0x9144
#define GL_DEBUG_LOGGED_MESSAGES_ARB      0x9145
#define GL_DEBUG_SEVERITY_HIGH_ARB        0x9146
#define GL_DEBUG_SEVERITY_MEDIUM_ARB      0x9147
#define GL_DEBUG_SEVERITY_LOW_ARB         0x9148
typedef void (GLAPIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
typedef void (GLAPIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
typedef void (GLAPIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *userParam);
typedef GLuint(GLAPIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
GLLOADER_API extern void (GLAPIENTRYP glDebugMessageControlARB)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
GLLOADER_API extern void (GLAPIENTRYP glDebugMessageInsertARB)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
GLLOADER_API extern void (GLAPIENTRYP glDebugMessageCallbackARB)(GLDEBUGPROCARB callback, const void *userParam);
GLLOADER_API extern GLuint(GLAPIENTRYP glGetDebugMessageLogARB)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
#endif /* GL_ARB_debug_output */

#ifndef GL_ARB_depth_buffer_float
#define GL_ARB_depth_buffer_float 1
#endif /* GL_ARB_depth_buffer_float */

#ifndef GL_ARB_depth_clamp
#define GL_ARB_depth_clamp 1
#endif /* GL_ARB_depth_clamp */

#ifndef GL_ARB_depth_texture
#define GL_ARB_depth_texture 1
#define GL_DEPTH_COMPONENT16_ARB          0x81A5
#define GL_DEPTH_COMPONENT24_ARB          0x81A6
#define GL_DEPTH_COMPONENT32_ARB          0x81A7
#define GL_TEXTURE_DEPTH_SIZE_ARB         0x884A
#define GL_DEPTH_TEXTURE_MODE_ARB         0x884B
#endif /* GL_ARB_depth_texture */

#ifndef GL_ARB_derivative_control
#define GL_ARB_derivative_control 1
#endif /* GL_ARB_derivative_control */

#ifndef GL_ARB_direct_state_access
#define GL_ARB_direct_state_access 1
#endif /* GL_ARB_direct_state_access */

#ifndef GL_ARB_draw_buffers
#define GL_ARB_draw_buffers 1
#define GL_MAX_DRAW_BUFFERS_ARB           0x8824
#define GL_DRAW_BUFFER0_ARB               0x8825
#define GL_DRAW_BUFFER1_ARB               0x8826
#define GL_DRAW_BUFFER2_ARB               0x8827
#define GL_DRAW_BUFFER3_ARB               0x8828
#define GL_DRAW_BUFFER4_ARB               0x8829
#define GL_DRAW_BUFFER5_ARB               0x882A
#define GL_DRAW_BUFFER6_ARB               0x882B
#define GL_DRAW_BUFFER7_ARB               0x882C
#define GL_DRAW_BUFFER8_ARB               0x882D
#define GL_DRAW_BUFFER9_ARB               0x882E
#define GL_DRAW_BUFFER10_ARB              0x882F
#define GL_DRAW_BUFFER11_ARB              0x8830
#define GL_DRAW_BUFFER12_ARB              0x8831
#define GL_DRAW_BUFFER13_ARB              0x8832
#define GL_DRAW_BUFFER14_ARB              0x8833
#define GL_DRAW_BUFFER15_ARB              0x8834
typedef void (GLAPIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);
GLLOADER_API extern void (GLAPIENTRYP glDrawBuffersARB)(GLsizei n, const GLenum *bufs);
#endif /* GL_ARB_draw_buffers */

#ifndef GL_ARB_draw_buffers_blend
#define GL_ARB_draw_buffers_blend 1
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAPIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (GLAPIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquationiARB)(GLuint buf, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquationSeparateiARB)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendFunciARB)(GLuint buf, GLenum src, GLenum dst);
GLLOADER_API extern void (GLAPIENTRYP glBlendFuncSeparateiARB)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
#endif /* GL_ARB_draw_buffers_blend */

#ifndef GL_ARB_draw_elements_base_vertex
#define GL_ARB_draw_elements_base_vertex 1
#endif /* GL_ARB_draw_elements_base_vertex */

#ifndef GL_ARB_draw_indirect
#define GL_ARB_draw_indirect 1
#endif /* GL_ARB_draw_indirect */

#ifndef GL_ARB_draw_instanced
#define GL_ARB_draw_instanced 1
typedef void (GLAPIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
GLLOADER_API extern void (GLAPIENTRYP glDrawArraysInstancedARB)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementsInstancedARB)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
#endif /* GL_ARB_draw_instanced */

#ifndef GL_ARB_enhanced_layouts
#define GL_ARB_enhanced_layouts 1
#endif /* GL_ARB_enhanced_layouts */

#ifndef GL_ARB_explicit_attrib_location
#define GL_ARB_explicit_attrib_location 1
#endif /* GL_ARB_explicit_attrib_location */

#ifndef GL_ARB_explicit_uniform_location
#define GL_ARB_explicit_uniform_location 1
#endif /* GL_ARB_explicit_uniform_location */

#ifndef GL_ARB_fragment_coord_conventions
#define GL_ARB_fragment_coord_conventions 1
#endif /* GL_ARB_fragment_coord_conventions */

#ifndef GL_ARB_fragment_layer_viewport
#define GL_ARB_fragment_layer_viewport 1
#endif /* GL_ARB_fragment_layer_viewport */

#ifndef GL_ARB_fragment_program
#define GL_ARB_fragment_program 1
#define GL_FRAGMENT_PROGRAM_ARB           0x8804
#define GL_PROGRAM_FORMAT_ASCII_ARB       0x8875
#define GL_PROGRAM_LENGTH_ARB             0x8627
#define GL_PROGRAM_FORMAT_ARB             0x8876
#define GL_PROGRAM_BINDING_ARB            0x8677
#define GL_PROGRAM_INSTRUCTIONS_ARB       0x88A0
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB   0x88A1
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#define GL_PROGRAM_TEMPORARIES_ARB        0x88A4
#define GL_MAX_PROGRAM_TEMPORARIES_ARB    0x88A5
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#define GL_PROGRAM_PARAMETERS_ARB         0x88A8
#define GL_MAX_PROGRAM_PARAMETERS_ARB     0x88A9
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB  0x88AA
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#define GL_PROGRAM_ATTRIBS_ARB            0x88AC
#define GL_MAX_PROGRAM_ATTRIBS_ARB        0x88AD
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB     0x88AE
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB   0x8805
#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB   0x8806
#define GL_PROGRAM_TEX_INDIRECTIONS_ARB   0x8807
#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x8808
#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x8809
#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x880A
#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 0x880B
#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 0x880C
#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 0x880D
#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x880E
#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x880F
#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x8810
#define GL_PROGRAM_STRING_ARB             0x8628
#define GL_PROGRAM_ERROR_POSITION_ARB     0x864B
#define GL_CURRENT_MATRIX_ARB             0x8641
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB   0x88B7
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
#define GL_MAX_PROGRAM_MATRICES_ARB       0x862F
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
#define GL_MAX_TEXTURE_COORDS_ARB         0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB    0x8872
#define GL_PROGRAM_ERROR_STRING_ARB       0x8874
#define GL_MATRIX0_ARB                    0x88C0
#define GL_MATRIX1_ARB                    0x88C1
#define GL_MATRIX2_ARB                    0x88C2
#define GL_MATRIX3_ARB                    0x88C3
#define GL_MATRIX4_ARB                    0x88C4
#define GL_MATRIX5_ARB                    0x88C5
#define GL_MATRIX6_ARB                    0x88C6
#define GL_MATRIX7_ARB                    0x88C7
#define GL_MATRIX8_ARB                    0x88C8
#define GL_MATRIX9_ARB                    0x88C9
#define GL_MATRIX10_ARB                   0x88CA
#define GL_MATRIX11_ARB                   0x88CB
#define GL_MATRIX12_ARB                   0x88CC
#define GL_MATRIX13_ARB                   0x88CD
#define GL_MATRIX14_ARB                   0x88CE
#define GL_MATRIX15_ARB                   0x88CF
#define GL_MATRIX16_ARB                   0x88D0
#define GL_MATRIX17_ARB                   0x88D1
#define GL_MATRIX18_ARB                   0x88D2
#define GL_MATRIX19_ARB                   0x88D3
#define GL_MATRIX20_ARB                   0x88D4
#define GL_MATRIX21_ARB                   0x88D5
#define GL_MATRIX22_ARB                   0x88D6
#define GL_MATRIX23_ARB                   0x88D7
#define GL_MATRIX24_ARB                   0x88D8
#define GL_MATRIX25_ARB                   0x88D9
#define GL_MATRIX26_ARB                   0x88DA
#define GL_MATRIX27_ARB                   0x88DB
#define GL_MATRIX28_ARB                   0x88DC
#define GL_MATRIX29_ARB                   0x88DD
#define GL_MATRIX30_ARB                   0x88DE
#define GL_MATRIX31_ARB                   0x88DF
typedef void (GLAPIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const void *string);
typedef void (GLAPIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);
typedef void (GLAPIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);
typedef void (GLAPIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *string);
typedef GLboolean(GLAPIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);
GLLOADER_API extern void (GLAPIENTRYP glProgramStringARB)(GLenum target, GLenum format, GLsizei len, const void *string);
GLLOADER_API extern void (GLAPIENTRYP glBindProgramARB)(GLenum target, GLuint program);
GLLOADER_API extern void (GLAPIENTRYP glDeleteProgramsARB)(GLsizei n, const GLuint *programs);
GLLOADER_API extern void (GLAPIENTRYP glGenProgramsARB)(GLsizei n, GLuint *programs);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramEnvParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramEnvParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramLocalParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramLocalParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramivARB)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramStringARB)(GLenum target, GLenum pname, void *string);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsProgramARB)(GLuint program);
#endif /* GL_ARB_fragment_program */

#ifndef GL_ARB_fragment_program_shadow
#define GL_ARB_fragment_program_shadow 1
#endif /* GL_ARB_fragment_program_shadow */

#ifndef GL_ARB_fragment_shader
#define GL_ARB_fragment_shader 1
#define GL_FRAGMENT_SHADER_ARB            0x8B30
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 0x8B49
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 0x8B8B
#endif /* GL_ARB_fragment_shader */

#ifndef GL_ARB_fragment_shader_interlock
#define GL_ARB_fragment_shader_interlock 1
#endif /* GL_ARB_fragment_shader_interlock */

#ifndef GL_ARB_framebuffer_no_attachments
#define GL_ARB_framebuffer_no_attachments 1
#endif /* GL_ARB_framebuffer_no_attachments */

#ifndef GL_ARB_framebuffer_object
#define GL_ARB_framebuffer_object 1
#endif /* GL_ARB_framebuffer_object */

#ifndef GL_ARB_framebuffer_sRGB
#define GL_ARB_framebuffer_sRGB 1
#endif /* GL_ARB_framebuffer_sRGB */

#ifndef GL_ARB_geometry_shader4
#define GL_ARB_geometry_shader4 1
#define GL_LINES_ADJACENCY_ARB            0x000A
#define GL_LINE_STRIP_ADJACENCY_ARB       0x000B
#define GL_TRIANGLES_ADJACENCY_ARB        0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB   0x000D
#define GL_PROGRAM_POINT_SIZE_ARB         0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#define GL_GEOMETRY_SHADER_ARB            0x8DD9
#define GL_GEOMETRY_VERTICES_OUT_ARB      0x8DDA
#define GL_GEOMETRY_INPUT_TYPE_ARB        0x8DDB
#define GL_GEOMETRY_OUTPUT_TYPE_ARB       0x8DDC
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
typedef void (GLAPIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLLOADER_API extern void (GLAPIENTRYP glProgramParameteriARB)(GLuint program, GLenum pname, GLint value);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTextureARB)(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTextureLayerARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTextureFaceARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif /* GL_ARB_geometry_shader4 */

#ifndef GL_ARB_get_program_binary
#define GL_ARB_get_program_binary 1
#endif /* GL_ARB_get_program_binary */

#ifndef GL_ARB_get_texture_sub_image
#define GL_ARB_get_texture_sub_image 1
#endif /* GL_ARB_get_texture_sub_image */

#ifndef GL_ARB_gpu_shader5
#define GL_ARB_gpu_shader5 1
#endif /* GL_ARB_gpu_shader5 */

#ifndef GL_ARB_gpu_shader_fp64
#define GL_ARB_gpu_shader_fp64 1
#endif /* GL_ARB_gpu_shader_fp64 */

#ifndef GL_ARB_gpu_shader_int64
#define GL_ARB_gpu_shader_int64 1
#define GL_INT64_ARB                      0x140E
#define GL_INT64_VEC2_ARB                 0x8FE9
#define GL_INT64_VEC3_ARB                 0x8FEA
#define GL_INT64_VEC4_ARB                 0x8FEB
#define GL_UNSIGNED_INT64_VEC2_ARB        0x8FF5
#define GL_UNSIGNED_INT64_VEC3_ARB        0x8FF6
#define GL_UNSIGNED_INT64_VEC4_ARB        0x8FF7
typedef void (GLAPIENTRYP PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);
typedef void (GLAPIENTRYP PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);
typedef void (GLAPIENTRYP PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (GLAPIENTRYP PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (GLAPIENTRYP PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);
typedef void (GLAPIENTRYP PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);
typedef void (GLAPIENTRYP PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (GLAPIENTRYP PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (GLAPIENTRYP PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64 *params);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint64 *params);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint64 *params);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLint64 x);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLuint64 x);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform1i64ARB)(GLint location, GLint64 x);
GLLOADER_API extern void (GLAPIENTRYP glUniform2i64ARB)(GLint location, GLint64 x, GLint64 y);
GLLOADER_API extern void (GLAPIENTRYP glUniform3i64ARB)(GLint location, GLint64 x, GLint64 y, GLint64 z);
GLLOADER_API extern void (GLAPIENTRYP glUniform4i64ARB)(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
GLLOADER_API extern void (GLAPIENTRYP glUniform1i64vARB)(GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2i64vARB)(GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3i64vARB)(GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4i64vARB)(GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform1ui64ARB)(GLint location, GLuint64 x);
GLLOADER_API extern void (GLAPIENTRYP glUniform2ui64ARB)(GLint location, GLuint64 x, GLuint64 y);
GLLOADER_API extern void (GLAPIENTRYP glUniform3ui64ARB)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
GLLOADER_API extern void (GLAPIENTRYP glUniform4ui64ARB)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
GLLOADER_API extern void (GLAPIENTRYP glUniform1ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformi64vARB)(GLuint program, GLint location, GLint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformui64vARB)(GLuint program, GLint location, GLuint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformi64vARB)(GLuint program, GLint location, GLsizei bufSize, GLint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformui64vARB)(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1i64ARB)(GLuint program, GLint location, GLint64 x);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1ui64ARB)(GLuint program, GLint location, GLuint64 x);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
#endif /* GL_ARB_gpu_shader_int64 */

#ifndef GL_ARB_half_float_pixel
#define GL_ARB_half_float_pixel 1
typedef unsigned short GLhalfARB;
#define GL_HALF_FLOAT_ARB                 0x140B
#endif /* GL_ARB_half_float_pixel */

#ifndef GL_ARB_half_float_vertex
#define GL_ARB_half_float_vertex 1
#endif /* GL_ARB_half_float_vertex */

#ifndef GL_ARB_imaging
#define GL_ARB_imaging 1
#define GL_BLEND_COLOR                    0x8005
#define GL_BLEND_EQUATION                 0x8009
#define GL_CONVOLUTION_1D                 0x8010
#define GL_CONVOLUTION_2D                 0x8011
#define GL_SEPARABLE_2D                   0x8012
#define GL_CONVOLUTION_BORDER_MODE        0x8013
#define GL_CONVOLUTION_FILTER_SCALE       0x8014
#define GL_CONVOLUTION_FILTER_BIAS        0x8015
#define GL_REDUCE                         0x8016
#define GL_CONVOLUTION_FORMAT             0x8017
#define GL_CONVOLUTION_WIDTH              0x8018
#define GL_CONVOLUTION_HEIGHT             0x8019
#define GL_MAX_CONVOLUTION_WIDTH          0x801A
#define GL_MAX_CONVOLUTION_HEIGHT         0x801B
#define GL_POST_CONVOLUTION_RED_SCALE     0x801C
#define GL_POST_CONVOLUTION_GREEN_SCALE   0x801D
#define GL_POST_CONVOLUTION_BLUE_SCALE    0x801E
#define GL_POST_CONVOLUTION_ALPHA_SCALE   0x801F
#define GL_POST_CONVOLUTION_RED_BIAS      0x8020
#define GL_POST_CONVOLUTION_GREEN_BIAS    0x8021
#define GL_POST_CONVOLUTION_BLUE_BIAS     0x8022
#define GL_POST_CONVOLUTION_ALPHA_BIAS    0x8023
#define GL_HISTOGRAM                      0x8024
#define GL_PROXY_HISTOGRAM                0x8025
#define GL_HISTOGRAM_WIDTH                0x8026
#define GL_HISTOGRAM_FORMAT               0x8027
#define GL_HISTOGRAM_RED_SIZE             0x8028
#define GL_HISTOGRAM_GREEN_SIZE           0x8029
#define GL_HISTOGRAM_BLUE_SIZE            0x802A
#define GL_HISTOGRAM_ALPHA_SIZE           0x802B
#define GL_HISTOGRAM_LUMINANCE_SIZE       0x802C
#define GL_HISTOGRAM_SINK                 0x802D
#define GL_MINMAX                         0x802E
#define GL_MINMAX_FORMAT                  0x802F
#define GL_MINMAX_SINK                    0x8030
#define GL_TABLE_TOO_LARGE                0x8031
#define GL_COLOR_MATRIX                   0x80B1
#define GL_COLOR_MATRIX_STACK_DEPTH       0x80B2
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH   0x80B3
#define GL_POST_COLOR_MATRIX_RED_SCALE    0x80B4
#define GL_POST_COLOR_MATRIX_GREEN_SCALE  0x80B5
#define GL_POST_COLOR_MATRIX_BLUE_SCALE   0x80B6
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE  0x80B7
#define GL_POST_COLOR_MATRIX_RED_BIAS     0x80B8
#define GL_POST_COLOR_MATRIX_GREEN_BIAS   0x80B9
#define GL_POST_COLOR_MATRIX_BLUE_BIAS    0x80BA
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS   0x80BB
#define GL_COLOR_TABLE                    0x80D0
#define GL_POST_CONVOLUTION_COLOR_TABLE   0x80D1
#define GL_POST_COLOR_MATRIX_COLOR_TABLE  0x80D2
#define GL_PROXY_COLOR_TABLE              0x80D3
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#define GL_COLOR_TABLE_SCALE              0x80D6
#define GL_COLOR_TABLE_BIAS               0x80D7
#define GL_COLOR_TABLE_FORMAT             0x80D8
#define GL_COLOR_TABLE_WIDTH              0x80D9
#define GL_COLOR_TABLE_RED_SIZE           0x80DA
#define GL_COLOR_TABLE_GREEN_SIZE         0x80DB
#define GL_COLOR_TABLE_BLUE_SIZE          0x80DC
#define GL_COLOR_TABLE_ALPHA_SIZE         0x80DD
#define GL_COLOR_TABLE_LUMINANCE_SIZE     0x80DE
#define GL_COLOR_TABLE_INTENSITY_SIZE     0x80DF
#define GL_CONSTANT_BORDER                0x8151
#define GL_REPLICATE_BORDER               0x8153
#define GL_CONVOLUTION_BORDER_COLOR       0x8154
typedef void (GLAPIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
typedef void (GLAPIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void *table);
typedef void (GLAPIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
typedef void (GLAPIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, void *image);
typedef void (GLAPIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
typedef void (GLAPIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
typedef void (GLAPIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
typedef void (GLAPIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
typedef void (GLAPIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (GLAPIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (GLAPIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glColorTable)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
GLLOADER_API extern void (GLAPIENTRYP glColorTableParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glColorTableParameteriv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glCopyColorTable)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glGetColorTable)(GLenum target, GLenum format, GLenum type, void *table);
GLLOADER_API extern void (GLAPIENTRYP glGetColorTableParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetColorTableParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glColorSubTable)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCopyColorSubTable)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionFilter1D)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionFilter2D)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameterf)(GLenum target, GLenum pname, GLfloat params);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameteri)(GLenum target, GLenum pname, GLint params);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameteriv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glCopyConvolutionFilter1D)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glCopyConvolutionFilter2D)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glGetConvolutionFilter)(GLenum target, GLenum format, GLenum type, void *image);
GLLOADER_API extern void (GLAPIENTRYP glGetConvolutionParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetConvolutionParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetSeparableFilter)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
GLLOADER_API extern void (GLAPIENTRYP glSeparableFilter2D)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
GLLOADER_API extern void (GLAPIENTRYP glGetHistogram)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
GLLOADER_API extern void (GLAPIENTRYP glGetHistogramParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetHistogramParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMinmax)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
GLLOADER_API extern void (GLAPIENTRYP glGetMinmaxParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMinmaxParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glHistogram)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLLOADER_API extern void (GLAPIENTRYP glMinmax)(GLenum target, GLenum internalformat, GLboolean sink);
GLLOADER_API extern void (GLAPIENTRYP glResetHistogram)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glResetMinmax)(GLenum target);
#endif /* GL_ARB_imaging */

#ifndef GL_ARB_indirect_parameters
#define GL_ARB_indirect_parameters 1
#define GL_PARAMETER_BUFFER_ARB           0x80EE
#define GL_PARAMETER_BUFFER_BINDING_ARB   0x80EF
typedef void (GLAPIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawArraysIndirectCountARB)(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawElementsIndirectCountARB)(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
#endif /* GL_ARB_indirect_parameters */

#ifndef GL_ARB_instanced_arrays
#define GL_ARB_instanced_arrays 1
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribDivisorARB)(GLuint index, GLuint divisor);
#endif /* GL_ARB_instanced_arrays */

#ifndef GL_ARB_internalformat_query
#define GL_ARB_internalformat_query 1
#endif /* GL_ARB_internalformat_query */

#ifndef GL_ARB_internalformat_query2
#define GL_ARB_internalformat_query2 1
#define GL_SRGB_DECODE_ARB                0x8299
#endif /* GL_ARB_internalformat_query2 */

#ifndef GL_ARB_invalidate_subdata
#define GL_ARB_invalidate_subdata 1
#endif /* GL_ARB_invalidate_subdata */

#ifndef GL_ARB_map_buffer_alignment
#define GL_ARB_map_buffer_alignment 1
#endif /* GL_ARB_map_buffer_alignment */

#ifndef GL_ARB_map_buffer_range
#define GL_ARB_map_buffer_range 1
#endif /* GL_ARB_map_buffer_range */

#ifndef GL_ARB_matrix_palette
#define GL_ARB_matrix_palette 1
#define GL_MATRIX_PALETTE_ARB             0x8840
#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#define GL_MAX_PALETTE_MATRICES_ARB       0x8842
#define GL_CURRENT_PALETTE_MATRIX_ARB     0x8843
#define GL_MATRIX_INDEX_ARRAY_ARB         0x8844
#define GL_CURRENT_MATRIX_INDEX_ARB       0x8845
#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB    0x8846
#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB    0x8847
#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB  0x8848
#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
typedef void (GLAPIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);
typedef void (GLAPIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
typedef void (GLAPIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
typedef void (GLAPIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
typedef void (GLAPIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glCurrentPaletteMatrixARB)(GLint index);
GLLOADER_API extern void (GLAPIENTRYP glMatrixIndexubvARB)(GLint size, const GLubyte *indices);
GLLOADER_API extern void (GLAPIENTRYP glMatrixIndexusvARB)(GLint size, const GLushort *indices);
GLLOADER_API extern void (GLAPIENTRYP glMatrixIndexuivARB)(GLint size, const GLuint *indices);
GLLOADER_API extern void (GLAPIENTRYP glMatrixIndexPointerARB)(GLint size, GLenum type, GLsizei stride, const void *pointer);
#endif /* GL_ARB_matrix_palette */

#ifndef GL_ARB_multi_bind
#define GL_ARB_multi_bind 1
#endif /* GL_ARB_multi_bind */

#ifndef GL_ARB_multi_draw_indirect
#define GL_ARB_multi_draw_indirect 1
#endif /* GL_ARB_multi_draw_indirect */

#ifndef GL_ARB_multisample
#define GL_ARB_multisample 1
#define GL_MULTISAMPLE_ARB                0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB   0x809E
#define GL_SAMPLE_ALPHA_TO_ONE_ARB        0x809F
#define GL_SAMPLE_COVERAGE_ARB            0x80A0
#define GL_SAMPLE_BUFFERS_ARB             0x80A8
#define GL_SAMPLES_ARB                    0x80A9
#define GL_SAMPLE_COVERAGE_VALUE_ARB      0x80AA
#define GL_SAMPLE_COVERAGE_INVERT_ARB     0x80AB
#define GL_MULTISAMPLE_BIT_ARB            0x20000000
typedef void (GLAPIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);
GLLOADER_API extern void (GLAPIENTRYP glSampleCoverageARB)(GLfloat value, GLboolean invert);
#endif /* GL_ARB_multisample */

#ifndef GL_ARB_multitexture
#define GL_ARB_multitexture 1
#define GL_TEXTURE0_ARB                   0x84C0
#define GL_TEXTURE1_ARB                   0x84C1
#define GL_TEXTURE2_ARB                   0x84C2
#define GL_TEXTURE3_ARB                   0x84C3
#define GL_TEXTURE4_ARB                   0x84C4
#define GL_TEXTURE5_ARB                   0x84C5
#define GL_TEXTURE6_ARB                   0x84C6
#define GL_TEXTURE7_ARB                   0x84C7
#define GL_TEXTURE8_ARB                   0x84C8
#define GL_TEXTURE9_ARB                   0x84C9
#define GL_TEXTURE10_ARB                  0x84CA
#define GL_TEXTURE11_ARB                  0x84CB
#define GL_TEXTURE12_ARB                  0x84CC
#define GL_TEXTURE13_ARB                  0x84CD
#define GL_TEXTURE14_ARB                  0x84CE
#define GL_TEXTURE15_ARB                  0x84CF
#define GL_TEXTURE16_ARB                  0x84D0
#define GL_TEXTURE17_ARB                  0x84D1
#define GL_TEXTURE18_ARB                  0x84D2
#define GL_TEXTURE19_ARB                  0x84D3
#define GL_TEXTURE20_ARB                  0x84D4
#define GL_TEXTURE21_ARB                  0x84D5
#define GL_TEXTURE22_ARB                  0x84D6
#define GL_TEXTURE23_ARB                  0x84D7
#define GL_TEXTURE24_ARB                  0x84D8
#define GL_TEXTURE25_ARB                  0x84D9
#define GL_TEXTURE26_ARB                  0x84DA
#define GL_TEXTURE27_ARB                  0x84DB
#define GL_TEXTURE28_ARB                  0x84DC
#define GL_TEXTURE29_ARB                  0x84DD
#define GL_TEXTURE30_ARB                  0x84DE
#define GL_TEXTURE31_ARB                  0x84DF
#define GL_ACTIVE_TEXTURE_ARB             0x84E0
#define GL_CLIENT_ACTIVE_TEXTURE_ARB      0x84E1
#define GL_MAX_TEXTURE_UNITS_ARB          0x84E2
typedef void (GLAPIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);
typedef void (GLAPIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glActiveTextureARB)(GLenum texture);
GLLOADER_API extern void (GLAPIENTRYP glClientActiveTextureARB)(GLenum texture);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1dARB)(GLenum target, GLdouble s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1dvARB)(GLenum target, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1fARB)(GLenum target, GLfloat s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1fvARB)(GLenum target, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1iARB)(GLenum target, GLint s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1ivARB)(GLenum target, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1sARB)(GLenum target, GLshort s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1svARB)(GLenum target, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2dARB)(GLenum target, GLdouble s, GLdouble t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2dvARB)(GLenum target, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2fARB)(GLenum target, GLfloat s, GLfloat t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2fvARB)(GLenum target, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2iARB)(GLenum target, GLint s, GLint t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2ivARB)(GLenum target, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2sARB)(GLenum target, GLshort s, GLshort t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2svARB)(GLenum target, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3dARB)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3dvARB)(GLenum target, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3fARB)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3fvARB)(GLenum target, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3iARB)(GLenum target, GLint s, GLint t, GLint r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3ivARB)(GLenum target, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3sARB)(GLenum target, GLshort s, GLshort t, GLshort r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3svARB)(GLenum target, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4dARB)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4dvARB)(GLenum target, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4fARB)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4fvARB)(GLenum target, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4iARB)(GLenum target, GLint s, GLint t, GLint r, GLint q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4ivARB)(GLenum target, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4sARB)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4svARB)(GLenum target, const GLshort *v);
#endif /* GL_ARB_multitexture */

#ifndef GL_ARB_occlusion_query
#define GL_ARB_occlusion_query 1
#define GL_QUERY_COUNTER_BITS_ARB         0x8864
#define GL_CURRENT_QUERY_ARB              0x8865
#define GL_QUERY_RESULT_ARB               0x8866
#define GL_QUERY_RESULT_AVAILABLE_ARB     0x8867
#define GL_SAMPLES_PASSED_ARB             0x8914
typedef void (GLAPIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);
typedef void (GLAPIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);
typedef GLboolean(GLAPIENTRYP PFNGLISQUERYARBPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);
typedef void (GLAPIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGenQueriesARB)(GLsizei n, GLuint *ids);
GLLOADER_API extern void (GLAPIENTRYP glDeleteQueriesARB)(GLsizei n, const GLuint *ids);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsQueryARB)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glBeginQueryARB)(GLenum target, GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glEndQueryARB)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryivARB)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryObjectivARB)(GLuint id, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryObjectuivARB)(GLuint id, GLenum pname, GLuint *params);
#endif /* GL_ARB_occlusion_query */

#ifndef GL_ARB_occlusion_query2
#define GL_ARB_occlusion_query2 1
#endif /* GL_ARB_occlusion_query2 */

#ifndef GL_ARB_parallel_shader_compile
#define GL_ARB_parallel_shader_compile 1
#define GL_MAX_SHADER_COMPILER_THREADS_ARB 0x91B0
#define GL_COMPLETION_STATUS_ARB          0x91B1
typedef void (GLAPIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);
GLLOADER_API extern void (GLAPIENTRYP glMaxShaderCompilerThreadsARB)(GLuint count);
#endif /* GL_ARB_parallel_shader_compile */

#ifndef GL_ARB_pipeline_statistics_query
#define GL_ARB_pipeline_statistics_query 1
#define GL_VERTICES_SUBMITTED_ARB         0x82EE
#define GL_PRIMITIVES_SUBMITTED_ARB       0x82EF
#define GL_VERTEX_SHADER_INVOCATIONS_ARB  0x82F0
#define GL_TESS_CONTROL_SHADER_PATCHES_ARB 0x82F1
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB 0x82F2
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB 0x82F3
#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB 0x82F4
#define GL_COMPUTE_SHADER_INVOCATIONS_ARB 0x82F5
#define GL_CLIPPING_INPUT_PRIMITIVES_ARB  0x82F6
#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB 0x82F7
#endif /* GL_ARB_pipeline_statistics_query */

#ifndef GL_ARB_pixel_buffer_object
#define GL_ARB_pixel_buffer_object 1
#define GL_PIXEL_PACK_BUFFER_ARB          0x88EB
#define GL_PIXEL_UNPACK_BUFFER_ARB        0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB  0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
#endif /* GL_ARB_pixel_buffer_object */

#ifndef GL_ARB_point_parameters
#define GL_ARB_point_parameters 1
#define GL_POINT_SIZE_MIN_ARB             0x8126
#define GL_POINT_SIZE_MAX_ARB             0x8127
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB  0x8128
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterfARB)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterfvARB)(GLenum pname, const GLfloat *params);
#endif /* GL_ARB_point_parameters */

#ifndef GL_ARB_point_sprite
#define GL_ARB_point_sprite 1
#define GL_POINT_SPRITE_ARB               0x8861
#define GL_COORD_REPLACE_ARB              0x8862
#endif /* GL_ARB_point_sprite */

#ifndef GL_ARB_post_depth_coverage
#define GL_ARB_post_depth_coverage 1
#endif /* GL_ARB_post_depth_coverage */

#ifndef GL_ARB_program_interface_query
#define GL_ARB_program_interface_query 1
#endif /* GL_ARB_program_interface_query */

#ifndef GL_ARB_provoking_vertex
#define GL_ARB_provoking_vertex 1
#endif /* GL_ARB_provoking_vertex */

#ifndef GL_ARB_query_buffer_object
#define GL_ARB_query_buffer_object 1
#endif /* GL_ARB_query_buffer_object */

#ifndef GL_ARB_robust_buffer_access_behavior
#define GL_ARB_robust_buffer_access_behavior 1
#endif /* GL_ARB_robust_buffer_access_behavior */

#ifndef GL_ARB_robustness
#define GL_ARB_robustness 1
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#define GL_LOSE_CONTEXT_ON_RESET_ARB      0x8252
#define GL_GUILTY_CONTEXT_RESET_ARB       0x8253
#define GL_INNOCENT_CONTEXT_RESET_ARB     0x8254
#define GL_UNKNOWN_CONTEXT_RESET_ARB      0x8255
#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#define GL_NO_RESET_NOTIFICATION_ARB      0x8261
typedef GLenum(GLAPIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);
typedef void (GLAPIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
typedef void (GLAPIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
typedef void (GLAPIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, void *img);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
typedef void (GLAPIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
typedef void (GLAPIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
typedef void (GLAPIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
typedef void (GLAPIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
typedef void (GLAPIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
typedef void (GLAPIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
typedef void (GLAPIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
typedef void (GLAPIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
typedef void (GLAPIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
typedef void (GLAPIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
typedef void (GLAPIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
GLLOADER_API extern GLenum(GLAPIENTRYP glGetGraphicsResetStatusARB)(void);
GLLOADER_API extern void (GLAPIENTRYP glGetnTexImageARB)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
GLLOADER_API extern void (GLAPIENTRYP glReadnPixelsARB)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
GLLOADER_API extern void (GLAPIENTRYP glGetnCompressedTexImageARB)(GLenum target, GLint lod, GLsizei bufSize, void *img);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformfvARB)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformivARB)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformuivARB)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetnUniformdvARB)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetnMapdvARB)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glGetnMapfvARB)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glGetnMapivARB)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glGetnPixelMapfvARB)(GLenum map, GLsizei bufSize, GLfloat *values);
GLLOADER_API extern void (GLAPIENTRYP glGetnPixelMapuivARB)(GLenum map, GLsizei bufSize, GLuint *values);
GLLOADER_API extern void (GLAPIENTRYP glGetnPixelMapusvARB)(GLenum map, GLsizei bufSize, GLushort *values);
GLLOADER_API extern void (GLAPIENTRYP glGetnPolygonStippleARB)(GLsizei bufSize, GLubyte *pattern);
GLLOADER_API extern void (GLAPIENTRYP glGetnColorTableARB)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
GLLOADER_API extern void (GLAPIENTRYP glGetnConvolutionFilterARB)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
GLLOADER_API extern void (GLAPIENTRYP glGetnSeparableFilterARB)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
GLLOADER_API extern void (GLAPIENTRYP glGetnHistogramARB)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
GLLOADER_API extern void (GLAPIENTRYP glGetnMinmaxARB)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
#endif /* GL_ARB_robustness */

#ifndef GL_ARB_robustness_isolation
#define GL_ARB_robustness_isolation 1
#endif /* GL_ARB_robustness_isolation */

#ifndef GL_ARB_sample_locations
#define GL_ARB_sample_locations 1
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB 0x933D
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB 0x933E
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB 0x933F
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB 0x9340
#define GL_SAMPLE_LOCATION_ARB            0x8E50
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB 0x9341
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB 0x9342
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB 0x9343
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferSampleLocationsfvARB)(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferSampleLocationsfvARB)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glEvaluateDepthValuesARB)(void);
#endif /* GL_ARB_sample_locations */

#ifndef GL_ARB_sample_shading
#define GL_ARB_sample_shading 1
#define GL_SAMPLE_SHADING_ARB             0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB   0x8C37
typedef void (GLAPIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);
GLLOADER_API extern void (GLAPIENTRYP glMinSampleShadingARB)(GLfloat value);
#endif /* GL_ARB_sample_shading */

#ifndef GL_ARB_sampler_objects
#define GL_ARB_sampler_objects 1
#endif /* GL_ARB_sampler_objects */

#ifndef GL_ARB_seamless_cube_map
#define GL_ARB_seamless_cube_map 1
#endif /* GL_ARB_seamless_cube_map */

#ifndef GL_ARB_seamless_cubemap_per_texture
#define GL_ARB_seamless_cubemap_per_texture 1
#endif /* GL_ARB_seamless_cubemap_per_texture */

#ifndef GL_ARB_separate_shader_objects
#define GL_ARB_separate_shader_objects 1
#endif /* GL_ARB_separate_shader_objects */

#ifndef GL_ARB_shader_atomic_counter_ops
#define GL_ARB_shader_atomic_counter_ops 1
#endif /* GL_ARB_shader_atomic_counter_ops */

#ifndef GL_ARB_shader_atomic_counters
#define GL_ARB_shader_atomic_counters 1
#endif /* GL_ARB_shader_atomic_counters */

#ifndef GL_ARB_shader_ballot
#define GL_ARB_shader_ballot 1
#endif /* GL_ARB_shader_ballot */

#ifndef GL_ARB_shader_bit_encoding
#define GL_ARB_shader_bit_encoding 1
#endif /* GL_ARB_shader_bit_encoding */

#ifndef GL_ARB_shader_clock
#define GL_ARB_shader_clock 1
#endif /* GL_ARB_shader_clock */

#ifndef GL_ARB_shader_draw_parameters
#define GL_ARB_shader_draw_parameters 1
#endif /* GL_ARB_shader_draw_parameters */

#ifndef GL_ARB_shader_group_vote
#define GL_ARB_shader_group_vote 1
#endif /* GL_ARB_shader_group_vote */

#ifndef GL_ARB_shader_image_load_store
#define GL_ARB_shader_image_load_store 1
#endif /* GL_ARB_shader_image_load_store */

#ifndef GL_ARB_shader_image_size
#define GL_ARB_shader_image_size 1
#endif /* GL_ARB_shader_image_size */

#ifndef GL_ARB_shader_objects
#define GL_ARB_shader_objects 1
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
typedef char GLcharARB;
#define GL_PROGRAM_OBJECT_ARB             0x8B40
#define GL_SHADER_OBJECT_ARB              0x8B48
#define GL_OBJECT_TYPE_ARB                0x8B4E
#define GL_OBJECT_SUBTYPE_ARB             0x8B4F
#define GL_FLOAT_VEC2_ARB                 0x8B50
#define GL_FLOAT_VEC3_ARB                 0x8B51
#define GL_FLOAT_VEC4_ARB                 0x8B52
#define GL_INT_VEC2_ARB                   0x8B53
#define GL_INT_VEC3_ARB                   0x8B54
#define GL_INT_VEC4_ARB                   0x8B55
#define GL_BOOL_ARB                       0x8B56
#define GL_BOOL_VEC2_ARB                  0x8B57
#define GL_BOOL_VEC3_ARB                  0x8B58
#define GL_BOOL_VEC4_ARB                  0x8B59
#define GL_FLOAT_MAT2_ARB                 0x8B5A
#define GL_FLOAT_MAT3_ARB                 0x8B5B
#define GL_FLOAT_MAT4_ARB                 0x8B5C
#define GL_SAMPLER_1D_ARB                 0x8B5D
#define GL_SAMPLER_2D_ARB                 0x8B5E
#define GL_SAMPLER_3D_ARB                 0x8B5F
#define GL_SAMPLER_CUBE_ARB               0x8B60
#define GL_SAMPLER_1D_SHADOW_ARB          0x8B61
#define GL_SAMPLER_2D_SHADOW_ARB          0x8B62
#define GL_SAMPLER_2D_RECT_ARB            0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW_ARB     0x8B64
#define GL_OBJECT_DELETE_STATUS_ARB       0x8B80
#define GL_OBJECT_COMPILE_STATUS_ARB      0x8B81
#define GL_OBJECT_LINK_STATUS_ARB         0x8B82
#define GL_OBJECT_VALIDATE_STATUS_ARB     0x8B83
#define GL_OBJECT_INFO_LOG_LENGTH_ARB     0x8B84
#define GL_OBJECT_ATTACHED_OBJECTS_ARB    0x8B85
#define GL_OBJECT_ACTIVE_UNIFORMS_ARB     0x8B86
#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB 0x8B87
#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB 0x8B88
typedef void (GLAPIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);
typedef GLhandleARB(GLAPIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);
typedef void (GLAPIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);
typedef GLhandleARB(GLAPIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);
typedef void (GLAPIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
typedef void (GLAPIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);
typedef GLhandleARB(GLAPIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);
typedef void (GLAPIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);
typedef void (GLAPIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);
typedef void (GLAPIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);
typedef void (GLAPIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);
typedef void (GLAPIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);
typedef void (GLAPIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAPIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAPIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAPIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);
typedef void (GLAPIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);
typedef void (GLAPIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAPIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAPIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
typedef void (GLAPIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
typedef GLint(GLAPIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);
typedef void (GLAPIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
GLLOADER_API extern void (GLAPIENTRYP glDeleteObjectARB)(GLhandleARB obj);
GLLOADER_API extern GLhandleARB(GLAPIENTRYP glGetHandleARB)(GLenum pname);
GLLOADER_API extern void (GLAPIENTRYP glDetachObjectARB)(GLhandleARB containerObj, GLhandleARB attachedObj);
GLLOADER_API extern GLhandleARB(GLAPIENTRYP glCreateShaderObjectARB)(GLenum shaderType);
GLLOADER_API extern void (GLAPIENTRYP glShaderSourceARB)(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
GLLOADER_API extern void (GLAPIENTRYP glCompileShaderARB)(GLhandleARB shaderObj);
GLLOADER_API extern GLhandleARB(GLAPIENTRYP glCreateProgramObjectARB)(void);
GLLOADER_API extern void (GLAPIENTRYP glAttachObjectARB)(GLhandleARB containerObj, GLhandleARB obj);
GLLOADER_API extern void (GLAPIENTRYP glLinkProgramARB)(GLhandleARB programObj);
GLLOADER_API extern void (GLAPIENTRYP glUseProgramObjectARB)(GLhandleARB programObj);
GLLOADER_API extern void (GLAPIENTRYP glValidateProgramARB)(GLhandleARB programObj);
GLLOADER_API extern void (GLAPIENTRYP glUniform1fARB)(GLint location, GLfloat v0);
GLLOADER_API extern void (GLAPIENTRYP glUniform2fARB)(GLint location, GLfloat v0, GLfloat v1);
GLLOADER_API extern void (GLAPIENTRYP glUniform3fARB)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLLOADER_API extern void (GLAPIENTRYP glUniform4fARB)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLLOADER_API extern void (GLAPIENTRYP glUniform1iARB)(GLint location, GLint v0);
GLLOADER_API extern void (GLAPIENTRYP glUniform2iARB)(GLint location, GLint v0, GLint v1);
GLLOADER_API extern void (GLAPIENTRYP glUniform3iARB)(GLint location, GLint v0, GLint v1, GLint v2);
GLLOADER_API extern void (GLAPIENTRYP glUniform4iARB)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLLOADER_API extern void (GLAPIENTRYP glUniform1fvARB)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2fvARB)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3fvARB)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4fvARB)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform1ivARB)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2ivARB)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3ivARB)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4ivARB)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix2fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix3fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glUniformMatrix4fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glGetObjectParameterfvARB)(GLhandleARB obj, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetObjectParameterivARB)(GLhandleARB obj, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetInfoLogARB)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
GLLOADER_API extern void (GLAPIENTRYP glGetAttachedObjectsARB)(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
GLLOADER_API extern GLint(GLAPIENTRYP glGetUniformLocationARB)(GLhandleARB programObj, const GLcharARB *name);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveUniformARB)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformfvARB)(GLhandleARB programObj, GLint location, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformivARB)(GLhandleARB programObj, GLint location, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetShaderSourceARB)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
#endif /* GL_ARB_shader_objects */

#ifndef GL_ARB_shader_precision
#define GL_ARB_shader_precision 1
#endif /* GL_ARB_shader_precision */

#ifndef GL_ARB_shader_stencil_export
#define GL_ARB_shader_stencil_export 1
#endif /* GL_ARB_shader_stencil_export */

#ifndef GL_ARB_shader_storage_buffer_object
#define GL_ARB_shader_storage_buffer_object 1
#endif /* GL_ARB_shader_storage_buffer_object */

#ifndef GL_ARB_shader_subroutine
#define GL_ARB_shader_subroutine 1
#endif /* GL_ARB_shader_subroutine */

#ifndef GL_ARB_shader_texture_image_samples
#define GL_ARB_shader_texture_image_samples 1
#endif /* GL_ARB_shader_texture_image_samples */

#ifndef GL_ARB_shader_texture_lod
#define GL_ARB_shader_texture_lod 1
#endif /* GL_ARB_shader_texture_lod */

#ifndef GL_ARB_shader_viewport_layer_array
#define GL_ARB_shader_viewport_layer_array 1
#endif /* GL_ARB_shader_viewport_layer_array */

#ifndef GL_ARB_shading_language_100
#define GL_ARB_shading_language_100 1
#define GL_SHADING_LANGUAGE_VERSION_ARB   0x8B8C
#endif /* GL_ARB_shading_language_100 */

#ifndef GL_ARB_shading_language_420pack
#define GL_ARB_shading_language_420pack 1
#endif /* GL_ARB_shading_language_420pack */

#ifndef GL_ARB_shading_language_include
#define GL_ARB_shading_language_include 1
#define GL_SHADER_INCLUDE_ARB             0x8DAE
#define GL_NAMED_STRING_LENGTH_ARB        0x8DE9
#define GL_NAMED_STRING_TYPE_ARB          0x8DEA
typedef void (GLAPIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
typedef void (GLAPIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
typedef GLboolean(GLAPIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
typedef void (GLAPIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glNamedStringARB)(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
GLLOADER_API extern void (GLAPIENTRYP glDeleteNamedStringARB)(GLint namelen, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glCompileShaderIncludeARB)(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsNamedStringARB)(GLint namelen, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedStringARB)(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedStringivARB)(GLint namelen, const GLchar *name, GLenum pname, GLint *params);
#endif /* GL_ARB_shading_language_include */

#ifndef GL_ARB_shading_language_packing
#define GL_ARB_shading_language_packing 1
#endif /* GL_ARB_shading_language_packing */

#ifndef GL_ARB_shadow
#define GL_ARB_shadow 1
#define GL_TEXTURE_COMPARE_MODE_ARB       0x884C
#define GL_TEXTURE_COMPARE_FUNC_ARB       0x884D
#define GL_COMPARE_R_TO_TEXTURE_ARB       0x884E
#endif /* GL_ARB_shadow */

#ifndef GL_ARB_shadow_ambient
#define GL_ARB_shadow_ambient 1
#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
#endif /* GL_ARB_shadow_ambient */

#ifndef GL_ARB_sparse_buffer
#define GL_ARB_sparse_buffer 1
#define GL_SPARSE_STORAGE_BIT_ARB         0x0400
#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB    0x82F8
typedef void (GLAPIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (GLAPIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (GLAPIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLLOADER_API extern void (GLAPIENTRYP glBufferPageCommitmentARB)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLLOADER_API extern void (GLAPIENTRYP glNamedBufferPageCommitmentEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLLOADER_API extern void (GLAPIENTRYP glNamedBufferPageCommitmentARB)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
#endif /* GL_ARB_sparse_buffer */

#ifndef GL_ARB_sparse_texture
#define GL_ARB_sparse_texture 1
#define GL_TEXTURE_SPARSE_ARB             0x91A6
#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB    0x91A7
#define GL_NUM_SPARSE_LEVELS_ARB          0x91AA
#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB     0x91A8
#define GL_VIRTUAL_PAGE_SIZE_X_ARB        0x9195
#define GL_VIRTUAL_PAGE_SIZE_Y_ARB        0x9196
#define GL_VIRTUAL_PAGE_SIZE_Z_ARB        0x9197
#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB    0x9198
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB 0x9199
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB 0x919A
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB 0x91A9
typedef void (GLAPIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLLOADER_API extern void (GLAPIENTRYP glTexPageCommitmentARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
#endif /* GL_ARB_sparse_texture */

#ifndef GL_ARB_sparse_texture2
#define GL_ARB_sparse_texture2 1
#endif /* GL_ARB_sparse_texture2 */

#ifndef GL_ARB_sparse_texture_clamp
#define GL_ARB_sparse_texture_clamp 1
#endif /* GL_ARB_sparse_texture_clamp */

#ifndef GL_ARB_stencil_texturing
#define GL_ARB_stencil_texturing 1
#endif /* GL_ARB_stencil_texturing */

#ifndef GL_ARB_sync
#define GL_ARB_sync 1
#endif /* GL_ARB_sync */

#ifndef GL_ARB_tessellation_shader
#define GL_ARB_tessellation_shader 1
#endif /* GL_ARB_tessellation_shader */

#ifndef GL_ARB_texture_barrier
#define GL_ARB_texture_barrier 1
#endif /* GL_ARB_texture_barrier */

#ifndef GL_ARB_texture_border_clamp
#define GL_ARB_texture_border_clamp 1
#define GL_CLAMP_TO_BORDER_ARB            0x812D
#endif /* GL_ARB_texture_border_clamp */

#ifndef GL_ARB_texture_buffer_object
#define GL_ARB_texture_buffer_object 1
#define GL_TEXTURE_BUFFER_ARB             0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB    0x8C2B
#define GL_TEXTURE_BINDING_BUFFER_ARB     0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
#define GL_TEXTURE_BUFFER_FORMAT_ARB      0x8C2E
typedef void (GLAPIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glTexBufferARB)(GLenum target, GLenum internalformat, GLuint buffer);
#endif /* GL_ARB_texture_buffer_object */

#ifndef GL_ARB_texture_buffer_object_rgb32
#define GL_ARB_texture_buffer_object_rgb32 1
#endif /* GL_ARB_texture_buffer_object_rgb32 */

#ifndef GL_ARB_texture_buffer_range
#define GL_ARB_texture_buffer_range 1
#endif /* GL_ARB_texture_buffer_range */

#ifndef GL_ARB_texture_compression
#define GL_ARB_texture_compression 1
#define GL_COMPRESSED_ALPHA_ARB           0x84E9
#define GL_COMPRESSED_LUMINANCE_ARB       0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#define GL_COMPRESSED_INTENSITY_ARB       0x84EC
#define GL_COMPRESSED_RGB_ARB             0x84ED
#define GL_COMPRESSED_RGBA_ARB            0x84EE
#define GL_TEXTURE_COMPRESSION_HINT_ARB   0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#define GL_TEXTURE_COMPRESSED_ARB         0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
typedef void (GLAPIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *img);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexImage3DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexImage2DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexImage1DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexSubImage3DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexSubImage2DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTexSubImage1DARB)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glGetCompressedTexImageARB)(GLenum target, GLint level, void *img);
#endif /* GL_ARB_texture_compression */

#ifndef GL_ARB_texture_compression_bptc
#define GL_ARB_texture_compression_bptc 1
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
#endif /* GL_ARB_texture_compression_bptc */

#ifndef GL_ARB_texture_compression_rgtc
#define GL_ARB_texture_compression_rgtc 1
#endif /* GL_ARB_texture_compression_rgtc */

#ifndef GL_ARB_texture_cube_map
#define GL_ARB_texture_cube_map 1
#define GL_NORMAL_MAP_ARB                 0x8511
#define GL_REFLECTION_MAP_ARB             0x8512
#define GL_TEXTURE_CUBE_MAP_ARB           0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB   0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB     0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB  0x851C
#endif /* GL_ARB_texture_cube_map */

#ifndef GL_ARB_texture_cube_map_array
#define GL_ARB_texture_cube_map_array 1
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB     0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB     0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F
#endif /* GL_ARB_texture_cube_map_array */

#ifndef GL_ARB_texture_env_add
#define GL_ARB_texture_env_add 1
#endif /* GL_ARB_texture_env_add */

#ifndef GL_ARB_texture_env_combine
#define GL_ARB_texture_env_combine 1
#define GL_COMBINE_ARB                    0x8570
#define GL_COMBINE_RGB_ARB                0x8571
#define GL_COMBINE_ALPHA_ARB              0x8572
#define GL_SOURCE0_RGB_ARB                0x8580
#define GL_SOURCE1_RGB_ARB                0x8581
#define GL_SOURCE2_RGB_ARB                0x8582
#define GL_SOURCE0_ALPHA_ARB              0x8588
#define GL_SOURCE1_ALPHA_ARB              0x8589
#define GL_SOURCE2_ALPHA_ARB              0x858A
#define GL_OPERAND0_RGB_ARB               0x8590
#define GL_OPERAND1_RGB_ARB               0x8591
#define GL_OPERAND2_RGB_ARB               0x8592
#define GL_OPERAND0_ALPHA_ARB             0x8598
#define GL_OPERAND1_ALPHA_ARB             0x8599
#define GL_OPERAND2_ALPHA_ARB             0x859A
#define GL_RGB_SCALE_ARB                  0x8573
#define GL_ADD_SIGNED_ARB                 0x8574
#define GL_INTERPOLATE_ARB                0x8575
#define GL_SUBTRACT_ARB                   0x84E7
#define GL_CONSTANT_ARB                   0x8576
#define GL_PRIMARY_COLOR_ARB              0x8577
#define GL_PREVIOUS_ARB                   0x8578
#endif /* GL_ARB_texture_env_combine */

#ifndef GL_ARB_texture_env_crossbar
#define GL_ARB_texture_env_crossbar 1
#endif /* GL_ARB_texture_env_crossbar */

#ifndef GL_ARB_texture_env_dot3
#define GL_ARB_texture_env_dot3 1
#define GL_DOT3_RGB_ARB                   0x86AE
#define GL_DOT3_RGBA_ARB                  0x86AF
#endif /* GL_ARB_texture_env_dot3 */

#ifndef GL_ARB_texture_filter_minmax
#define GL_ARB_texture_filter_minmax 1
#define GL_TEXTURE_REDUCTION_MODE_ARB     0x9366
#define GL_WEIGHTED_AVERAGE_ARB           0x9367
#endif /* GL_ARB_texture_filter_minmax */

#ifndef GL_ARB_texture_float
#define GL_ARB_texture_float 1
#define GL_TEXTURE_RED_TYPE_ARB           0x8C10
#define GL_TEXTURE_GREEN_TYPE_ARB         0x8C11
#define GL_TEXTURE_BLUE_TYPE_ARB          0x8C12
#define GL_TEXTURE_ALPHA_TYPE_ARB         0x8C13
#define GL_TEXTURE_LUMINANCE_TYPE_ARB     0x8C14
#define GL_TEXTURE_INTENSITY_TYPE_ARB     0x8C15
#define GL_TEXTURE_DEPTH_TYPE_ARB         0x8C16
#define GL_UNSIGNED_NORMALIZED_ARB        0x8C17
#define GL_RGBA32F_ARB                    0x8814
#define GL_RGB32F_ARB                     0x8815
#define GL_ALPHA32F_ARB                   0x8816
#define GL_INTENSITY32F_ARB               0x8817
#define GL_LUMINANCE32F_ARB               0x8818
#define GL_LUMINANCE_ALPHA32F_ARB         0x8819
#define GL_RGBA16F_ARB                    0x881A
#define GL_RGB16F_ARB                     0x881B
#define GL_ALPHA16F_ARB                   0x881C
#define GL_INTENSITY16F_ARB               0x881D
#define GL_LUMINANCE16F_ARB               0x881E
#define GL_LUMINANCE_ALPHA16F_ARB         0x881F
#endif /* GL_ARB_texture_float */

#ifndef GL_ARB_texture_gather
#define GL_ARB_texture_gather 1
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
#endif /* GL_ARB_texture_gather */

#ifndef GL_ARB_texture_mirror_clamp_to_edge
#define GL_ARB_texture_mirror_clamp_to_edge 1
#endif /* GL_ARB_texture_mirror_clamp_to_edge */

#ifndef GL_ARB_texture_mirrored_repeat
#define GL_ARB_texture_mirrored_repeat 1
#define GL_MIRRORED_REPEAT_ARB            0x8370
#endif /* GL_ARB_texture_mirrored_repeat */

#ifndef GL_ARB_texture_multisample
#define GL_ARB_texture_multisample 1
#endif /* GL_ARB_texture_multisample */

#ifndef GL_ARB_texture_non_power_of_two
#define GL_ARB_texture_non_power_of_two 1
#endif /* GL_ARB_texture_non_power_of_two */

#ifndef GL_ARB_texture_query_levels
#define GL_ARB_texture_query_levels 1
#endif /* GL_ARB_texture_query_levels */

#ifndef GL_ARB_texture_query_lod
#define GL_ARB_texture_query_lod 1
#endif /* GL_ARB_texture_query_lod */

#ifndef GL_ARB_texture_rectangle
#define GL_ARB_texture_rectangle 1
#define GL_TEXTURE_RECTANGLE_ARB          0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE_ARB  0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE_ARB    0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
#endif /* GL_ARB_texture_rectangle */

#ifndef GL_ARB_texture_rg
#define GL_ARB_texture_rg 1
#endif /* GL_ARB_texture_rg */

#ifndef GL_ARB_texture_rgb10_a2ui
#define GL_ARB_texture_rgb10_a2ui 1
#endif /* GL_ARB_texture_rgb10_a2ui */

#ifndef GL_ARB_texture_stencil8
#define GL_ARB_texture_stencil8 1
#endif /* GL_ARB_texture_stencil8 */

#ifndef GL_ARB_texture_storage
#define GL_ARB_texture_storage 1
#endif /* GL_ARB_texture_storage */

#ifndef GL_ARB_texture_storage_multisample
#define GL_ARB_texture_storage_multisample 1
#endif /* GL_ARB_texture_storage_multisample */

#ifndef GL_ARB_texture_swizzle
#define GL_ARB_texture_swizzle 1
#endif /* GL_ARB_texture_swizzle */

#ifndef GL_ARB_texture_view
#define GL_ARB_texture_view 1
#endif /* GL_ARB_texture_view */

#ifndef GL_ARB_timer_query
#define GL_ARB_timer_query 1
#endif /* GL_ARB_timer_query */

#ifndef GL_ARB_transform_feedback2
#define GL_ARB_transform_feedback2 1
#endif /* GL_ARB_transform_feedback2 */

#ifndef GL_ARB_transform_feedback3
#define GL_ARB_transform_feedback3 1
#endif /* GL_ARB_transform_feedback3 */

#ifndef GL_ARB_transform_feedback_instanced
#define GL_ARB_transform_feedback_instanced 1
#endif /* GL_ARB_transform_feedback_instanced */

#ifndef GL_ARB_transform_feedback_overflow_query
#define GL_ARB_transform_feedback_overflow_query 1
#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB 0x82EC
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB 0x82ED
#endif /* GL_ARB_transform_feedback_overflow_query */

#ifndef GL_ARB_transpose_matrix
#define GL_ARB_transpose_matrix 1
#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB   0x84E5
#define GL_TRANSPOSE_COLOR_MATRIX_ARB     0x84E6
typedef void (GLAPIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);
typedef void (GLAPIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glLoadTransposeMatrixfARB)(const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glLoadTransposeMatrixdARB)(const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glMultTransposeMatrixfARB)(const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMultTransposeMatrixdARB)(const GLdouble *m);
#endif /* GL_ARB_transpose_matrix */

#ifndef GL_ARB_uniform_buffer_object
#define GL_ARB_uniform_buffer_object 1
#endif /* GL_ARB_uniform_buffer_object */

#ifndef GL_ARB_vertex_array_bgra
#define GL_ARB_vertex_array_bgra 1
#endif /* GL_ARB_vertex_array_bgra */

#ifndef GL_ARB_vertex_array_object
#define GL_ARB_vertex_array_object 1
#endif /* GL_ARB_vertex_array_object */

#ifndef GL_ARB_vertex_attrib_64bit
#define GL_ARB_vertex_attrib_64bit 1
#endif /* GL_ARB_vertex_attrib_64bit */

#ifndef GL_ARB_vertex_attrib_binding
#define GL_ARB_vertex_attrib_binding 1
#endif /* GL_ARB_vertex_attrib_binding */

#ifndef GL_ARB_vertex_blend
#define GL_ARB_vertex_blend 1
#define GL_MAX_VERTEX_UNITS_ARB           0x86A4
#define GL_ACTIVE_VERTEX_UNITS_ARB        0x86A5
#define GL_WEIGHT_SUM_UNITY_ARB           0x86A6
#define GL_VERTEX_BLEND_ARB               0x86A7
#define GL_CURRENT_WEIGHT_ARB             0x86A8
#define GL_WEIGHT_ARRAY_TYPE_ARB          0x86A9
#define GL_WEIGHT_ARRAY_STRIDE_ARB        0x86AA
#define GL_WEIGHT_ARRAY_SIZE_ARB          0x86AB
#define GL_WEIGHT_ARRAY_POINTER_ARB       0x86AC
#define GL_WEIGHT_ARRAY_ARB               0x86AD
#define GL_MODELVIEW0_ARB                 0x1700
#define GL_MODELVIEW1_ARB                 0x850A
#define GL_MODELVIEW2_ARB                 0x8722
#define GL_MODELVIEW3_ARB                 0x8723
#define GL_MODELVIEW4_ARB                 0x8724
#define GL_MODELVIEW5_ARB                 0x8725
#define GL_MODELVIEW6_ARB                 0x8726
#define GL_MODELVIEW7_ARB                 0x8727
#define GL_MODELVIEW8_ARB                 0x8728
#define GL_MODELVIEW9_ARB                 0x8729
#define GL_MODELVIEW10_ARB                0x872A
#define GL_MODELVIEW11_ARB                0x872B
#define GL_MODELVIEW12_ARB                0x872C
#define GL_MODELVIEW13_ARB                0x872D
#define GL_MODELVIEW14_ARB                0x872E
#define GL_MODELVIEW15_ARB                0x872F
#define GL_MODELVIEW16_ARB                0x8730
#define GL_MODELVIEW17_ARB                0x8731
#define GL_MODELVIEW18_ARB                0x8732
#define GL_MODELVIEW19_ARB                0x8733
#define GL_MODELVIEW20_ARB                0x8734
#define GL_MODELVIEW21_ARB                0x8735
#define GL_MODELVIEW22_ARB                0x8736
#define GL_MODELVIEW23_ARB                0x8737
#define GL_MODELVIEW24_ARB                0x8738
#define GL_MODELVIEW25_ARB                0x8739
#define GL_MODELVIEW26_ARB                0x873A
#define GL_MODELVIEW27_ARB                0x873B
#define GL_MODELVIEW28_ARB                0x873C
#define GL_MODELVIEW29_ARB                0x873D
#define GL_MODELVIEW30_ARB                0x873E
#define GL_MODELVIEW31_ARB                0x873F
typedef void (GLAPIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);
typedef void (GLAPIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);
typedef void (GLAPIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);
typedef void (GLAPIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);
typedef void (GLAPIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);
typedef void (GLAPIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);
typedef void (GLAPIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);
typedef void (GLAPIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);
typedef void (GLAPIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);
GLLOADER_API extern void (GLAPIENTRYP glWeightbvARB)(GLint size, const GLbyte *weights);
GLLOADER_API extern void (GLAPIENTRYP glWeightsvARB)(GLint size, const GLshort *weights);
GLLOADER_API extern void (GLAPIENTRYP glWeightivARB)(GLint size, const GLint *weights);
GLLOADER_API extern void (GLAPIENTRYP glWeightfvARB)(GLint size, const GLfloat *weights);
GLLOADER_API extern void (GLAPIENTRYP glWeightdvARB)(GLint size, const GLdouble *weights);
GLLOADER_API extern void (GLAPIENTRYP glWeightubvARB)(GLint size, const GLubyte *weights);
GLLOADER_API extern void (GLAPIENTRYP glWeightusvARB)(GLint size, const GLushort *weights);
GLLOADER_API extern void (GLAPIENTRYP glWeightuivARB)(GLint size, const GLuint *weights);
GLLOADER_API extern void (GLAPIENTRYP glWeightPointerARB)(GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glVertexBlendARB)(GLint count);
#endif /* GL_ARB_vertex_blend */

#ifndef GL_ARB_vertex_buffer_object
#define GL_ARB_vertex_buffer_object 1
typedef ptrdiff_t GLsizeiptrARB;
typedef ptrdiff_t GLintptrARB;
#define GL_BUFFER_SIZE_ARB                0x8764
#define GL_BUFFER_USAGE_ARB               0x8765
#define GL_ARRAY_BUFFER_ARB               0x8892
#define GL_ELEMENT_ARRAY_BUFFER_ARB       0x8893
#define GL_ARRAY_BUFFER_BINDING_ARB       0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
#define GL_READ_ONLY_ARB                  0x88B8
#define GL_WRITE_ONLY_ARB                 0x88B9
#define GL_READ_WRITE_ARB                 0x88BA
#define GL_BUFFER_ACCESS_ARB              0x88BB
#define GL_BUFFER_MAPPED_ARB              0x88BC
#define GL_BUFFER_MAP_POINTER_ARB         0x88BD
#define GL_STREAM_DRAW_ARB                0x88E0
#define GL_STREAM_READ_ARB                0x88E1
#define GL_STREAM_COPY_ARB                0x88E2
#define GL_STATIC_DRAW_ARB                0x88E4
#define GL_STATIC_READ_ARB                0x88E5
#define GL_STATIC_COPY_ARB                0x88E6
#define GL_DYNAMIC_DRAW_ARB               0x88E8
#define GL_DYNAMIC_READ_ARB               0x88E9
#define GL_DYNAMIC_COPY_ARB               0x88EA
typedef void (GLAPIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);
typedef void (GLAPIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);
typedef GLboolean(GLAPIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);
typedef void (GLAPIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);
typedef void (GLAPIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);
typedef void (GLAPIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);
typedef void *(GLAPIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);
typedef GLboolean(GLAPIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void **params);
GLLOADER_API extern void (GLAPIENTRYP glBindBufferARB)(GLenum target, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glDeleteBuffersARB)(GLsizei n, const GLuint *buffers);
GLLOADER_API extern void (GLAPIENTRYP glGenBuffersARB)(GLsizei n, GLuint *buffers);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsBufferARB)(GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glBufferDataARB)(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);
GLLOADER_API extern void (GLAPIENTRYP glBufferSubDataARB)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glGetBufferSubDataARB)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);
GLLOADER_API extern void *(GLAPIENTRYP glMapBufferARB)(GLenum target, GLenum access);
GLLOADER_API extern GLboolean(GLAPIENTRYP glUnmapBufferARB)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glGetBufferParameterivARB)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetBufferPointervARB)(GLenum target, GLenum pname, void **params);
#endif /* GL_ARB_vertex_buffer_object */

#ifndef GL_ARB_vertex_program
#define GL_ARB_vertex_program 1
#define GL_COLOR_SUM_ARB                  0x8458
#define GL_VERTEX_PROGRAM_ARB             0x8620
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB   0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB   0x8625
#define GL_CURRENT_VERTEX_ATTRIB_ARB      0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB  0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB    0x8643
#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
#define GL_MAX_VERTEX_ATTRIBS_ARB         0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
#define GL_PROGRAM_ADDRESS_REGISTERS_ARB  0x88B0
#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
typedef void (GLAPIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, void **pointer);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1dARB)(GLuint index, GLdouble x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1dvARB)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1fARB)(GLuint index, GLfloat x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1fvARB)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1sARB)(GLuint index, GLshort x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1svARB)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2dARB)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2dvARB)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2fARB)(GLuint index, GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2fvARB)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2sARB)(GLuint index, GLshort x, GLshort y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2svARB)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3dARB)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3dvARB)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3fARB)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3fvARB)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3sARB)(GLuint index, GLshort x, GLshort y, GLshort z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3svARB)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4NbvARB)(GLuint index, const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4NivARB)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4NsvARB)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4NubARB)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4NubvARB)(GLuint index, const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4NuivARB)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4NusvARB)(GLuint index, const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4bvARB)(GLuint index, const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4dARB)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4dvARB)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4fARB)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4fvARB)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4ivARB)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4sARB)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4svARB)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4ubvARB)(GLuint index, const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4uivARB)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4usvARB)(GLuint index, const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribPointerARB)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glEnableVertexAttribArrayARB)(GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glDisableVertexAttribArrayARB)(GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribdvARB)(GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribfvARB)(GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribivARB)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribPointervARB)(GLuint index, GLenum pname, void **pointer);
#endif /* GL_ARB_vertex_program */

#ifndef GL_ARB_vertex_shader
#define GL_ARB_vertex_shader 1
#define GL_VERTEX_SHADER_ARB              0x8B31
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 0x8B4A
#define GL_MAX_VARYING_FLOATS_ARB         0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 0x8B4D
#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB   0x8B89
#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 0x8B8A
typedef void (GLAPIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);
typedef void (GLAPIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
typedef GLint(GLAPIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);
GLLOADER_API extern void (GLAPIENTRYP glBindAttribLocationARB)(GLhandleARB programObj, GLuint index, const GLcharARB *name);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveAttribARB)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
GLLOADER_API extern GLint(GLAPIENTRYP glGetAttribLocationARB)(GLhandleARB programObj, const GLcharARB *name);
#endif /* GL_ARB_vertex_shader */

#ifndef GL_ARB_vertex_type_10f_11f_11f_rev
#define GL_ARB_vertex_type_10f_11f_11f_rev 1
#endif /* GL_ARB_vertex_type_10f_11f_11f_rev */

#ifndef GL_ARB_vertex_type_2_10_10_10_rev
#define GL_ARB_vertex_type_2_10_10_10_rev 1
#endif /* GL_ARB_vertex_type_2_10_10_10_rev */

#ifndef GL_ARB_viewport_array
#define GL_ARB_viewport_array 1
#endif /* GL_ARB_viewport_array */

#ifndef GL_ARB_window_pos
#define GL_ARB_window_pos 1
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2dARB)(GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2dvARB)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2fARB)(GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2fvARB)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2iARB)(GLint x, GLint y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2ivARB)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2sARB)(GLshort x, GLshort y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2svARB)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3dARB)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3dvARB)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3fARB)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3fvARB)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3iARB)(GLint x, GLint y, GLint z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3ivARB)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3sARB)(GLshort x, GLshort y, GLshort z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3svARB)(const GLshort *v);
#endif /* GL_ARB_window_pos */

#ifndef GL_KHR_blend_equation_advanced
#define GL_KHR_blend_equation_advanced 1
#define GL_MULTIPLY_KHR                   0x9294
#define GL_SCREEN_KHR                     0x9295
#define GL_OVERLAY_KHR                    0x9296
#define GL_DARKEN_KHR                     0x9297
#define GL_LIGHTEN_KHR                    0x9298
#define GL_COLORDODGE_KHR                 0x9299
#define GL_COLORBURN_KHR                  0x929A
#define GL_HARDLIGHT_KHR                  0x929B
#define GL_SOFTLIGHT_KHR                  0x929C
#define GL_DIFFERENCE_KHR                 0x929E
#define GL_EXCLUSION_KHR                  0x92A0
#define GL_HSL_HUE_KHR                    0x92AD
#define GL_HSL_SATURATION_KHR             0x92AE
#define GL_HSL_COLOR_KHR                  0x92AF
#define GL_HSL_LUMINOSITY_KHR             0x92B0
typedef void (GLAPIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glBlendBarrierKHR)(void);
#endif /* GL_KHR_blend_equation_advanced */

#ifndef GL_KHR_blend_equation_advanced_coherent
#define GL_KHR_blend_equation_advanced_coherent 1
#define GL_BLEND_ADVANCED_COHERENT_KHR    0x9285
#endif /* GL_KHR_blend_equation_advanced_coherent */

#ifndef GL_KHR_context_flush_control
#define GL_KHR_context_flush_control 1
#endif /* GL_KHR_context_flush_control */

#ifndef GL_KHR_debug
#define GL_KHR_debug 1
#endif /* GL_KHR_debug */

#ifndef GL_KHR_no_error
#define GL_KHR_no_error 1
#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR  0x00000008
#endif /* GL_KHR_no_error */

#ifndef GL_KHR_robust_buffer_access_behavior
#define GL_KHR_robust_buffer_access_behavior 1
#endif /* GL_KHR_robust_buffer_access_behavior */

#ifndef GL_KHR_robustness
#define GL_KHR_robustness 1
#define GL_CONTEXT_ROBUST_ACCESS          0x90F3
#endif /* GL_KHR_robustness */

#ifndef GL_KHR_texture_compression_astc_hdr
#define GL_KHR_texture_compression_astc_hdr 1
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR   0x93B0
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR   0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR   0x93B2
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR   0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR   0x93B4
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR   0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR   0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR   0x93B7
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR  0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR  0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR  0x93BA
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
#endif /* GL_KHR_texture_compression_astc_hdr */

#ifndef GL_KHR_texture_compression_astc_ldr
#define GL_KHR_texture_compression_astc_ldr 1
#endif /* GL_KHR_texture_compression_astc_ldr */

#ifndef GL_KHR_texture_compression_astc_sliced_3d
#define GL_KHR_texture_compression_astc_sliced_3d 1
#endif /* GL_KHR_texture_compression_astc_sliced_3d */

#ifndef GL_OES_byte_coordinates
#define GL_OES_byte_coordinates 1
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORD1BOESPROC) (GLbyte s);
typedef void (GLAPIENTRYP PFNGLTEXCOORD1BVOESPROC) (const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2BVOESPROC) (const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);
typedef void (GLAPIENTRYP PFNGLTEXCOORD3BVOESPROC) (const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4BVOESPROC) (const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLVERTEX2BOESPROC) (GLbyte x, GLbyte y);
typedef void (GLAPIENTRYP PFNGLVERTEX2BVOESPROC) (const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLVERTEX3BOESPROC) (GLbyte x, GLbyte y, GLbyte z);
typedef void (GLAPIENTRYP PFNGLVERTEX3BVOESPROC) (const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z, GLbyte w);
typedef void (GLAPIENTRYP PFNGLVERTEX4BVOESPROC) (const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1bOES)(GLenum texture, GLbyte s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1bvOES)(GLenum texture, const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2bOES)(GLenum texture, GLbyte s, GLbyte t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2bvOES)(GLenum texture, const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3bOES)(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3bvOES)(GLenum texture, const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4bOES)(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4bvOES)(GLenum texture, const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1bOES)(GLbyte s);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1bvOES)(const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2bOES)(GLbyte s, GLbyte t);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2bvOES)(const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3bOES)(GLbyte s, GLbyte t, GLbyte r);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3bvOES)(const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4bOES)(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4bvOES)(const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertex2bOES)(GLbyte x, GLbyte y);
GLLOADER_API extern void (GLAPIENTRYP glVertex2bvOES)(const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertex3bOES)(GLbyte x, GLbyte y, GLbyte z);
GLLOADER_API extern void (GLAPIENTRYP glVertex3bvOES)(const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertex4bOES)(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
GLLOADER_API extern void (GLAPIENTRYP glVertex4bvOES)(const GLbyte *coords);
#endif /* GL_OES_byte_coordinates */

#ifndef GL_OES_compressed_paletted_texture
#define GL_OES_compressed_paletted_texture 1
#define GL_PALETTE4_RGB8_OES              0x8B90
#define GL_PALETTE4_RGBA8_OES             0x8B91
#define GL_PALETTE4_R5_G6_B5_OES          0x8B92
#define GL_PALETTE4_RGBA4_OES             0x8B93
#define GL_PALETTE4_RGB5_A1_OES           0x8B94
#define GL_PALETTE8_RGB8_OES              0x8B95
#define GL_PALETTE8_RGBA8_OES             0x8B96
#define GL_PALETTE8_R5_G6_B5_OES          0x8B97
#define GL_PALETTE8_RGBA4_OES             0x8B98
#define GL_PALETTE8_RGB5_A1_OES           0x8B99
#endif /* GL_OES_compressed_paletted_texture */

#ifndef GL_OES_fixed_point
#define GL_OES_fixed_point 1
typedef GLint GLfixed;
#define GL_FIXED_OES                      0x140C
typedef void (GLAPIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);
typedef void (GLAPIENTRYP PFNGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAPIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLfixed depth);
typedef void (GLAPIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);
typedef void (GLAPIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAPIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);
typedef void (GLAPIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);
typedef void (GLAPIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (GLAPIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);
typedef void (GLAPIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);
typedef void (GLAPIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
typedef void (GLAPIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
typedef void (GLAPIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);
typedef void (GLAPIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params);
typedef void (GLAPIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);
typedef void (GLAPIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);
typedef void (GLAPIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param);
typedef void (GLAPIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (GLAPIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);
typedef void (GLAPIENTRYP PFNGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);
typedef void (GLAPIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);
typedef void (GLAPIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);
typedef void (GLAPIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAPIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAPIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);
typedef void (GLAPIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAPIENTRYP PFNGLACCUMXOESPROC) (GLenum op, GLfixed value);
typedef void (GLAPIENTRYP PFNGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
typedef void (GLAPIENTRYP PFNGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAPIENTRYP PFNGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAPIENTRYP PFNGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);
typedef void (GLAPIENTRYP PFNGLCOLOR3XVOESPROC) (const GLfixed *components);
typedef void (GLAPIENTRYP PFNGLCOLOR4XVOESPROC) (const GLfixed *components);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);
typedef void (GLAPIENTRYP PFNGLEVALCOORD1XOESPROC) (GLfixed u);
typedef void (GLAPIENTRYP PFNGLEVALCOORD1XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);
typedef void (GLAPIENTRYP PFNGLEVALCOORD2XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buffer);
typedef void (GLAPIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
typedef void (GLAPIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
typedef void (GLAPIENTRYP PFNGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);
typedef void (GLAPIENTRYP PFNGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);
typedef void (GLAPIENTRYP PFNGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);
typedef void (GLAPIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);
typedef void (GLAPIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum pname, GLfixed *params);
typedef void (GLAPIENTRYP PFNGLINDEXXOESPROC) (GLfixed component);
typedef void (GLAPIENTRYP PFNGLINDEXXVOESPROC) (const GLfixed *component);
typedef void (GLAPIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);
typedef void (GLAPIENTRYP PFNGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
typedef void (GLAPIENTRYP PFNGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
typedef void (GLAPIENTRYP PFNGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);
typedef void (GLAPIENTRYP PFNGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
typedef void (GLAPIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLNORMAL3XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLPASSTHROUGHXOESPROC) (GLfixed token);
typedef void (GLAPIENTRYP PFNGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);
typedef void (GLAPIENTRYP PFNGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);
typedef void (GLAPIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, const GLfixed *priorities);
typedef void (GLAPIENTRYP PFNGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);
typedef void (GLAPIENTRYP PFNGLRASTERPOS2XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAPIENTRYP PFNGLRASTERPOS3XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);
typedef void (GLAPIENTRYP PFNGLRASTERPOS4XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
typedef void (GLAPIENTRYP PFNGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);
typedef void (GLAPIENTRYP PFNGLTEXCOORD1XOESPROC) (GLfixed s);
typedef void (GLAPIENTRYP PFNGLTEXCOORD1XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);
typedef void (GLAPIENTRYP PFNGLTEXCOORD3XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);
typedef void (GLAPIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params);
typedef void (GLAPIENTRYP PFNGLVERTEX2XOESPROC) (GLfixed x);
typedef void (GLAPIENTRYP PFNGLVERTEX2XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);
typedef void (GLAPIENTRYP PFNGLVERTEX3XVOESPROC) (const GLfixed *coords);
typedef void (GLAPIENTRYP PFNGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAPIENTRYP PFNGLVERTEX4XVOESPROC) (const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glAlphaFuncxOES)(GLenum func, GLfixed ref);
GLLOADER_API extern void (GLAPIENTRYP glClearColorxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLLOADER_API extern void (GLAPIENTRYP glClearDepthxOES)(GLfixed depth);
GLLOADER_API extern void (GLAPIENTRYP glClipPlanexOES)(GLenum plane, const GLfixed *equation);
GLLOADER_API extern void (GLAPIENTRYP glColor4xOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLLOADER_API extern void (GLAPIENTRYP glDepthRangexOES)(GLfixed n, GLfixed f);
GLLOADER_API extern void (GLAPIENTRYP glFogxOES)(GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glFogxvOES)(GLenum pname, const GLfixed *param);
GLLOADER_API extern void (GLAPIENTRYP glFrustumxOES)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLLOADER_API extern void (GLAPIENTRYP glGetClipPlanexOES)(GLenum plane, GLfixed *equation);
GLLOADER_API extern void (GLAPIENTRYP glGetFixedvOES)(GLenum pname, GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexEnvxvOES)(GLenum target, GLenum pname, GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glLightModelxOES)(GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glLightModelxvOES)(GLenum pname, const GLfixed *param);
GLLOADER_API extern void (GLAPIENTRYP glLightxOES)(GLenum light, GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glLightxvOES)(GLenum light, GLenum pname, const GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glLineWidthxOES)(GLfixed width);
GLLOADER_API extern void (GLAPIENTRYP glLoadMatrixxOES)(const GLfixed *m);
GLLOADER_API extern void (GLAPIENTRYP glMaterialxOES)(GLenum face, GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glMaterialxvOES)(GLenum face, GLenum pname, const GLfixed *param);
GLLOADER_API extern void (GLAPIENTRYP glMultMatrixxOES)(const GLfixed *m);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4xOES)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLLOADER_API extern void (GLAPIENTRYP glNormal3xOES)(GLfixed nx, GLfixed ny, GLfixed nz);
GLLOADER_API extern void (GLAPIENTRYP glOrthoxOES)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterxvOES)(GLenum pname, const GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glPointSizexOES)(GLfixed size);
GLLOADER_API extern void (GLAPIENTRYP glPolygonOffsetxOES)(GLfixed factor, GLfixed units);
GLLOADER_API extern void (GLAPIENTRYP glRotatexOES)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API extern void (GLAPIENTRYP glScalexOES)(GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API extern void (GLAPIENTRYP glTexEnvxOES)(GLenum target, GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glTexEnvxvOES)(GLenum target, GLenum pname, const GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterxOES)(GLenum target, GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterxvOES)(GLenum target, GLenum pname, const GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glTranslatexOES)(GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API extern void (GLAPIENTRYP glAccumxOES)(GLenum op, GLfixed value);
GLLOADER_API extern void (GLAPIENTRYP glBitmapxOES)(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
GLLOADER_API extern void (GLAPIENTRYP glBlendColorxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLLOADER_API extern void (GLAPIENTRYP glClearAccumxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor3xOES)(GLfixed red, GLfixed green, GLfixed blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3xvOES)(const GLfixed *components);
GLLOADER_API extern void (GLAPIENTRYP glColor4xvOES)(const GLfixed *components);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameterxOES)(GLenum target, GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameterxvOES)(GLenum target, GLenum pname, const GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord1xOES)(GLfixed u);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord1xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord2xOES)(GLfixed u, GLfixed v);
GLLOADER_API extern void (GLAPIENTRYP glEvalCoord2xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glFeedbackBufferxOES)(GLsizei n, GLenum type, const GLfixed *buffer);
GLLOADER_API extern void (GLAPIENTRYP glGetConvolutionParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glGetHistogramParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glGetLightxOES)(GLenum light, GLenum pname, GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMapxvOES)(GLenum target, GLenum query, GLfixed *v);
GLLOADER_API extern void (GLAPIENTRYP glGetMaterialxOES)(GLenum face, GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glGetPixelMapxv)(GLenum map, GLint size, GLfixed *values);
GLLOADER_API extern void (GLAPIENTRYP glGetTexGenxvOES)(GLenum coord, GLenum pname, GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexLevelParameterxvOES)(GLenum target, GLint level, GLenum pname, GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glIndexxOES)(GLfixed component);
GLLOADER_API extern void (GLAPIENTRYP glIndexxvOES)(const GLfixed *component);
GLLOADER_API extern void (GLAPIENTRYP glLoadTransposeMatrixxOES)(const GLfixed *m);
GLLOADER_API extern void (GLAPIENTRYP glMap1xOES)(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
GLLOADER_API extern void (GLAPIENTRYP glMap2xOES)(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
GLLOADER_API extern void (GLAPIENTRYP glMapGrid1xOES)(GLint n, GLfixed u1, GLfixed u2);
GLLOADER_API extern void (GLAPIENTRYP glMapGrid2xOES)(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
GLLOADER_API extern void (GLAPIENTRYP glMultTransposeMatrixxOES)(const GLfixed *m);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1xOES)(GLenum texture, GLfixed s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1xvOES)(GLenum texture, const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2xOES)(GLenum texture, GLfixed s, GLfixed t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2xvOES)(GLenum texture, const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3xOES)(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3xvOES)(GLenum texture, const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4xvOES)(GLenum texture, const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glNormal3xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glPassThroughxOES)(GLfixed token);
GLLOADER_API extern void (GLAPIENTRYP glPixelMapx)(GLenum map, GLint size, const GLfixed *values);
GLLOADER_API extern void (GLAPIENTRYP glPixelStorex)(GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glPixelTransferxOES)(GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glPixelZoomxOES)(GLfixed xfactor, GLfixed yfactor);
GLLOADER_API extern void (GLAPIENTRYP glPrioritizeTexturesxOES)(GLsizei n, const GLuint *textures, const GLfixed *priorities);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2xOES)(GLfixed x, GLfixed y);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos2xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3xOES)(GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos3xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4xOES)(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
GLLOADER_API extern void (GLAPIENTRYP glRasterPos4xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glRectxOES)(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
GLLOADER_API extern void (GLAPIENTRYP glRectxvOES)(const GLfixed *v1, const GLfixed *v2);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1xOES)(GLfixed s);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2xOES)(GLfixed s, GLfixed t);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3xOES)(GLfixed s, GLfixed t, GLfixed r);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4xOES)(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glTexGenxOES)(GLenum coord, GLenum pname, GLfixed param);
GLLOADER_API extern void (GLAPIENTRYP glTexGenxvOES)(GLenum coord, GLenum pname, const GLfixed *params);
GLLOADER_API extern void (GLAPIENTRYP glVertex2xOES)(GLfixed x);
GLLOADER_API extern void (GLAPIENTRYP glVertex2xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertex3xOES)(GLfixed x, GLfixed y);
GLLOADER_API extern void (GLAPIENTRYP glVertex3xvOES)(const GLfixed *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertex4xOES)(GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API extern void (GLAPIENTRYP glVertex4xvOES)(const GLfixed *coords);
#endif /* GL_OES_fixed_point */

#ifndef GL_OES_query_matrix
#define GL_OES_query_matrix 1
typedef GLbitfield(GLAPIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);
GLLOADER_API extern GLbitfield(GLAPIENTRYP glQueryMatrixxOES)(GLfixed *mantissa, GLint *exponent);
#endif /* GL_OES_query_matrix */

#ifndef GL_OES_read_format
#define GL_OES_read_format 1
#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 0x8B9B
#endif /* GL_OES_read_format */

#ifndef GL_OES_single_precision
#define GL_OES_single_precision 1
typedef void (GLAPIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);
typedef void (GLAPIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);
typedef void (GLAPIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);
typedef void (GLAPIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (GLAPIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);
typedef void (GLAPIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLLOADER_API extern void (GLAPIENTRYP glClearDepthfOES)(GLclampf depth);
GLLOADER_API extern void (GLAPIENTRYP glClipPlanefOES)(GLenum plane, const GLfloat *equation);
GLLOADER_API extern void (GLAPIENTRYP glDepthRangefOES)(GLclampf n, GLclampf f);
GLLOADER_API extern void (GLAPIENTRYP glFrustumfOES)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLLOADER_API extern void (GLAPIENTRYP glGetClipPlanefOES)(GLenum plane, GLfloat *equation);
GLLOADER_API extern void (GLAPIENTRYP glOrthofOES)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
#endif /* GL_OES_single_precision */

#ifndef GL_3DFX_multisample
#define GL_3DFX_multisample 1
#define GL_MULTISAMPLE_3DFX               0x86B2
#define GL_SAMPLE_BUFFERS_3DFX            0x86B3
#define GL_SAMPLES_3DFX                   0x86B4
#define GL_MULTISAMPLE_BIT_3DFX           0x20000000
#endif /* GL_3DFX_multisample */

#ifndef GL_3DFX_tbuffer
#define GL_3DFX_tbuffer 1
typedef void (GLAPIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glTbufferMask3DFX)(GLuint mask);
#endif /* GL_3DFX_tbuffer */

#ifndef GL_3DFX_texture_compression_FXT1
#define GL_3DFX_texture_compression_FXT1 1
#define GL_COMPRESSED_RGB_FXT1_3DFX       0x86B0
#define GL_COMPRESSED_RGBA_FXT1_3DFX      0x86B1
#endif /* GL_3DFX_texture_compression_FXT1 */

#ifndef GL_AMD_blend_minmax_factor
#define GL_AMD_blend_minmax_factor 1
#define GL_FACTOR_MIN_AMD                 0x901C
#define GL_FACTOR_MAX_AMD                 0x901D
#endif /* GL_AMD_blend_minmax_factor */

#ifndef GL_AMD_conservative_depth
#define GL_AMD_conservative_depth 1
#endif /* GL_AMD_conservative_depth */

#ifndef GL_AMD_debug_output
#define GL_AMD_debug_output 1
typedef void (GLAPIENTRY  *GLDEBUGPROCAMD)(GLuint id, GLenum category, GLenum severity, GLsizei length, const GLchar *message, void *userParam);
#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD   0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD  0x9144
#define GL_DEBUG_LOGGED_MESSAGES_AMD      0x9145
#define GL_DEBUG_SEVERITY_HIGH_AMD        0x9146
#define GL_DEBUG_SEVERITY_MEDIUM_AMD      0x9147
#define GL_DEBUG_SEVERITY_LOW_AMD         0x9148
#define GL_DEBUG_CATEGORY_API_ERROR_AMD   0x9149
#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#define GL_DEBUG_CATEGORY_OTHER_AMD       0x9150
typedef void (GLAPIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
typedef void (GLAPIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
typedef void (GLAPIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userParam);
typedef GLuint(GLAPIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
GLLOADER_API extern void (GLAPIENTRYP glDebugMessageEnableAMD)(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
GLLOADER_API extern void (GLAPIENTRYP glDebugMessageInsertAMD)(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
GLLOADER_API extern void (GLAPIENTRYP glDebugMessageCallbackAMD)(GLDEBUGPROCAMD callback, void *userParam);
GLLOADER_API extern GLuint(GLAPIENTRYP glGetDebugMessageLogAMD)(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif /* GL_AMD_debug_output */

#ifndef GL_AMD_depth_clamp_separate
#define GL_AMD_depth_clamp_separate 1
#define GL_DEPTH_CLAMP_NEAR_AMD           0x901E
#define GL_DEPTH_CLAMP_FAR_AMD            0x901F
#endif /* GL_AMD_depth_clamp_separate */

#ifndef GL_AMD_draw_buffers_blend
#define GL_AMD_draw_buffers_blend 1
typedef void (GLAPIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (GLAPIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendFuncIndexedAMD)(GLuint buf, GLenum src, GLenum dst);
GLLOADER_API extern void (GLAPIENTRYP glBlendFuncSeparateIndexedAMD)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquationIndexedAMD)(GLuint buf, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquationSeparateIndexedAMD)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
#endif /* GL_AMD_draw_buffers_blend */

#ifndef GL_AMD_gcn_shader
#define GL_AMD_gcn_shader 1
#endif /* GL_AMD_gcn_shader */

#ifndef GL_AMD_gpu_shader_int64
#define GL_AMD_gpu_shader_int64 1
typedef int64_t GLint64EXT;
#define GL_INT64_NV                       0x140E
#define GL_UNSIGNED_INT64_NV              0x140F
#define GL_INT8_NV                        0x8FE0
#define GL_INT8_VEC2_NV                   0x8FE1
#define GL_INT8_VEC3_NV                   0x8FE2
#define GL_INT8_VEC4_NV                   0x8FE3
#define GL_INT16_NV                       0x8FE4
#define GL_INT16_VEC2_NV                  0x8FE5
#define GL_INT16_VEC3_NV                  0x8FE6
#define GL_INT16_VEC4_NV                  0x8FE7
#define GL_INT64_VEC2_NV                  0x8FE9
#define GL_INT64_VEC3_NV                  0x8FEA
#define GL_INT64_VEC4_NV                  0x8FEB
#define GL_UNSIGNED_INT8_NV               0x8FEC
#define GL_UNSIGNED_INT8_VEC2_NV          0x8FED
#define GL_UNSIGNED_INT8_VEC3_NV          0x8FEE
#define GL_UNSIGNED_INT8_VEC4_NV          0x8FEF
#define GL_UNSIGNED_INT16_NV              0x8FF0
#define GL_UNSIGNED_INT16_VEC2_NV         0x8FF1
#define GL_UNSIGNED_INT16_VEC3_NV         0x8FF2
#define GL_UNSIGNED_INT16_VEC4_NV         0x8FF3
#define GL_UNSIGNED_INT64_VEC2_NV         0x8FF5
#define GL_UNSIGNED_INT64_VEC3_NV         0x8FF6
#define GL_UNSIGNED_INT64_VEC4_NV         0x8FF7
#define GL_FLOAT16_NV                     0x8FF8
#define GL_FLOAT16_VEC2_NV                0x8FF9
#define GL_FLOAT16_VEC3_NV                0x8FFA
#define GL_FLOAT16_VEC4_NV                0x8FFB
typedef void (GLAPIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);
typedef void (GLAPIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);
typedef void (GLAPIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (GLAPIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (GLAPIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);
typedef void (GLAPIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (GLAPIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (GLAPIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (GLAPIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);
typedef void (GLAPIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform1i64NV)(GLint location, GLint64EXT x);
GLLOADER_API extern void (GLAPIENTRYP glUniform2i64NV)(GLint location, GLint64EXT x, GLint64EXT y);
GLLOADER_API extern void (GLAPIENTRYP glUniform3i64NV)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLLOADER_API extern void (GLAPIENTRYP glUniform4i64NV)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLLOADER_API extern void (GLAPIENTRYP glUniform1i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform1ui64NV)(GLint location, GLuint64EXT x);
GLLOADER_API extern void (GLAPIENTRYP glUniform2ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y);
GLLOADER_API extern void (GLAPIENTRYP glUniform3ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLLOADER_API extern void (GLAPIENTRYP glUniform4ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLLOADER_API extern void (GLAPIENTRYP glUniform1ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformi64vNV)(GLuint program, GLint location, GLint64EXT *params);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformui64vNV)(GLuint program, GLint location, GLuint64EXT *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1i64NV)(GLuint program, GLint location, GLint64EXT x);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1ui64NV)(GLuint program, GLint location, GLuint64EXT x);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif /* GL_AMD_gpu_shader_int64 */

#ifndef GL_AMD_interleaved_elements
#define GL_AMD_interleaved_elements 1
#define GL_VERTEX_ELEMENT_SWIZZLE_AMD     0x91A4
#define GL_VERTEX_ID_SWIZZLE_AMD          0x91A5
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribParameteriAMD)(GLuint index, GLenum pname, GLint param);
#endif /* GL_AMD_interleaved_elements */

#ifndef GL_AMD_multi_draw_indirect
#define GL_AMD_multi_draw_indirect 1
typedef void (GLAPIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawArraysIndirectAMD)(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawElementsIndirectAMD)(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);
#endif /* GL_AMD_multi_draw_indirect */

#ifndef GL_AMD_name_gen_delete
#define GL_AMD_name_gen_delete 1
#define GL_DATA_BUFFER_AMD                0x9151
#define GL_PERFORMANCE_MONITOR_AMD        0x9152
#define GL_QUERY_OBJECT_AMD               0x9153
#define GL_VERTEX_ARRAY_OBJECT_AMD        0x9154
#define GL_SAMPLER_OBJECT_AMD             0x9155
typedef void (GLAPIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);
typedef void (GLAPIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *names);
typedef GLboolean(GLAPIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);
GLLOADER_API extern void (GLAPIENTRYP glGenNamesAMD)(GLenum identifier, GLuint num, GLuint *names);
GLLOADER_API extern void (GLAPIENTRYP glDeleteNamesAMD)(GLenum identifier, GLuint num, const GLuint *names);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsNameAMD)(GLenum identifier, GLuint name);
#endif /* GL_AMD_name_gen_delete */

#ifndef GL_AMD_occlusion_query_event
#define GL_AMD_occlusion_query_event 1
#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD 0x874F
#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD 0x00000001
#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD 0x00000002
#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD 0x00000004
#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD 0x00000008
#define GL_QUERY_ALL_EVENT_BITS_AMD       0xFFFFFFFF
typedef void (GLAPIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum pname, GLuint param);
GLLOADER_API extern void (GLAPIENTRYP glQueryObjectParameteruiAMD)(GLenum target, GLuint id, GLenum pname, GLuint param);
#endif /* GL_AMD_occlusion_query_event */

#ifndef GL_AMD_performance_monitor
#define GL_AMD_performance_monitor 1
#define GL_COUNTER_TYPE_AMD               0x8BC0
#define GL_COUNTER_RANGE_AMD              0x8BC1
#define GL_UNSIGNED_INT64_AMD             0x8BC2
#define GL_PERCENTAGE_AMD                 0x8BC3
#define GL_PERFMON_RESULT_AVAILABLE_AMD   0x8BC4
#define GL_PERFMON_RESULT_SIZE_AMD        0x8BC5
#define GL_PERFMON_RESULT_AMD             0x8BC6
typedef void (GLAPIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
typedef void (GLAPIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
typedef void (GLAPIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
typedef void (GLAPIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
typedef void (GLAPIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);
typedef void (GLAPIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
typedef void (GLAPIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
typedef void (GLAPIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
typedef void (GLAPIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);
typedef void (GLAPIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);
typedef void (GLAPIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfMonitorGroupsAMD)(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfMonitorCountersAMD)(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfMonitorGroupStringAMD)(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfMonitorCounterStringAMD)(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfMonitorCounterInfoAMD)(GLuint group, GLuint counter, GLenum pname, void *data);
GLLOADER_API extern void (GLAPIENTRYP glGenPerfMonitorsAMD)(GLsizei n, GLuint *monitors);
GLLOADER_API extern void (GLAPIENTRYP glDeletePerfMonitorsAMD)(GLsizei n, GLuint *monitors);
GLLOADER_API extern void (GLAPIENTRYP glSelectPerfMonitorCountersAMD)(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
GLLOADER_API extern void (GLAPIENTRYP glBeginPerfMonitorAMD)(GLuint monitor);
GLLOADER_API extern void (GLAPIENTRYP glEndPerfMonitorAMD)(GLuint monitor);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfMonitorCounterDataAMD)(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif /* GL_AMD_performance_monitor */

#ifndef GL_AMD_pinned_memory
#define GL_AMD_pinned_memory 1
#define GL_GLLOADER_API externAL_VIRTUAL_MEMORY_BUFFER_AMD 0x9160
#endif /* GL_AMD_pinned_memory */

#ifndef GL_AMD_query_buffer_object
#define GL_AMD_query_buffer_object 1
#define GL_QUERY_BUFFER_AMD               0x9192
#define GL_QUERY_BUFFER_BINDING_AMD       0x9193
#define GL_QUERY_RESULT_NO_WAIT_AMD       0x9194
#endif /* GL_AMD_query_buffer_object */

#ifndef GL_AMD_sample_positions
#define GL_AMD_sample_positions 1
#define GL_SUBSAMPLE_DISTANCE_AMD         0x883F
typedef void (GLAPIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat *val);
GLLOADER_API extern void (GLAPIENTRYP glSetMultisamplefvAMD)(GLenum pname, GLuint index, const GLfloat *val);
#endif /* GL_AMD_sample_positions */

#ifndef GL_AMD_seamless_cubemap_per_texture
#define GL_AMD_seamless_cubemap_per_texture 1
#endif /* GL_AMD_seamless_cubemap_per_texture */

#ifndef GL_AMD_shader_atomic_counter_ops
#define GL_AMD_shader_atomic_counter_ops 1
#endif /* GL_AMD_shader_atomic_counter_ops */

#ifndef GL_AMD_shader_stencil_export
#define GL_AMD_shader_stencil_export 1
#endif /* GL_AMD_shader_stencil_export */

#ifndef GL_AMD_shader_trinary_minmax
#define GL_AMD_shader_trinary_minmax 1
#endif /* GL_AMD_shader_trinary_minmax */

#ifndef GL_AMD_sparse_texture
#define GL_AMD_sparse_texture 1
#define GL_VIRTUAL_PAGE_SIZE_X_AMD        0x9195
#define GL_VIRTUAL_PAGE_SIZE_Y_AMD        0x9196
#define GL_VIRTUAL_PAGE_SIZE_Z_AMD        0x9197
#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD    0x9198
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
#define GL_MIN_SPARSE_LEVEL_AMD           0x919B
#define GL_MIN_LOD_WARNING_AMD            0x919C
#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD 0x00000001
typedef void (GLAPIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
GLLOADER_API extern void (GLAPIENTRYP glTexStorageSparseAMD)(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorageSparseAMD)(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
#endif /* GL_AMD_sparse_texture */

#ifndef GL_AMD_stencil_operation_extended
#define GL_AMD_stencil_operation_extended 1
#define GL_SET_AMD                        0x874A
#define GL_REPLACE_VALUE_AMD              0x874B
#define GL_STENCIL_OP_VALUE_AMD           0x874C
#define GL_STENCIL_BACK_OP_VALUE_AMD      0x874D
typedef void (GLAPIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);
GLLOADER_API extern void (GLAPIENTRYP glStencilOpValueAMD)(GLenum face, GLuint value);
#endif /* GL_AMD_stencil_operation_extended */

#ifndef GL_AMD_texture_texture4
#define GL_AMD_texture_texture4 1
#endif /* GL_AMD_texture_texture4 */

#ifndef GL_AMD_transform_feedback3_lines_triangles
#define GL_AMD_transform_feedback3_lines_triangles 1
#endif /* GL_AMD_transform_feedback3_lines_triangles */

#ifndef GL_AMD_transform_feedback4
#define GL_AMD_transform_feedback4 1
#define GL_STREAM_RASTERIZATION_AMD       0x91A0
#endif /* GL_AMD_transform_feedback4 */

#ifndef GL_AMD_vertex_shader_layer
#define GL_AMD_vertex_shader_layer 1
#endif /* GL_AMD_vertex_shader_layer */

#ifndef GL_AMD_vertex_shader_tessellator
#define GL_AMD_vertex_shader_tessellator 1
#define GL_SAMPLER_BUFFER_AMD             0x9001
#define GL_INT_SAMPLER_BUFFER_AMD         0x9002
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD 0x9003
#define GL_TESSELLATION_MODE_AMD          0x9004
#define GL_TESSELLATION_FACTOR_AMD        0x9005
#define GL_DISCRETE_AMD                   0x9006
#define GL_CONTINUOUS_AMD                 0x9007
typedef void (GLAPIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);
typedef void (GLAPIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glTessellationFactorAMD)(GLfloat factor);
GLLOADER_API extern void (GLAPIENTRYP glTessellationModeAMD)(GLenum mode);
#endif /* GL_AMD_vertex_shader_tessellator */

#ifndef GL_AMD_vertex_shader_viewport_index
#define GL_AMD_vertex_shader_viewport_index 1
#endif /* GL_AMD_vertex_shader_viewport_index */

#ifndef GL_APPLE_aux_depth_stencil
#define GL_APPLE_aux_depth_stencil 1
#define GL_AUX_DEPTH_STENCIL_APPLE        0x8A14
#endif /* GL_APPLE_aux_depth_stencil */

#ifndef GL_APPLE_client_storage
#define GL_APPLE_client_storage 1
#define GL_UNPACK_CLIENT_STORAGE_APPLE    0x85B2
#endif /* GL_APPLE_client_storage */

#ifndef GL_APPLE_element_array
#define GL_APPLE_element_array 1
#define GL_ELEMENT_ARRAY_APPLE            0x8A0C
#define GL_ELEMENT_ARRAY_TYPE_APPLE       0x8A0D
#define GL_ELEMENT_ARRAY_POINTER_APPLE    0x8A0E
typedef void (GLAPIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (GLAPIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
GLLOADER_API extern void (GLAPIENTRYP glElementPointerAPPLE)(GLenum type, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementArrayAPPLE)(GLenum mode, GLint first, GLsizei count);
GLLOADER_API extern void (GLAPIENTRYP glDrawRangeElementArrayAPPLE)(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawElementArrayAPPLE)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawRangeElementArrayAPPLE)(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif /* GL_APPLE_element_array */

#ifndef GL_APPLE_fence
#define GL_APPLE_fence 1
#define GL_DRAW_PIXELS_APPLE              0x8A0A
#define GL_FENCE_APPLE                    0x8A0B
typedef void (GLAPIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);
typedef void (GLAPIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);
typedef void (GLAPIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean(GLAPIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean(GLAPIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);
typedef void (GLAPIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean(GLAPIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);
typedef void (GLAPIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);
GLLOADER_API extern void (GLAPIENTRYP glGenFencesAPPLE)(GLsizei n, GLuint *fences);
GLLOADER_API extern void (GLAPIENTRYP glDeleteFencesAPPLE)(GLsizei n, const GLuint *fences);
GLLOADER_API extern void (GLAPIENTRYP glSetFenceAPPLE)(GLuint fence);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsFenceAPPLE)(GLuint fence);
GLLOADER_API extern GLboolean(GLAPIENTRYP glTestFenceAPPLE)(GLuint fence);
GLLOADER_API extern void (GLAPIENTRYP glFinishFenceAPPLE)(GLuint fence);
GLLOADER_API extern GLboolean(GLAPIENTRYP glTestObjectAPPLE)(GLenum object, GLuint name);
GLLOADER_API extern void (GLAPIENTRYP glFinishObjectAPPLE)(GLenum object, GLint name);
#endif /* GL_APPLE_fence */

#ifndef GL_APPLE_float_pixels
#define GL_APPLE_float_pixels 1
#define GL_HALF_APPLE                     0x140B
#define GL_RGBA_FLOAT32_APPLE             0x8814
#define GL_RGB_FLOAT32_APPLE              0x8815
#define GL_ALPHA_FLOAT32_APPLE            0x8816
#define GL_INTENSITY_FLOAT32_APPLE        0x8817
#define GL_LUMINANCE_FLOAT32_APPLE        0x8818
#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE  0x8819
#define GL_RGBA_FLOAT16_APPLE             0x881A
#define GL_RGB_FLOAT16_APPLE              0x881B
#define GL_ALPHA_FLOAT16_APPLE            0x881C
#define GL_INTENSITY_FLOAT16_APPLE        0x881D
#define GL_LUMINANCE_FLOAT16_APPLE        0x881E
#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE  0x881F
#define GL_COLOR_FLOAT_APPLE              0x8A0F
#endif /* GL_APPLE_float_pixels */

#ifndef GL_APPLE_flush_buffer_range
#define GL_APPLE_flush_buffer_range 1
#define GL_BUFFER_SERIALIZED_MODIFY_APPLE 0x8A12
#define GL_BUFFER_FLUSHING_UNMAP_APPLE    0x8A13
typedef void (GLAPIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glBufferParameteriAPPLE)(GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glFlushMappedBufferRangeAPPLE)(GLenum target, GLintptr offset, GLsizeiptr size);
#endif /* GL_APPLE_flush_buffer_range */

#ifndef GL_APPLE_object_purgeable
#define GL_APPLE_object_purgeable 1
#define GL_BUFFER_OBJECT_APPLE            0x85B3
#define GL_RELEASED_APPLE                 0x8A19
#define GL_VOLATILE_APPLE                 0x8A1A
#define GL_RETAINED_APPLE                 0x8A1B
#define GL_UNDEFINED_APPLE                0x8A1C
#define GL_PURGEABLE_APPLE                0x8A1D
typedef GLenum(GLAPIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);
typedef GLenum(GLAPIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);
typedef void (GLAPIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLenum pname, GLint *params);
GLLOADER_API extern GLenum(GLAPIENTRYP glObjectPurgeableAPPLE)(GLenum objectType, GLuint name, GLenum option);
GLLOADER_API extern GLenum(GLAPIENTRYP glObjectUnpurgeableAPPLE)(GLenum objectType, GLuint name, GLenum option);
GLLOADER_API extern void (GLAPIENTRYP glGetObjectParameterivAPPLE)(GLenum objectType, GLuint name, GLenum pname, GLint *params);
#endif /* GL_APPLE_object_purgeable */

#ifndef GL_APPLE_rgb_422
#define GL_APPLE_rgb_422 1
#define GL_RGB_422_APPLE                  0x8A1F
#define GL_UNSIGNED_SHORT_8_8_APPLE       0x85BA
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE   0x85BB
#define GL_RGB_RAW_422_APPLE              0x8A51
#endif /* GL_APPLE_rgb_422 */

#ifndef GL_APPLE_row_bytes
#define GL_APPLE_row_bytes 1
#define GL_PACK_ROW_BYTES_APPLE           0x8A15
#define GL_UNPACK_ROW_BYTES_APPLE         0x8A16
#endif /* GL_APPLE_row_bytes */

#ifndef GL_APPLE_specular_vector
#define GL_APPLE_specular_vector 1
#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
#endif /* GL_APPLE_specular_vector */

#ifndef GL_APPLE_texture_range
#define GL_APPLE_texture_range 1
#define GL_TEXTURE_RANGE_LENGTH_APPLE     0x85B7
#define GL_TEXTURE_RANGE_POINTER_APPLE    0x85B8
#define GL_TEXTURE_STORAGE_HINT_APPLE     0x85BC
#define GL_STORAGE_PRIVATE_APPLE          0x85BD
#define GL_STORAGE_CACHED_APPLE           0x85BE
#define GL_STORAGE_SHARED_APPLE           0x85BF
typedef void (GLAPIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const void *pointer);
typedef void (GLAPIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, void **params);
GLLOADER_API extern void (GLAPIENTRYP glTextureRangeAPPLE)(GLenum target, GLsizei length, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameterPointervAPPLE)(GLenum target, GLenum pname, void **params);
#endif /* GL_APPLE_texture_range */

#ifndef GL_APPLE_transform_hint
#define GL_APPLE_transform_hint 1
#define GL_TRANSFORM_HINT_APPLE           0x85B1
#endif /* GL_APPLE_transform_hint */

#ifndef GL_APPLE_vertex_array_object
#define GL_APPLE_vertex_array_object 1
#define GL_VERTEX_ARRAY_BINDING_APPLE     0x85B5
typedef void (GLAPIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);
typedef void (GLAPIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);
typedef void (GLAPIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);
typedef GLboolean(GLAPIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);
GLLOADER_API extern void (GLAPIENTRYP glBindVertexArrayAPPLE)(GLuint array);
GLLOADER_API extern void (GLAPIENTRYP glDeleteVertexArraysAPPLE)(GLsizei n, const GLuint *arrays);
GLLOADER_API extern void (GLAPIENTRYP glGenVertexArraysAPPLE)(GLsizei n, GLuint *arrays);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsVertexArrayAPPLE)(GLuint array);
#endif /* GL_APPLE_vertex_array_object */

#ifndef GL_APPLE_vertex_array_range
#define GL_APPLE_vertex_array_range 1
#define GL_VERTEX_ARRAY_RANGE_APPLE       0x851D
#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 0x851E
#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 0x851F
#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 0x8521
#define GL_STORAGE_CLIENT_APPLE           0x85B4
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);
typedef void (GLAPIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayRangeAPPLE)(GLsizei length, void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glFlushVertexArrayRangeAPPLE)(GLsizei length, void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayParameteriAPPLE)(GLenum pname, GLint param);
#endif /* GL_APPLE_vertex_array_range */

#ifndef GL_APPLE_vertex_program_evaluators
#define GL_APPLE_vertex_program_evaluators 1
#define GL_VERTEX_ATTRIB_MAP1_APPLE       0x8A00
#define GL_VERTEX_ATTRIB_MAP2_APPLE       0x8A01
#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE  0x8A02
#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 0x8A03
#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 0x8A04
#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 0x8A05
#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE  0x8A06
#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 0x8A07
#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 0x8A08
#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 0x8A09
typedef void (GLAPIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);
typedef void (GLAPIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);
typedef GLboolean(GLAPIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);
typedef void (GLAPIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
typedef void (GLAPIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
typedef void (GLAPIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
typedef void (GLAPIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glEnableVertexAttribAPPLE)(GLuint index, GLenum pname);
GLLOADER_API extern void (GLAPIENTRYP glDisableVertexAttribAPPLE)(GLuint index, GLenum pname);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsVertexAttribEnabledAPPLE)(GLuint index, GLenum pname);
GLLOADER_API extern void (GLAPIENTRYP glMapVertexAttrib1dAPPLE)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
GLLOADER_API extern void (GLAPIENTRYP glMapVertexAttrib1fAPPLE)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glMapVertexAttrib2dAPPLE)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
GLLOADER_API extern void (GLAPIENTRYP glMapVertexAttrib2fAPPLE)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
#endif /* GL_APPLE_vertex_program_evaluators */

#ifndef GL_APPLE_ycbcr_422
#define GL_APPLE_ycbcr_422 1
#define GL_YCBCR_422_APPLE                0x85B9
#endif /* GL_APPLE_ycbcr_422 */

#ifndef GL_ATI_draw_buffers
#define GL_ATI_draw_buffers 1
#define GL_MAX_DRAW_BUFFERS_ATI           0x8824
#define GL_DRAW_BUFFER0_ATI               0x8825
#define GL_DRAW_BUFFER1_ATI               0x8826
#define GL_DRAW_BUFFER2_ATI               0x8827
#define GL_DRAW_BUFFER3_ATI               0x8828
#define GL_DRAW_BUFFER4_ATI               0x8829
#define GL_DRAW_BUFFER5_ATI               0x882A
#define GL_DRAW_BUFFER6_ATI               0x882B
#define GL_DRAW_BUFFER7_ATI               0x882C
#define GL_DRAW_BUFFER8_ATI               0x882D
#define GL_DRAW_BUFFER9_ATI               0x882E
#define GL_DRAW_BUFFER10_ATI              0x882F
#define GL_DRAW_BUFFER11_ATI              0x8830
#define GL_DRAW_BUFFER12_ATI              0x8831
#define GL_DRAW_BUFFER13_ATI              0x8832
#define GL_DRAW_BUFFER14_ATI              0x8833
#define GL_DRAW_BUFFER15_ATI              0x8834
typedef void (GLAPIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);
GLLOADER_API extern void (GLAPIENTRYP glDrawBuffersATI)(GLsizei n, const GLenum *bufs);
#endif /* GL_ATI_draw_buffers */

#ifndef GL_ATI_element_array
#define GL_ATI_element_array 1
#define GL_ELEMENT_ARRAY_ATI              0x8768
#define GL_ELEMENT_ARRAY_TYPE_ATI         0x8769
#define GL_ELEMENT_ARRAY_POINTER_ATI      0x876A
typedef void (GLAPIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);
typedef void (GLAPIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);
GLLOADER_API extern void (GLAPIENTRYP glElementPointerATI)(GLenum type, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementArrayATI)(GLenum mode, GLsizei count);
GLLOADER_API extern void (GLAPIENTRYP glDrawRangeElementArrayATI)(GLenum mode, GLuint start, GLuint end, GLsizei count);
#endif /* GL_ATI_element_array */

#ifndef GL_ATI_envmap_bumpmap
#define GL_ATI_envmap_bumpmap 1
#define GL_BUMP_ROT_MATRIX_ATI            0x8775
#define GL_BUMP_ROT_MATRIX_SIZE_ATI       0x8776
#define GL_BUMP_NUM_TEX_UNITS_ATI         0x8777
#define GL_BUMP_TEX_UNITS_ATI             0x8778
#define GL_DUDV_ATI                       0x8779
#define GL_DU8DV8_ATI                     0x877A
#define GL_BUMP_ENVMAP_ATI                0x877B
#define GL_BUMP_TARGET_ATI                0x877C
typedef void (GLAPIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);
typedef void (GLAPIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);
typedef void (GLAPIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);
typedef void (GLAPIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);
GLLOADER_API extern void (GLAPIENTRYP glTexBumpParameterivATI)(GLenum pname, const GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glTexBumpParameterfvATI)(GLenum pname, const GLfloat *param);
GLLOADER_API extern void (GLAPIENTRYP glGetTexBumpParameterivATI)(GLenum pname, GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glGetTexBumpParameterfvATI)(GLenum pname, GLfloat *param);
#endif /* GL_ATI_envmap_bumpmap */

#ifndef GL_ATI_fragment_shader
#define GL_ATI_fragment_shader 1
#define GL_FRAGMENT_SHADER_ATI            0x8920
#define GL_REG_0_ATI                      0x8921
#define GL_REG_1_ATI                      0x8922
#define GL_REG_2_ATI                      0x8923
#define GL_REG_3_ATI                      0x8924
#define GL_REG_4_ATI                      0x8925
#define GL_REG_5_ATI                      0x8926
#define GL_REG_6_ATI                      0x8927
#define GL_REG_7_ATI                      0x8928
#define GL_REG_8_ATI                      0x8929
#define GL_REG_9_ATI                      0x892A
#define GL_REG_10_ATI                     0x892B
#define GL_REG_11_ATI                     0x892C
#define GL_REG_12_ATI                     0x892D
#define GL_REG_13_ATI                     0x892E
#define GL_REG_14_ATI                     0x892F
#define GL_REG_15_ATI                     0x8930
#define GL_REG_16_ATI                     0x8931
#define GL_REG_17_ATI                     0x8932
#define GL_REG_18_ATI                     0x8933
#define GL_REG_19_ATI                     0x8934
#define GL_REG_20_ATI                     0x8935
#define GL_REG_21_ATI                     0x8936
#define GL_REG_22_ATI                     0x8937
#define GL_REG_23_ATI                     0x8938
#define GL_REG_24_ATI                     0x8939
#define GL_REG_25_ATI                     0x893A
#define GL_REG_26_ATI                     0x893B
#define GL_REG_27_ATI                     0x893C
#define GL_REG_28_ATI                     0x893D
#define GL_REG_29_ATI                     0x893E
#define GL_REG_30_ATI                     0x893F
#define GL_REG_31_ATI                     0x8940
#define GL_CON_0_ATI                      0x8941
#define GL_CON_1_ATI                      0x8942
#define GL_CON_2_ATI                      0x8943
#define GL_CON_3_ATI                      0x8944
#define GL_CON_4_ATI                      0x8945
#define GL_CON_5_ATI                      0x8946
#define GL_CON_6_ATI                      0x8947
#define GL_CON_7_ATI                      0x8948
#define GL_CON_8_ATI                      0x8949
#define GL_CON_9_ATI                      0x894A
#define GL_CON_10_ATI                     0x894B
#define GL_CON_11_ATI                     0x894C
#define GL_CON_12_ATI                     0x894D
#define GL_CON_13_ATI                     0x894E
#define GL_CON_14_ATI                     0x894F
#define GL_CON_15_ATI                     0x8950
#define GL_CON_16_ATI                     0x8951
#define GL_CON_17_ATI                     0x8952
#define GL_CON_18_ATI                     0x8953
#define GL_CON_19_ATI                     0x8954
#define GL_CON_20_ATI                     0x8955
#define GL_CON_21_ATI                     0x8956
#define GL_CON_22_ATI                     0x8957
#define GL_CON_23_ATI                     0x8958
#define GL_CON_24_ATI                     0x8959
#define GL_CON_25_ATI                     0x895A
#define GL_CON_26_ATI                     0x895B
#define GL_CON_27_ATI                     0x895C
#define GL_CON_28_ATI                     0x895D
#define GL_CON_29_ATI                     0x895E
#define GL_CON_30_ATI                     0x895F
#define GL_CON_31_ATI                     0x8960
#define GL_MOV_ATI                        0x8961
#define GL_ADD_ATI                        0x8963
#define GL_MUL_ATI                        0x8964
#define GL_SUB_ATI                        0x8965
#define GL_DOT3_ATI                       0x8966
#define GL_DOT4_ATI                       0x8967
#define GL_MAD_ATI                        0x8968
#define GL_LERP_ATI                       0x8969
#define GL_CND_ATI                        0x896A
#define GL_CND0_ATI                       0x896B
#define GL_DOT2_ADD_ATI                   0x896C
#define GL_SECONDARY_INTERPOLATOR_ATI     0x896D
#define GL_NUM_FRAGMENT_REGISTERS_ATI     0x896E
#define GL_NUM_FRAGMENT_CONSTANTS_ATI     0x896F
#define GL_NUM_PASSES_ATI                 0x8970
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI  0x8971
#define GL_NUM_INSTRUCTIONS_TOTAL_ATI     0x8972
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
#define GL_NUM_LOOPBACK_COMPONENTS_ATI    0x8974
#define GL_COLOR_ALPHA_PAIRING_ATI        0x8975
#define GL_SWIZZLE_STR_ATI                0x8976
#define GL_SWIZZLE_STQ_ATI                0x8977
#define GL_SWIZZLE_STR_DR_ATI             0x8978
#define GL_SWIZZLE_STQ_DQ_ATI             0x8979
#define GL_SWIZZLE_STRQ_ATI               0x897A
#define GL_SWIZZLE_STRQ_DQ_ATI            0x897B
#define GL_RED_BIT_ATI                    0x00000001
#define GL_GREEN_BIT_ATI                  0x00000002
#define GL_BLUE_BIT_ATI                   0x00000004
#define GL_2X_BIT_ATI                     0x00000001
#define GL_4X_BIT_ATI                     0x00000002
#define GL_8X_BIT_ATI                     0x00000004
#define GL_HALF_BIT_ATI                   0x00000008
#define GL_QUARTER_BIT_ATI                0x00000010
#define GL_EIGHTH_BIT_ATI                 0x00000020
#define GL_SATURATE_BIT_ATI               0x00000040
#define GL_COMP_BIT_ATI                   0x00000002
#define GL_NEGATE_BIT_ATI                 0x00000004
#define GL_BIAS_BIT_ATI                   0x00000008
typedef GLuint(GLAPIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);
typedef void (GLAPIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);
typedef void (GLAPIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);
typedef void (GLAPIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);
typedef void (GLAPIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);
typedef void (GLAPIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (GLAPIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (GLAPIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (GLAPIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (GLAPIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (GLAPIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (GLAPIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);
GLLOADER_API extern GLuint(GLAPIENTRYP glGenFragmentShadersATI)(GLuint range);
GLLOADER_API extern void (GLAPIENTRYP glBindFragmentShaderATI)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glDeleteFragmentShaderATI)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glBeginFragmentShaderATI)(void);
GLLOADER_API extern void (GLAPIENTRYP glEndFragmentShaderATI)(void);
GLLOADER_API extern void (GLAPIENTRYP glPassTexCoordATI)(GLuint dst, GLuint coord, GLenum swizzle);
GLLOADER_API extern void (GLAPIENTRYP glSampleMapATI)(GLuint dst, GLuint interp, GLenum swizzle);
GLLOADER_API extern void (GLAPIENTRYP glColorFragmentOp1ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
GLLOADER_API extern void (GLAPIENTRYP glColorFragmentOp2ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
GLLOADER_API extern void (GLAPIENTRYP glColorFragmentOp3ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
GLLOADER_API extern void (GLAPIENTRYP glAlphaFragmentOp1ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
GLLOADER_API extern void (GLAPIENTRYP glAlphaFragmentOp2ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
GLLOADER_API extern void (GLAPIENTRYP glAlphaFragmentOp3ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
GLLOADER_API extern void (GLAPIENTRYP glSetFragmentShaderConstantATI)(GLuint dst, const GLfloat *value);
#endif /* GL_ATI_fragment_shader */

#ifndef GL_ATI_map_object_buffer
#define GL_ATI_map_object_buffer 1
typedef void *(GLAPIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (GLAPIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);
GLLOADER_API extern void *(GLAPIENTRYP glMapObjectBufferATI)(GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glUnmapObjectBufferATI)(GLuint buffer);
#endif /* GL_ATI_map_object_buffer */

#ifndef GL_ATI_meminfo
#define GL_ATI_meminfo 1
#define GL_VBO_FREE_MEMORY_ATI            0x87FB
#define GL_TEXTURE_FREE_MEMORY_ATI        0x87FC
#define GL_RENDERBUFFER_FREE_MEMORY_ATI   0x87FD
#endif /* GL_ATI_meminfo */

#ifndef GL_ATI_pixel_format_float
#define GL_ATI_pixel_format_float 1
#define GL_RGBA_FLOAT_MODE_ATI            0x8820
#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835
#endif /* GL_ATI_pixel_format_float */

#ifndef GL_ATI_pn_triangles
#define GL_ATI_pn_triangles 1
#define GL_PN_TRIANGLES_ATI               0x87F0
#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
#define GL_PN_TRIANGLES_POINT_MODE_ATI    0x87F2
#define GL_PN_TRIANGLES_NORMAL_MODE_ATI   0x87F3
#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
typedef void (GLAPIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPNTrianglesiATI)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glPNTrianglesfATI)(GLenum pname, GLfloat param);
#endif /* GL_ATI_pn_triangles */

#ifndef GL_ATI_separate_stencil
#define GL_ATI_separate_stencil 1
#define GL_STENCIL_BACK_FUNC_ATI          0x8800
#define GL_STENCIL_BACK_FAIL_ATI          0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803
typedef void (GLAPIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (GLAPIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glStencilOpSeparateATI)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLLOADER_API extern void (GLAPIENTRYP glStencilFuncSeparateATI)(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
#endif /* GL_ATI_separate_stencil */

#ifndef GL_ATI_text_fragment_shader
#define GL_ATI_text_fragment_shader 1
#define GL_TEXT_FRAGMENT_SHADER_ATI       0x8200
#endif /* GL_ATI_text_fragment_shader */

#ifndef GL_ATI_texture_env_combine3
#define GL_ATI_texture_env_combine3 1
#define GL_MODULATE_ADD_ATI               0x8744
#define GL_MODULATE_SIGNED_ADD_ATI        0x8745
#define GL_MODULATE_SUBTRACT_ATI          0x8746
#endif /* GL_ATI_texture_env_combine3 */

#ifndef GL_ATI_texture_float
#define GL_ATI_texture_float 1
#define GL_RGBA_FLOAT32_ATI               0x8814
#define GL_RGB_FLOAT32_ATI                0x8815
#define GL_ALPHA_FLOAT32_ATI              0x8816
#define GL_INTENSITY_FLOAT32_ATI          0x8817
#define GL_LUMINANCE_FLOAT32_ATI          0x8818
#define GL_LUMINANCE_ALPHA_FLOAT32_ATI    0x8819
#define GL_RGBA_FLOAT16_ATI               0x881A
#define GL_RGB_FLOAT16_ATI                0x881B
#define GL_ALPHA_FLOAT16_ATI              0x881C
#define GL_INTENSITY_FLOAT16_ATI          0x881D
#define GL_LUMINANCE_FLOAT16_ATI          0x881E
#define GL_LUMINANCE_ALPHA_FLOAT16_ATI    0x881F
#endif /* GL_ATI_texture_float */

#ifndef GL_ATI_texture_mirror_once
#define GL_ATI_texture_mirror_once 1
#define GL_MIRROR_CLAMP_ATI               0x8742
#define GL_MIRROR_CLAMP_TO_EDGE_ATI       0x8743
#endif /* GL_ATI_texture_mirror_once */

#ifndef GL_ATI_vertex_array_object
#define GL_ATI_vertex_array_object 1
#define GL_STATIC_ATI                     0x8760
#define GL_DYNAMIC_ATI                    0x8761
#define GL_PRESERVE_ATI                   0x8762
#define GL_DISCARD_ATI                    0x8763
#define GL_OBJECT_BUFFER_SIZE_ATI         0x8764
#define GL_OBJECT_BUFFER_USAGE_ATI        0x8765
#define GL_ARRAY_OBJECT_BUFFER_ATI        0x8766
#define GL_ARRAY_OBJECT_OFFSET_ATI        0x8767
typedef GLuint(GLAPIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GLenum usage);
typedef GLboolean(GLAPIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (GLAPIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);
typedef void (GLAPIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (GLAPIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (GLAPIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (GLAPIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
GLLOADER_API extern GLuint(GLAPIENTRYP glNewObjectBufferATI)(GLsizei size, const void *pointer, GLenum usage);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsObjectBufferATI)(GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glUpdateObjectBufferATI)(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);
GLLOADER_API extern void (GLAPIENTRYP glGetObjectBufferfvATI)(GLuint buffer, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetObjectBufferivATI)(GLuint buffer, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glFreeObjectBufferATI)(GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glArrayObjectATI)(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLLOADER_API extern void (GLAPIENTRYP glGetArrayObjectfvATI)(GLenum array, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetArrayObjectivATI)(GLenum array, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glVariantArrayObjectATI)(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLLOADER_API extern void (GLAPIENTRYP glGetVariantArrayObjectfvATI)(GLuint id, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVariantArrayObjectivATI)(GLuint id, GLenum pname, GLint *params);
#endif /* GL_ATI_vertex_array_object */

#ifndef GL_ATI_vertex_attrib_array_object
#define GL_ATI_vertex_attrib_array_object 1
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribArrayObjectATI)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribArrayObjectfvATI)(GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribArrayObjectivATI)(GLuint index, GLenum pname, GLint *params);
#endif /* GL_ATI_vertex_attrib_array_object */

#ifndef GL_ATI_vertex_streams
#define GL_ATI_vertex_streams 1
#define GL_MAX_VERTEX_STREAMS_ATI         0x876B
#define GL_VERTEX_STREAM0_ATI             0x876C
#define GL_VERTEX_STREAM1_ATI             0x876D
#define GL_VERTEX_STREAM2_ATI             0x876E
#define GL_VERTEX_STREAM3_ATI             0x876F
#define GL_VERTEX_STREAM4_ATI             0x8770
#define GL_VERTEX_STREAM5_ATI             0x8771
#define GL_VERTEX_STREAM6_ATI             0x8772
#define GL_VERTEX_STREAM7_ATI             0x8773
#define GL_VERTEX_SOURCE_ATI              0x8774
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (GLAPIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (GLAPIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);
typedef void (GLAPIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream1sATI)(GLenum stream, GLshort x);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream1svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream1iATI)(GLenum stream, GLint x);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream1ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream1fATI)(GLenum stream, GLfloat x);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream1fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream1dATI)(GLenum stream, GLdouble x);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream1dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream2sATI)(GLenum stream, GLshort x, GLshort y);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream2svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream2iATI)(GLenum stream, GLint x, GLint y);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream2ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream2fATI)(GLenum stream, GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream2fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream2dATI)(GLenum stream, GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream2dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream3sATI)(GLenum stream, GLshort x, GLshort y, GLshort z);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream3svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream3iATI)(GLenum stream, GLint x, GLint y, GLint z);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream3ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream3fATI)(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream3fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream3dATI)(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream3dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream4sATI)(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream4svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream4iATI)(GLenum stream, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream4ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream4fATI)(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream4fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream4dATI)(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glVertexStream4dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3bATI)(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3bvATI)(GLenum stream, const GLbyte *coords);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3sATI)(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3iATI)(GLenum stream, GLint nx, GLint ny, GLint nz);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3fATI)(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3dATI)(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
GLLOADER_API extern void (GLAPIENTRYP glNormalStream3dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API extern void (GLAPIENTRYP glClientActiveVertexStreamATI)(GLenum stream);
GLLOADER_API extern void (GLAPIENTRYP glVertexBlendEnviATI)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glVertexBlendEnvfATI)(GLenum pname, GLfloat param);
#endif /* GL_ATI_vertex_streams */

#ifndef GL_EXT_422_pixels
#define GL_EXT_422_pixels 1
#define GL_422_EXT                        0x80CC
#define GL_422_REV_EXT                    0x80CD
#define GL_422_AVERAGE_EXT                0x80CE
#define GL_422_REV_AVERAGE_EXT            0x80CF
#endif /* GL_EXT_422_pixels */

#ifndef GL_EXT_abgr
#define GL_EXT_abgr 1
#define GL_ABGR_EXT                       0x8000
#endif /* GL_EXT_abgr */

#ifndef GL_EXT_bgra
#define GL_EXT_bgra 1
#define GL_BGR_EXT                        0x80E0
#define GL_BGRA_EXT                       0x80E1
#endif /* GL_EXT_bgra */

#ifndef GL_EXT_bindable_uniform
#define GL_EXT_bindable_uniform 1
#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT  0x8DED
#define GL_UNIFORM_BUFFER_EXT             0x8DEE
#define GL_UNIFORM_BUFFER_BINDING_EXT     0x8DEF
typedef void (GLAPIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
typedef GLint(GLAPIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
typedef GLintptr(GLAPIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
GLLOADER_API extern void (GLAPIENTRYP glUniformBufferEXT)(GLuint program, GLint location, GLuint buffer);
GLLOADER_API extern GLint(GLAPIENTRYP glGetUniformBufferSizeEXT)(GLuint program, GLint location);
GLLOADER_API extern GLintptr(GLAPIENTRYP glGetUniformOffsetEXT)(GLuint program, GLint location);
#endif /* GL_EXT_bindable_uniform */

#ifndef GL_EXT_blend_color
#define GL_EXT_blend_color 1
#define GL_CONSTANT_COLOR_EXT             0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT   0x8002
#define GL_CONSTANT_ALPHA_EXT             0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT   0x8004
#define GL_BLEND_COLOR_EXT                0x8005
typedef void (GLAPIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendColorEXT)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
#endif /* GL_EXT_blend_color */

#ifndef GL_EXT_blend_equation_separate
#define GL_EXT_blend_equation_separate 1
#define GL_BLEND_EQUATION_RGB_EXT         0x8009
#define GL_BLEND_EQUATION_ALPHA_EXT       0x883D
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquationSeparateEXT)(GLenum modeRGB, GLenum modeAlpha);
#endif /* GL_EXT_blend_equation_separate */

#ifndef GL_EXT_blend_func_separate
#define GL_EXT_blend_func_separate 1
#define GL_BLEND_DST_RGB_EXT              0x80C8
#define GL_BLEND_SRC_RGB_EXT              0x80C9
#define GL_BLEND_DST_ALPHA_EXT            0x80CA
#define GL_BLEND_SRC_ALPHA_EXT            0x80CB
typedef void (GLAPIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendFuncSeparateEXT)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
#endif /* GL_EXT_blend_func_separate */

#ifndef GL_EXT_blend_logic_op
#define GL_EXT_blend_logic_op 1
#endif /* GL_EXT_blend_logic_op */

#ifndef GL_EXT_blend_minmax
#define GL_EXT_blend_minmax 1
#define GL_MIN_EXT                        0x8007
#define GL_MAX_EXT                        0x8008
#define GL_FUNC_ADD_EXT                   0x8006
#define GL_BLEND_EQUATION_EXT             0x8009
typedef void (GLAPIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glBlendEquationEXT)(GLenum mode);
#endif /* GL_EXT_blend_minmax */

#ifndef GL_EXT_blend_subtract
#define GL_EXT_blend_subtract 1
#define GL_FUNC_SUBTRACT_EXT              0x800A
#define GL_FUNC_REVERSE_SUBTRACT_EXT      0x800B
#endif /* GL_EXT_blend_subtract */

#ifndef GL_EXT_clip_volume_hint
#define GL_EXT_clip_volume_hint 1
#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT  0x80F0
#endif /* GL_EXT_clip_volume_hint */

#ifndef GL_EXT_cmyka
#define GL_EXT_cmyka 1
#define GL_CMYK_EXT                       0x800C
#define GL_CMYKA_EXT                      0x800D
#define GL_PACK_CMYK_HINT_EXT             0x800E
#define GL_UNPACK_CMYK_HINT_EXT           0x800F
#endif /* GL_EXT_cmyka */

#ifndef GL_EXT_color_subtable
#define GL_EXT_color_subtable 1
typedef void (GLAPIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
typedef void (GLAPIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glColorSubTableEXT)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glCopyColorSubTableEXT)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
#endif /* GL_EXT_color_subtable */

#ifndef GL_EXT_compiled_vertex_array
#define GL_EXT_compiled_vertex_array 1
#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT   0x81A8
#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT   0x81A9
typedef void (GLAPIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);
typedef void (GLAPIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glLockArraysEXT)(GLint first, GLsizei count);
GLLOADER_API extern void (GLAPIENTRYP glUnlockArraysEXT)(void);
#endif /* GL_EXT_compiled_vertex_array */

#ifndef GL_EXT_convolution
#define GL_EXT_convolution 1
#define GL_CONVOLUTION_1D_EXT             0x8010
#define GL_CONVOLUTION_2D_EXT             0x8011
#define GL_SEPARABLE_2D_EXT               0x8012
#define GL_CONVOLUTION_BORDER_MODE_EXT    0x8013
#define GL_CONVOLUTION_FILTER_SCALE_EXT   0x8014
#define GL_CONVOLUTION_FILTER_BIAS_EXT    0x8015
#define GL_REDUCE_EXT                     0x8016
#define GL_CONVOLUTION_FORMAT_EXT         0x8017
#define GL_CONVOLUTION_WIDTH_EXT          0x8018
#define GL_CONVOLUTION_HEIGHT_EXT         0x8019
#define GL_MAX_CONVOLUTION_WIDTH_EXT      0x801A
#define GL_MAX_CONVOLUTION_HEIGHT_EXT     0x801B
#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
#define GL_POST_CONVOLUTION_RED_BIAS_EXT  0x8020
#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);
typedef void (GLAPIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void *image);
typedef void (GLAPIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
typedef void (GLAPIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionFilter1DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionFilter2DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameterfEXT)(GLenum target, GLenum pname, GLfloat params);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameterfvEXT)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameteriEXT)(GLenum target, GLenum pname, GLint params);
GLLOADER_API extern void (GLAPIENTRYP glConvolutionParameterivEXT)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glCopyConvolutionFilter1DEXT)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glCopyConvolutionFilter2DEXT)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glGetConvolutionFilterEXT)(GLenum target, GLenum format, GLenum type, void *image);
GLLOADER_API extern void (GLAPIENTRYP glGetConvolutionParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetConvolutionParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetSeparableFilterEXT)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
GLLOADER_API extern void (GLAPIENTRYP glSeparableFilter2DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
#endif /* GL_EXT_convolution */

#ifndef GL_EXT_coordinate_frame
#define GL_EXT_coordinate_frame 1
#define GL_TANGENT_ARRAY_EXT              0x8439
#define GL_BINORMAL_ARRAY_EXT             0x843A
#define GL_CURRENT_TANGENT_EXT            0x843B
#define GL_CURRENT_BINORMAL_EXT           0x843C
#define GL_TANGENT_ARRAY_TYPE_EXT         0x843E
#define GL_TANGENT_ARRAY_STRIDE_EXT       0x843F
#define GL_BINORMAL_ARRAY_TYPE_EXT        0x8440
#define GL_BINORMAL_ARRAY_STRIDE_EXT      0x8441
#define GL_TANGENT_ARRAY_POINTER_EXT      0x8442
#define GL_BINORMAL_ARRAY_POINTER_EXT     0x8443
#define GL_MAP1_TANGENT_EXT               0x8444
#define GL_MAP2_TANGENT_EXT               0x8445
#define GL_MAP1_BINORMAL_EXT              0x8446
#define GL_MAP2_BINORMAL_EXT              0x8447
typedef void (GLAPIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
typedef void (GLAPIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
typedef void (GLAPIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
typedef void (GLAPIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
typedef void (GLAPIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
typedef void (GLAPIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);
typedef void (GLAPIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
typedef void (GLAPIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
typedef void (GLAPIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
typedef void (GLAPIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
typedef void (GLAPIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
typedef void (GLAPIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);
typedef void (GLAPIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glTangent3bEXT)(GLbyte tx, GLbyte ty, GLbyte tz);
GLLOADER_API extern void (GLAPIENTRYP glTangent3bvEXT)(const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glTangent3dEXT)(GLdouble tx, GLdouble ty, GLdouble tz);
GLLOADER_API extern void (GLAPIENTRYP glTangent3dvEXT)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glTangent3fEXT)(GLfloat tx, GLfloat ty, GLfloat tz);
GLLOADER_API extern void (GLAPIENTRYP glTangent3fvEXT)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTangent3iEXT)(GLint tx, GLint ty, GLint tz);
GLLOADER_API extern void (GLAPIENTRYP glTangent3ivEXT)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glTangent3sEXT)(GLshort tx, GLshort ty, GLshort tz);
GLLOADER_API extern void (GLAPIENTRYP glTangent3svEXT)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3bEXT)(GLbyte bx, GLbyte by, GLbyte bz);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3bvEXT)(const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3dEXT)(GLdouble bx, GLdouble by, GLdouble bz);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3dvEXT)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3fEXT)(GLfloat bx, GLfloat by, GLfloat bz);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3fvEXT)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3iEXT)(GLint bx, GLint by, GLint bz);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3ivEXT)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3sEXT)(GLshort bx, GLshort by, GLshort bz);
GLLOADER_API extern void (GLAPIENTRYP glBinormal3svEXT)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glTangentPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glBinormalPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
#endif /* GL_EXT_coordinate_frame */

#ifndef GL_EXT_copy_texture
#define GL_EXT_copy_texture 1
typedef void (GLAPIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAPIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAPIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexImage1DEXT)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexImage2DEXT)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexSubImage1DEXT)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexSubImage2DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glCopyTexSubImage3DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif /* GL_EXT_copy_texture */

#ifndef GL_EXT_cull_vertex
#define GL_EXT_cull_vertex 1
#define GL_CULL_VERTEX_EXT                0x81AA
#define GL_CULL_VERTEX_EYE_POSITION_EXT   0x81AB
#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
typedef void (GLAPIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glCullParameterdvEXT)(GLenum pname, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glCullParameterfvEXT)(GLenum pname, GLfloat *params);
#endif /* GL_EXT_cull_vertex */

#ifndef GL_EXT_debug_label
#define GL_EXT_debug_label 1
#define GL_PROGRAM_PIPELINE_OBJECT_EXT    0x8A4F
#define GL_PROGRAM_OBJECT_EXT             0x8B40
#define GL_SHADER_OBJECT_EXT              0x8B48
#define GL_BUFFER_OBJECT_EXT              0x9151
#define GL_QUERY_OBJECT_EXT               0x9153
#define GL_VERTEX_ARRAY_OBJECT_EXT        0x9154
typedef void (GLAPIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, const GLchar *label);
typedef void (GLAPIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
GLLOADER_API extern void (GLAPIENTRYP glLabelObjectEXT)(GLenum type, GLuint object, GLsizei length, const GLchar *label);
GLLOADER_API extern void (GLAPIENTRYP glGetObjectLabelEXT)(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
#endif /* GL_EXT_debug_label */

#ifndef GL_EXT_debug_marker
#define GL_EXT_debug_marker 1
typedef void (GLAPIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);
typedef void (GLAPIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);
typedef void (GLAPIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glInsertEventMarkerEXT)(GLsizei length, const GLchar *marker);
GLLOADER_API extern void (GLAPIENTRYP glPushGroupMarkerEXT)(GLsizei length, const GLchar *marker);
GLLOADER_API extern void (GLAPIENTRYP glPopGroupMarkerEXT)(void);
#endif /* GL_EXT_debug_marker */

#ifndef GL_EXT_depth_bounds_test
#define GL_EXT_depth_bounds_test 1
#define GL_DEPTH_BOUNDS_TEST_EXT          0x8890
#define GL_DEPTH_BOUNDS_EXT               0x8891
typedef void (GLAPIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);
GLLOADER_API extern void (GLAPIENTRYP glDepthBoundsEXT)(GLclampd zmin, GLclampd zmax);
#endif /* GL_EXT_depth_bounds_test */

#ifndef GL_EXT_direct_state_access
#define GL_EXT_direct_state_access 1
#define GL_PROGRAM_MATRIX_EXT             0x8E2D
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT   0x8E2E
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
typedef void (GLAPIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (GLAPIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (GLAPIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);
typedef void (GLAPIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAPIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAPIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);
typedef void (GLAPIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);
typedef void (GLAPIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);
typedef void (GLAPIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAPIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAPIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
typedef void (GLAPIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAPIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAPIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);
typedef void (GLAPIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);
typedef void (GLAPIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);
typedef void (GLAPIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);
typedef void (GLAPIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **data);
typedef void (GLAPIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef void (GLAPIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef GLboolean(GLAPIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef void (GLAPIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);
typedef void (GLAPIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, void *img);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
typedef void (GLAPIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, void *img);
typedef void (GLAPIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (GLAPIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (GLAPIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
typedef void (GLAPIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
typedef void *(GLAPIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);
typedef GLboolean(GLAPIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);
typedef void (GLAPIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void **params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);
typedef void (GLAPIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);
typedef void (GLAPIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);
typedef void (GLAPIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, void *string);
typedef void (GLAPIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef GLenum(GLAPIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);
typedef void (GLAPIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);
typedef void (GLAPIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (GLAPIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);
typedef void (GLAPIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);
typedef void (GLAPIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);
typedef void (GLAPIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);
typedef void (GLAPIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint *param);
typedef void (GLAPIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **param);
typedef void (GLAPIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);
typedef void (GLAPIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, void **param);
typedef void *(GLAPIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (GLAPIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (GLAPIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
typedef void (GLAPIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
typedef void (GLAPIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (GLAPIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAPIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index, GLuint divisor);
GLLOADER_API extern void (GLAPIENTRYP glMatrixLoadfEXT)(GLenum mode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixLoaddEXT)(GLenum mode, const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixMultfEXT)(GLenum mode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixMultdEXT)(GLenum mode, const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixLoadIdentityEXT)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glMatrixRotatefEXT)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glMatrixRotatedEXT)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glMatrixScalefEXT)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glMatrixScaledEXT)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glMatrixTranslatefEXT)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glMatrixTranslatedEXT)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glMatrixFrustumEXT)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLLOADER_API extern void (GLAPIENTRYP glMatrixOrthoEXT)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLLOADER_API extern void (GLAPIENTRYP glMatrixPopEXT)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glMatrixPushEXT)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glClientAttribDefaultEXT)(GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glPushClientAttribDefaultEXT)(GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameterfEXT)(GLuint texture, GLenum target, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameterfvEXT)(GLuint texture, GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameteriEXT)(GLuint texture, GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameterivEXT)(GLuint texture, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glCopyTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glCopyTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureImageEXT)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureParameterfvEXT)(GLuint texture, GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureParameterivEXT)(GLuint texture, GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureLevelParameterfvEXT)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureLevelParameterivEXT)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTextureImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glCopyTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glBindMultiTextureEXT)(GLenum texunit, GLenum target, GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoordPointerEXT)(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexEnvfEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexEnvfvEXT)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexEnviEXT)(GLenum texunit, GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexEnvivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexGendEXT)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexGendvEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexGenfEXT)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexGenfvEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexGeniEXT)(GLenum texunit, GLenum coord, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexGenivEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexEnvfvEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexEnvivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexGendvEXT)(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexGenfvEXT)(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexGenivEXT)(GLenum texunit, GLenum coord, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexParameteriEXT)(GLenum texunit, GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexParameterivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexParameterfEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexParameterfvEXT)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glCopyMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLLOADER_API extern void (GLAPIENTRYP glCopyMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glCopyMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexImageEXT)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexParameterfvEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexParameterivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexLevelParameterfvEXT)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexLevelParameterivEXT)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glCopyMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glEnableClientStateIndexedEXT)(GLenum array, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glDisableClientStateIndexedEXT)(GLenum array, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glGetFloatIndexedvEXT)(GLenum target, GLuint index, GLfloat *data);
GLLOADER_API extern void (GLAPIENTRYP glGetDoubleIndexedvEXT)(GLenum target, GLuint index, GLdouble *data);
GLLOADER_API extern void (GLAPIENTRYP glGetPointerIndexedvEXT)(GLenum target, GLuint index, void **data);
GLLOADER_API extern void (GLAPIENTRYP glEnableIndexedEXT)(GLenum target, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glDisableIndexedEXT)(GLenum target, GLuint index);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsEnabledIndexedEXT)(GLenum target, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glGetIntegerIndexedvEXT)(GLenum target, GLuint index, GLint *data);
GLLOADER_API extern void (GLAPIENTRYP glGetBooleanIndexedvEXT)(GLenum target, GLuint index, GLboolean *data);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTextureImage3DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glGetCompressedTextureImageEXT)(GLuint texture, GLenum target, GLint lod, void *img);
GLLOADER_API extern void (GLAPIENTRYP glCompressedMultiTexImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glCompressedMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API extern void (GLAPIENTRYP glGetCompressedMultiTexImageEXT)(GLenum texunit, GLenum target, GLint lod, void *img);
GLLOADER_API extern void (GLAPIENTRYP glMatrixLoadTransposefEXT)(GLenum mode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixLoadTransposedEXT)(GLenum mode, const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixMultTransposefEXT)(GLenum mode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixMultTransposedEXT)(GLenum mode, const GLdouble *m);
GLLOADER_API extern void (GLAPIENTRYP glNamedBufferDataEXT)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
GLLOADER_API extern void (GLAPIENTRYP glNamedBufferSubDataEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
GLLOADER_API extern void *(GLAPIENTRYP glMapNamedBufferEXT)(GLuint buffer, GLenum access);
GLLOADER_API extern GLboolean(GLAPIENTRYP glUnmapNamedBufferEXT)(GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedBufferParameterivEXT)(GLuint buffer, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedBufferPointervEXT)(GLuint buffer, GLenum pname, void **params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedBufferSubDataEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1fEXT)(GLuint program, GLint location, GLfloat v0);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1iEXT)(GLuint program, GLint location, GLint v0);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2iEXT)(GLuint program, GLint location, GLint v0, GLint v1);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3iEXT)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4iEXT)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2x3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3x2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2x4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4x2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3x4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4x3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glTextureBufferEXT)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexBufferEXT)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameterIivEXT)(GLuint texture, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTextureParameterIuivEXT)(GLuint texture, GLenum target, GLenum pname, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureParameterIivEXT)(GLuint texture, GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTextureParameterIuivEXT)(GLuint texture, GLenum target, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexParameterIivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexParameterIuivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexParameterIivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMultiTexParameterIuivEXT)(GLenum texunit, GLenum target, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1uiEXT)(GLuint program, GLint location, GLuint v0);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParameters4fvEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParameterI4iEXT)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParameterI4ivEXT)(GLuint program, GLenum target, GLuint index, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParametersI4ivEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParameterI4uiEXT)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParameterI4uivEXT)(GLuint program, GLenum target, GLuint index, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParametersI4uivEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedProgramLocalParameterIivEXT)(GLuint program, GLenum target, GLuint index, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedProgramLocalParameterIuivEXT)(GLuint program, GLenum target, GLuint index, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glEnableClientStateiEXT)(GLenum array, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glDisableClientStateiEXT)(GLenum array, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glGetFloati_vEXT)(GLenum pname, GLuint index, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetDoublei_vEXT)(GLenum pname, GLuint index, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetPointeri_vEXT)(GLenum pname, GLuint index, void **params);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramStringEXT)(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParameter4dEXT)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParameter4dvEXT)(GLuint program, GLenum target, GLuint index, const GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParameter4fEXT)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glNamedProgramLocalParameter4fvEXT)(GLuint program, GLenum target, GLuint index, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedProgramLocalParameterdvEXT)(GLuint program, GLenum target, GLuint index, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedProgramLocalParameterfvEXT)(GLuint program, GLenum target, GLuint index, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedProgramivEXT)(GLuint program, GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedProgramStringEXT)(GLuint program, GLenum target, GLenum pname, void *string);
GLLOADER_API extern void (GLAPIENTRYP glNamedRenderbufferStorageEXT)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedRenderbufferParameterivEXT)(GLuint renderbuffer, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glNamedRenderbufferStorageMultisampleEXT)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glNamedRenderbufferStorageMultisampleCoverageEXT)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern GLenum(GLAPIENTRYP glCheckNamedFramebufferStatusEXT)(GLuint framebuffer, GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferTexture1DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferTexture2DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferTexture3DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferRenderbufferEXT)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedFramebufferAttachmentParameterivEXT)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGenerateTextureMipmapEXT)(GLuint texture, GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glGenerateMultiTexMipmapEXT)(GLenum texunit, GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferDrawBufferEXT)(GLuint framebuffer, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferDrawBuffersEXT)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferReadBufferEXT)(GLuint framebuffer, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glGetFramebufferParameterivEXT)(GLuint framebuffer, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glNamedCopyBufferSubDataEXT)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferTextureEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferTextureLayerEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferTextureFaceEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLLOADER_API extern void (GLAPIENTRYP glTextureRenderbufferEXT)(GLuint texture, GLenum target, GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexRenderbufferEXT)(GLenum texunit, GLenum target, GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayColorOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayEdgeFlagOffsetEXT)(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayIndexOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayNormalOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayTexCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayMultiTexCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayFogCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArraySecondaryColorOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexAttribOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexAttribIOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glEnableVertexArrayEXT)(GLuint vaobj, GLenum array);
GLLOADER_API extern void (GLAPIENTRYP glDisableVertexArrayEXT)(GLuint vaobj, GLenum array);
GLLOADER_API extern void (GLAPIENTRYP glEnableVertexArrayAttribEXT)(GLuint vaobj, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glDisableVertexArrayAttribEXT)(GLuint vaobj, GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexArrayIntegervEXT)(GLuint vaobj, GLenum pname, GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexArrayPointervEXT)(GLuint vaobj, GLenum pname, void **param);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexArrayIntegeri_vEXT)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexArrayPointeri_vEXT)(GLuint vaobj, GLuint index, GLenum pname, void **param);
GLLOADER_API extern void *(GLAPIENTRYP glMapNamedBufferRangeEXT)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLLOADER_API extern void (GLAPIENTRYP glFlushMappedNamedBufferRangeEXT)(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLLOADER_API extern void (GLAPIENTRYP glNamedBufferStorageEXT)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
GLLOADER_API extern void (GLAPIENTRYP glClearNamedBufferDataEXT)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glClearNamedBufferSubDataEXT)(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferParameteriEXT)(GLuint framebuffer, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedFramebufferParameterivEXT)(GLuint framebuffer, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1dEXT)(GLuint program, GLint location, GLdouble x);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform1dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform2dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform3dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniform4dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2x3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix2x4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3x2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix3x4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4x2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformMatrix4x3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API extern void (GLAPIENTRYP glTextureBufferRangeEXT)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage1DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage2DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage3DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage2DMultisampleEXT)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLLOADER_API extern void (GLAPIENTRYP glTextureStorage3DMultisampleEXT)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayBindVertexBufferEXT)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexAttribFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexAttribIFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexAttribLFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexAttribBindingEXT)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexBindingDivisorEXT)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexAttribLOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glTexturePageCommitmentEXT)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayVertexAttribDivisorEXT)(GLuint vaobj, GLuint index, GLuint divisor);
#endif /* GL_EXT_direct_state_access */

#ifndef GL_EXT_draw_buffers2
#define GL_EXT_draw_buffers2 1
typedef void (GLAPIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLLOADER_API extern void (GLAPIENTRYP glColorMaskIndexedEXT)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
#endif /* GL_EXT_draw_buffers2 */

#ifndef GL_EXT_draw_instanced
#define GL_EXT_draw_instanced 1
typedef void (GLAPIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (GLAPIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
GLLOADER_API extern void (GLAPIENTRYP glDrawArraysInstancedEXT)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
GLLOADER_API extern void (GLAPIENTRYP glDrawElementsInstancedEXT)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
#endif /* GL_EXT_draw_instanced */

#ifndef GL_EXT_draw_range_elements
#define GL_EXT_draw_range_elements 1
#define GL_MAX_ELEMENTS_VERTICES_EXT      0x80E8
#define GL_MAX_ELEMENTS_INDICES_EXT       0x80E9
typedef void (GLAPIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
GLLOADER_API extern void (GLAPIENTRYP glDrawRangeElementsEXT)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
#endif /* GL_EXT_draw_range_elements */

#ifndef GL_EXT_fog_coord
#define GL_EXT_fog_coord 1
#define GL_FOG_COORDINATE_SOURCE_EXT      0x8450
#define GL_FOG_COORDINATE_EXT             0x8451
#define GL_FRAGMENT_DEPTH_EXT             0x8452
#define GL_CURRENT_FOG_COORDINATE_EXT     0x8453
#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT  0x8454
#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
#define GL_FOG_COORDINATE_ARRAY_EXT       0x8457
typedef void (GLAPIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);
typedef void (GLAPIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);
typedef void (GLAPIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);
typedef void (GLAPIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);
typedef void (GLAPIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordfEXT)(GLfloat coord);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordfvEXT)(const GLfloat *coord);
GLLOADER_API extern void (GLAPIENTRYP glFogCoorddEXT)(GLdouble coord);
GLLOADER_API extern void (GLAPIENTRYP glFogCoorddvEXT)(const GLdouble *coord);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
#endif /* GL_EXT_fog_coord */

#ifndef GL_EXT_framebuffer_blit
#define GL_EXT_framebuffer_blit 1
#define GL_READ_FRAMEBUFFER_EXT           0x8CA8
#define GL_DRAW_FRAMEBUFFER_EXT           0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING_EXT   0x8CA6
#define GL_READ_FRAMEBUFFER_BINDING_EXT   0x8CAA
typedef void (GLAPIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLLOADER_API extern void (GLAPIENTRYP glBlitFramebufferEXT)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif /* GL_EXT_framebuffer_blit */

#ifndef GL_EXT_framebuffer_multisample
#define GL_EXT_framebuffer_multisample 1
#define GL_RENDERBUFFER_SAMPLES_EXT       0x8CAB
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#define GL_MAX_SAMPLES_EXT                0x8D57
typedef void (GLAPIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glRenderbufferStorageMultisampleEXT)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif /* GL_EXT_framebuffer_multisample */

#ifndef GL_EXT_framebuffer_multisample_blit_scaled
#define GL_EXT_framebuffer_multisample_blit_scaled 1
#define GL_SCALED_RESOLVE_FASTEST_EXT     0x90BA
#define GL_SCALED_RESOLVE_NICEST_EXT      0x90BB
#endif /* GL_EXT_framebuffer_multisample_blit_scaled */

#ifndef GL_EXT_framebuffer_object
#define GL_EXT_framebuffer_object 1
#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#define GL_MAX_RENDERBUFFER_SIZE_EXT      0x84E8
#define GL_FRAMEBUFFER_BINDING_EXT        0x8CA6
#define GL_RENDERBUFFER_BINDING_EXT       0x8CA7
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE_EXT       0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED_EXT    0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS_EXT      0x8CDF
#define GL_COLOR_ATTACHMENT0_EXT          0x8CE0
#define GL_COLOR_ATTACHMENT1_EXT          0x8CE1
#define GL_COLOR_ATTACHMENT2_EXT          0x8CE2
#define GL_COLOR_ATTACHMENT3_EXT          0x8CE3
#define GL_COLOR_ATTACHMENT4_EXT          0x8CE4
#define GL_COLOR_ATTACHMENT5_EXT          0x8CE5
#define GL_COLOR_ATTACHMENT6_EXT          0x8CE6
#define GL_COLOR_ATTACHMENT7_EXT          0x8CE7
#define GL_COLOR_ATTACHMENT8_EXT          0x8CE8
#define GL_COLOR_ATTACHMENT9_EXT          0x8CE9
#define GL_COLOR_ATTACHMENT10_EXT         0x8CEA
#define GL_COLOR_ATTACHMENT11_EXT         0x8CEB
#define GL_COLOR_ATTACHMENT12_EXT         0x8CEC
#define GL_COLOR_ATTACHMENT13_EXT         0x8CED
#define GL_COLOR_ATTACHMENT14_EXT         0x8CEE
#define GL_COLOR_ATTACHMENT15_EXT         0x8CEF
#define GL_DEPTH_ATTACHMENT_EXT           0x8D00
#define GL_STENCIL_ATTACHMENT_EXT         0x8D20
#define GL_FRAMEBUFFER_EXT                0x8D40
#define GL_RENDERBUFFER_EXT               0x8D41
#define GL_RENDERBUFFER_WIDTH_EXT         0x8D42
#define GL_RENDERBUFFER_HEIGHT_EXT        0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#define GL_STENCIL_INDEX1_EXT             0x8D46
#define GL_STENCIL_INDEX4_EXT             0x8D47
#define GL_STENCIL_INDEX8_EXT             0x8D48
#define GL_STENCIL_INDEX16_EXT            0x8D49
#define GL_RENDERBUFFER_RED_SIZE_EXT      0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE_EXT    0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE_EXT     0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE_EXT    0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE_EXT    0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE_EXT  0x8D55
typedef GLboolean(GLAPIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
typedef void (GLAPIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
typedef void (GLAPIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAPIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef GLboolean(GLAPIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
typedef void (GLAPIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
typedef void (GLAPIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
typedef void (GLAPIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
typedef GLenum(GLAPIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAPIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsRenderbufferEXT)(GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glBindRenderbufferEXT)(GLenum target, GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glDeleteRenderbuffersEXT)(GLsizei n, const GLuint *renderbuffers);
GLLOADER_API extern void (GLAPIENTRYP glGenRenderbuffersEXT)(GLsizei n, GLuint *renderbuffers);
GLLOADER_API extern void (GLAPIENTRYP glRenderbufferStorageEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glGetRenderbufferParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsFramebufferEXT)(GLuint framebuffer);
GLLOADER_API extern void (GLAPIENTRYP glBindFramebufferEXT)(GLenum target, GLuint framebuffer);
GLLOADER_API extern void (GLAPIENTRYP glDeleteFramebuffersEXT)(GLsizei n, const GLuint *framebuffers);
GLLOADER_API extern void (GLAPIENTRYP glGenFramebuffersEXT)(GLsizei n, GLuint *framebuffers);
GLLOADER_API extern GLenum(GLAPIENTRYP glCheckFramebufferStatusEXT)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTexture1DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTexture2DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTexture3DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferRenderbufferEXT)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glGetFramebufferAttachmentParameterivEXT)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGenerateMipmapEXT)(GLenum target);
#endif /* GL_EXT_framebuffer_object */

#ifndef GL_EXT_framebuffer_sRGB
#define GL_EXT_framebuffer_sRGB 1
#define GL_FRAMEBUFFER_SRGB_EXT           0x8DB9
#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT   0x8DBA
#endif /* GL_EXT_framebuffer_sRGB */

#ifndef GL_EXT_geometry_shader4
#define GL_EXT_geometry_shader4 1
#define GL_GEOMETRY_SHADER_EXT            0x8DD9
#define GL_GEOMETRY_VERTICES_OUT_EXT      0x8DDA
#define GL_GEOMETRY_INPUT_TYPE_EXT        0x8DDB
#define GL_GEOMETRY_OUTPUT_TYPE_EXT       0x8DDC
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 0x8DDD
#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 0x8DDE
#define GL_MAX_VARYING_COMPONENTS_EXT     0x8B4B
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#define GL_LINES_ADJACENCY_EXT            0x000A
#define GL_LINE_STRIP_ADJACENCY_EXT       0x000B
#define GL_TRIANGLES_ADJACENCY_EXT        0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT   0x000D
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
#define GL_PROGRAM_POINT_SIZE_EXT         0x8642
typedef void (GLAPIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);
GLLOADER_API extern void (GLAPIENTRYP glProgramParameteriEXT)(GLuint program, GLenum pname, GLint value);
#endif /* GL_EXT_geometry_shader4 */

#ifndef GL_EXT_gpu_program_parameters
#define GL_EXT_gpu_program_parameters 1
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParameters4fvEXT)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParameters4fvEXT)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
#endif /* GL_EXT_gpu_program_parameters */

#ifndef GL_EXT_gpu_shader4
#define GL_EXT_gpu_shader4 1
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
#define GL_SAMPLER_1D_ARRAY_EXT           0x8DC0
#define GL_SAMPLER_2D_ARRAY_EXT           0x8DC1
#define GL_SAMPLER_BUFFER_EXT             0x8DC2
#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT    0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT    0x8DC4
#define GL_SAMPLER_CUBE_SHADOW_EXT        0x8DC5
#define GL_UNSIGNED_INT_VEC2_EXT          0x8DC6
#define GL_UNSIGNED_INT_VEC3_EXT          0x8DC7
#define GL_UNSIGNED_INT_VEC4_EXT          0x8DC8
#define GL_INT_SAMPLER_1D_EXT             0x8DC9
#define GL_INT_SAMPLER_2D_EXT             0x8DCA
#define GL_INT_SAMPLER_3D_EXT             0x8DCB
#define GL_INT_SAMPLER_CUBE_EXT           0x8DCC
#define GL_INT_SAMPLER_2D_RECT_EXT        0x8DCD
#define GL_INT_SAMPLER_1D_ARRAY_EXT       0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY_EXT       0x8DCF
#define GL_INT_SAMPLER_BUFFER_EXT         0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_1D_EXT    0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D_EXT    0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D_EXT    0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT  0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT   0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT   0x8905
typedef void (GLAPIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);
typedef void (GLAPIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);
typedef GLint(GLAPIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);
typedef void (GLAPIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);
typedef void (GLAPIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAPIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAPIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (GLAPIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glGetUniformuivEXT)(GLuint program, GLint location, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glBindFragDataLocationEXT)(GLuint program, GLuint color, const GLchar *name);
GLLOADER_API extern GLint(GLAPIENTRYP glGetFragDataLocationEXT)(GLuint program, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glUniform1uiEXT)(GLint location, GLuint v0);
GLLOADER_API extern void (GLAPIENTRYP glUniform2uiEXT)(GLint location, GLuint v0, GLuint v1);
GLLOADER_API extern void (GLAPIENTRYP glUniform3uiEXT)(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLLOADER_API extern void (GLAPIENTRYP glUniform4uiEXT)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLLOADER_API extern void (GLAPIENTRYP glUniform1uivEXT)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform2uivEXT)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform3uivEXT)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API extern void (GLAPIENTRYP glUniform4uivEXT)(GLint location, GLsizei count, const GLuint *value);
#endif /* GL_EXT_gpu_shader4 */

#ifndef GL_EXT_histogram
#define GL_EXT_histogram 1
#define GL_HISTOGRAM_EXT                  0x8024
#define GL_PROXY_HISTOGRAM_EXT            0x8025
#define GL_HISTOGRAM_WIDTH_EXT            0x8026
#define GL_HISTOGRAM_FORMAT_EXT           0x8027
#define GL_HISTOGRAM_RED_SIZE_EXT         0x8028
#define GL_HISTOGRAM_GREEN_SIZE_EXT       0x8029
#define GL_HISTOGRAM_BLUE_SIZE_EXT        0x802A
#define GL_HISTOGRAM_ALPHA_SIZE_EXT       0x802B
#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT   0x802C
#define GL_HISTOGRAM_SINK_EXT             0x802D
#define GL_MINMAX_EXT                     0x802E
#define GL_MINMAX_FORMAT_EXT              0x802F
#define GL_MINMAX_SINK_EXT                0x8030
#define GL_TABLE_TOO_LARGE_EXT            0x8031
typedef void (GLAPIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
typedef void (GLAPIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
typedef void (GLAPIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (GLAPIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (GLAPIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glGetHistogramEXT)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
GLLOADER_API extern void (GLAPIENTRYP glGetHistogramParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetHistogramParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMinmaxEXT)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
GLLOADER_API extern void (GLAPIENTRYP glGetMinmaxParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMinmaxParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glHistogramEXT)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLLOADER_API extern void (GLAPIENTRYP glMinmaxEXT)(GLenum target, GLenum internalformat, GLboolean sink);
GLLOADER_API extern void (GLAPIENTRYP glResetHistogramEXT)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glResetMinmaxEXT)(GLenum target);
#endif /* GL_EXT_histogram */

#ifndef GL_EXT_index_array_formats
#define GL_EXT_index_array_formats 1
#define GL_IUI_V2F_EXT                    0x81AD
#define GL_IUI_V3F_EXT                    0x81AE
#define GL_IUI_N3F_V2F_EXT                0x81AF
#define GL_IUI_N3F_V3F_EXT                0x81B0
#define GL_T2F_IUI_V2F_EXT                0x81B1
#define GL_T2F_IUI_V3F_EXT                0x81B2
#define GL_T2F_IUI_N3F_V2F_EXT            0x81B3
#define GL_T2F_IUI_N3F_V3F_EXT            0x81B4
#endif /* GL_EXT_index_array_formats */

#ifndef GL_EXT_index_func
#define GL_EXT_index_func 1
#define GL_INDEX_TEST_EXT                 0x81B5
#define GL_INDEX_TEST_FUNC_EXT            0x81B6
#define GL_INDEX_TEST_REF_EXT             0x81B7
typedef void (GLAPIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);
GLLOADER_API extern void (GLAPIENTRYP glIndexFuncEXT)(GLenum func, GLclampf ref);
#endif /* GL_EXT_index_func */

#ifndef GL_EXT_index_material
#define GL_EXT_index_material 1
#define GL_INDEX_MATERIAL_EXT             0x81B8
#define GL_INDEX_MATERIAL_PARAMETER_EXT   0x81B9
#define GL_INDEX_MATERIAL_FACE_EXT        0x81BA
typedef void (GLAPIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glIndexMaterialEXT)(GLenum face, GLenum mode);
#endif /* GL_EXT_index_material */

#ifndef GL_EXT_index_texture
#define GL_EXT_index_texture 1
#endif /* GL_EXT_index_texture */

#ifndef GL_EXT_light_texture
#define GL_EXT_light_texture 1
#define GL_FRAGMENT_MATERIAL_EXT          0x8349
#define GL_FRAGMENT_NORMAL_EXT            0x834A
#define GL_FRAGMENT_COLOR_EXT             0x834C
#define GL_ATTENUATION_EXT                0x834D
#define GL_SHADOW_ATTENUATION_EXT         0x834E
#define GL_TEXTURE_APPLICATION_MODE_EXT   0x834F
#define GL_TEXTURE_LIGHT_EXT              0x8350
#define GL_TEXTURE_MATERIAL_FACE_EXT      0x8351
#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
typedef void (GLAPIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);
typedef void (GLAPIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);
typedef void (GLAPIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glApplyTextureEXT)(GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glTextureLightEXT)(GLenum pname);
GLLOADER_API extern void (GLAPIENTRYP glTextureMaterialEXT)(GLenum face, GLenum mode);
#endif /* GL_EXT_light_texture */

#ifndef GL_EXT_misc_attribute
#define GL_EXT_misc_attribute 1
#endif /* GL_EXT_misc_attribute */

#ifndef GL_EXT_multi_draw_arrays
#define GL_EXT_multi_draw_arrays 1
typedef void (GLAPIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawArraysEXT)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawElementsEXT)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);
#endif /* GL_EXT_multi_draw_arrays */

#ifndef GL_EXT_multisample
#define GL_EXT_multisample 1
#define GL_MULTISAMPLE_EXT                0x809D
#define GL_SAMPLE_ALPHA_TO_MASK_EXT       0x809E
#define GL_SAMPLE_ALPHA_TO_ONE_EXT        0x809F
#define GL_SAMPLE_MASK_EXT                0x80A0
#define GL_1PASS_EXT                      0x80A1
#define GL_2PASS_0_EXT                    0x80A2
#define GL_2PASS_1_EXT                    0x80A3
#define GL_4PASS_0_EXT                    0x80A4
#define GL_4PASS_1_EXT                    0x80A5
#define GL_4PASS_2_EXT                    0x80A6
#define GL_4PASS_3_EXT                    0x80A7
#define GL_SAMPLE_BUFFERS_EXT             0x80A8
#define GL_SAMPLES_EXT                    0x80A9
#define GL_SAMPLE_MASK_VALUE_EXT          0x80AA
#define GL_SAMPLE_MASK_INVERT_EXT         0x80AB
#define GL_SAMPLE_PATTERN_EXT             0x80AC
#define GL_MULTISAMPLE_BIT_EXT            0x20000000
typedef void (GLAPIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);
typedef void (GLAPIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);
GLLOADER_API extern void (GLAPIENTRYP glSampleMaskEXT)(GLclampf value, GLboolean invert);
GLLOADER_API extern void (GLAPIENTRYP glSamplePatternEXT)(GLenum pattern);
#endif /* GL_EXT_multisample */

#ifndef GL_EXT_packed_depth_stencil
#define GL_EXT_packed_depth_stencil 1
#define GL_DEPTH_STENCIL_EXT              0x84F9
#define GL_UNSIGNED_INT_24_8_EXT          0x84FA
#define GL_DEPTH24_STENCIL8_EXT           0x88F0
#define GL_TEXTURE_STENCIL_SIZE_EXT       0x88F1
#endif /* GL_EXT_packed_depth_stencil */

#ifndef GL_EXT_packed_float
#define GL_EXT_packed_float 1
#define GL_R11F_G11F_B10F_EXT             0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT 0x8C3B
#define GL_RGBA_SIGNED_COMPONENTS_EXT     0x8C3C
#endif /* GL_EXT_packed_float */

#ifndef GL_EXT_packed_pixels
#define GL_EXT_packed_pixels 1
#define GL_UNSIGNED_BYTE_3_3_2_EXT        0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4_EXT     0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1_EXT     0x8034
#define GL_UNSIGNED_INT_8_8_8_8_EXT       0x8035
#define GL_UNSIGNED_INT_10_10_10_2_EXT    0x8036
#endif /* GL_EXT_packed_pixels */

#ifndef GL_EXT_paletted_texture
#define GL_EXT_paletted_texture 1
#define GL_COLOR_INDEX1_EXT               0x80E2
#define GL_COLOR_INDEX2_EXT               0x80E3
#define GL_COLOR_INDEX4_EXT               0x80E4
#define GL_COLOR_INDEX8_EXT               0x80E5
#define GL_COLOR_INDEX12_EXT              0x80E6
#define GL_COLOR_INDEX16_EXT              0x80E7
#define GL_TEXTURE_INDEX_SIZE_EXT         0x80ED
typedef void (GLAPIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);
typedef void (GLAPIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, void *data);
typedef void (GLAPIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glColorTableEXT)(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);
GLLOADER_API extern void (GLAPIENTRYP glGetColorTableEXT)(GLenum target, GLenum format, GLenum type, void *data);
GLLOADER_API extern void (GLAPIENTRYP glGetColorTableParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetColorTableParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
#endif /* GL_EXT_paletted_texture */

#ifndef GL_EXT_pixel_buffer_object
#define GL_EXT_pixel_buffer_object 1
#define GL_PIXEL_PACK_BUFFER_EXT          0x88EB
#define GL_PIXEL_UNPACK_BUFFER_EXT        0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING_EXT  0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT 0x88EF
#endif /* GL_EXT_pixel_buffer_object */

#ifndef GL_EXT_pixel_transform
#define GL_EXT_pixel_transform 1
#define GL_PIXEL_TRANSFORM_2D_EXT         0x8330
#define GL_PIXEL_MAG_FILTER_EXT           0x8331
#define GL_PIXEL_MIN_FILTER_EXT           0x8332
#define GL_PIXEL_CUBIC_WEIGHT_EXT         0x8333
#define GL_CUBIC_EXT                      0x8334
#define GL_AVERAGE_EXT                    0x8335
#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT  0x8338
typedef void (GLAPIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glPixelTransformParameteriEXT)(GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glPixelTransformParameterfEXT)(GLenum target, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPixelTransformParameterivEXT)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glPixelTransformParameterfvEXT)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetPixelTransformParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetPixelTransformParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
#endif /* GL_EXT_pixel_transform */

#ifndef GL_EXT_pixel_transform_color_table
#define GL_EXT_pixel_transform_color_table 1
#endif /* GL_EXT_pixel_transform_color_table */

#ifndef GL_EXT_point_parameters
#define GL_EXT_point_parameters 1
#define GL_POINT_SIZE_MIN_EXT             0x8126
#define GL_POINT_SIZE_MAX_EXT             0x8127
#define GL_POINT_FADE_THRESHOLD_SIZE_EXT  0x8128
#define GL_DISTANCE_ATTENUATION_EXT       0x8129
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterfEXT)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterfvEXT)(GLenum pname, const GLfloat *params);
#endif /* GL_EXT_point_parameters */

#ifndef GL_EXT_polygon_offset
#define GL_EXT_polygon_offset 1
#define GL_POLYGON_OFFSET_EXT             0x8037
#define GL_POLYGON_OFFSET_FACTOR_EXT      0x8038
#define GL_POLYGON_OFFSET_BIAS_EXT        0x8039
typedef void (GLAPIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);
GLLOADER_API extern void (GLAPIENTRYP glPolygonOffsetEXT)(GLfloat factor, GLfloat bias);
#endif /* GL_EXT_polygon_offset */

#ifndef GL_EXT_polygon_offset_clamp
#define GL_EXT_polygon_offset_clamp 1
#define GL_POLYGON_OFFSET_CLAMP_EXT       0x8E1B
typedef void (GLAPIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat clamp);
GLLOADER_API extern void (GLAPIENTRYP glPolygonOffsetClampEXT)(GLfloat factor, GLfloat units, GLfloat clamp);
#endif /* GL_EXT_polygon_offset_clamp */

#ifndef GL_EXT_post_depth_coverage
#define GL_EXT_post_depth_coverage 1
#endif /* GL_EXT_post_depth_coverage */

#ifndef GL_EXT_provoking_vertex
#define GL_EXT_provoking_vertex 1
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION_EXT    0x8E4D
#define GL_LAST_VERTEX_CONVENTION_EXT     0x8E4E
#define GL_PROVOKING_VERTEX_EXT           0x8E4F
typedef void (GLAPIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glProvokingVertexEXT)(GLenum mode);
#endif /* GL_EXT_provoking_vertex */

#ifndef GL_EXT_raster_multisample
#define GL_EXT_raster_multisample 1
#define GL_RASTER_MULTISAMPLE_EXT         0x9327
#define GL_RASTER_SAMPLES_EXT             0x9328
#define GL_MAX_RASTER_SAMPLES_EXT         0x9329
#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT 0x932A
#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT 0x932B
#define GL_EFFECTIVE_RASTER_SAMPLES_EXT   0x932C
typedef void (GLAPIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocations);
GLLOADER_API extern void (GLAPIENTRYP glRasterSamplesEXT)(GLuint samples, GLboolean fixedsamplelocations);
#endif /* GL_EXT_raster_multisample */

#ifndef GL_EXT_rescale_normal
#define GL_EXT_rescale_normal 1
#define GL_RESCALE_NORMAL_EXT             0x803A
#endif /* GL_EXT_rescale_normal */

#ifndef GL_EXT_secondary_color
#define GL_EXT_secondary_color 1
#define GL_COLOR_SUM_EXT                  0x8458
#define GL_CURRENT_SECONDARY_COLOR_EXT    0x8459
#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
#define GL_SECONDARY_COLOR_ARRAY_EXT      0x845E
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3bEXT)(GLbyte red, GLbyte green, GLbyte blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3bvEXT)(const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3dEXT)(GLdouble red, GLdouble green, GLdouble blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3dvEXT)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3fEXT)(GLfloat red, GLfloat green, GLfloat blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3fvEXT)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3iEXT)(GLint red, GLint green, GLint blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3ivEXT)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3sEXT)(GLshort red, GLshort green, GLshort blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3svEXT)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3ubEXT)(GLubyte red, GLubyte green, GLubyte blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3ubvEXT)(const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3uiEXT)(GLuint red, GLuint green, GLuint blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3uivEXT)(const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3usEXT)(GLushort red, GLushort green, GLushort blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3usvEXT)(const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColorPointerEXT)(GLint size, GLenum type, GLsizei stride, const void *pointer);
#endif /* GL_EXT_secondary_color */

#ifndef GL_EXT_separate_shader_objects
#define GL_EXT_separate_shader_objects 1
#define GL_ACTIVE_PROGRAM_EXT             0x8B8D
typedef void (GLAPIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);
typedef void (GLAPIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);
typedef GLuint(GLAPIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);
GLLOADER_API extern void (GLAPIENTRYP glUseShaderProgramEXT)(GLenum type, GLuint program);
GLLOADER_API extern void (GLAPIENTRYP glActiveProgramEXT)(GLuint program);
GLLOADER_API extern GLuint(GLAPIENTRYP glCreateShaderProgramEXT)(GLenum type, const GLchar *string);
#endif /* GL_EXT_separate_shader_objects */

#ifndef GL_EXT_separate_specular_color
#define GL_EXT_separate_specular_color 1
#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT  0x81F8
#define GL_SINGLE_COLOR_EXT               0x81F9
#define GL_SEPARATE_SPECULAR_COLOR_EXT    0x81FA
#endif /* GL_EXT_separate_specular_color */

#ifndef GL_EXT_shader_image_load_formatted
#define GL_EXT_shader_image_load_formatted 1
#endif /* GL_EXT_shader_image_load_formatted */

#ifndef GL_EXT_shader_image_load_store
#define GL_EXT_shader_image_load_store 1
#define GL_MAX_IMAGE_UNITS_EXT            0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
#define GL_IMAGE_BINDING_NAME_EXT         0x8F3A
#define GL_IMAGE_BINDING_LEVEL_EXT        0x8F3B
#define GL_IMAGE_BINDING_LAYERED_EXT      0x8F3C
#define GL_IMAGE_BINDING_LAYER_EXT        0x8F3D
#define GL_IMAGE_BINDING_ACCESS_EXT       0x8F3E
#define GL_IMAGE_1D_EXT                   0x904C
#define GL_IMAGE_2D_EXT                   0x904D
#define GL_IMAGE_3D_EXT                   0x904E
#define GL_IMAGE_2D_RECT_EXT              0x904F
#define GL_IMAGE_CUBE_EXT                 0x9050
#define GL_IMAGE_BUFFER_EXT               0x9051
#define GL_IMAGE_1D_ARRAY_EXT             0x9052
#define GL_IMAGE_2D_ARRAY_EXT             0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY_EXT       0x9054
#define GL_IMAGE_2D_MULTISAMPLE_EXT       0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
#define GL_INT_IMAGE_1D_EXT               0x9057
#define GL_INT_IMAGE_2D_EXT               0x9058
#define GL_INT_IMAGE_3D_EXT               0x9059
#define GL_INT_IMAGE_2D_RECT_EXT          0x905A
#define GL_INT_IMAGE_CUBE_EXT             0x905B
#define GL_INT_IMAGE_BUFFER_EXT           0x905C
#define GL_INT_IMAGE_1D_ARRAY_EXT         0x905D
#define GL_INT_IMAGE_2D_ARRAY_EXT         0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT   0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT   0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
#define GL_UNSIGNED_INT_IMAGE_1D_EXT      0x9062
#define GL_UNSIGNED_INT_IMAGE_2D_EXT      0x9063
#define GL_UNSIGNED_INT_IMAGE_3D_EXT      0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT    0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT  0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
#define GL_MAX_IMAGE_SAMPLES_EXT          0x906D
#define GL_IMAGE_BINDING_FORMAT_EXT       0x906E
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT 0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT  0x00000002
#define GL_UNIFORM_BARRIER_BIT_EXT        0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT  0x00000008
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT 0x00000020
#define GL_COMMAND_BARRIER_BIT_EXT        0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT   0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT 0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT  0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT_EXT    0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT 0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT 0x00001000
#define GL_ALL_BARRIER_BITS_EXT           0xFFFFFFFF
typedef void (GLAPIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
typedef void (GLAPIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);
GLLOADER_API extern void (GLAPIENTRYP glBindImageTextureEXT)(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
GLLOADER_API extern void (GLAPIENTRYP glMemoryBarrierEXT)(GLbitfield barriers);
#endif /* GL_EXT_shader_image_load_store */

#ifndef GL_EXT_shader_integer_mix
#define GL_EXT_shader_integer_mix 1
#endif /* GL_EXT_shader_integer_mix */

#ifndef GL_EXT_shadow_funcs
#define GL_EXT_shadow_funcs 1
#endif /* GL_EXT_shadow_funcs */

#ifndef GL_EXT_shared_texture_palette
#define GL_EXT_shared_texture_palette 1
#define GL_SHARED_TEXTURE_PALETTE_EXT     0x81FB
#endif /* GL_EXT_shared_texture_palette */

#ifndef GL_EXT_sparse_texture2
#define GL_EXT_sparse_texture2 1
#endif /* GL_EXT_sparse_texture2 */

#ifndef GL_EXT_stencil_clear_tag
#define GL_EXT_stencil_clear_tag 1
#define GL_STENCIL_TAG_BITS_EXT           0x88F2
#define GL_STENCIL_CLEAR_TAG_VALUE_EXT    0x88F3
typedef void (GLAPIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClearTag);
GLLOADER_API extern void (GLAPIENTRYP glStencilClearTagEXT)(GLsizei stencilTagBits, GLuint stencilClearTag);
#endif /* GL_EXT_stencil_clear_tag */

#ifndef GL_EXT_stencil_two_side
#define GL_EXT_stencil_two_side 1
#define GL_STENCIL_TEST_TWO_SIDE_EXT      0x8910
#define GL_ACTIVE_STENCIL_FACE_EXT        0x8911
typedef void (GLAPIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);
GLLOADER_API extern void (GLAPIENTRYP glActiveStencilFaceEXT)(GLenum face);
#endif /* GL_EXT_stencil_two_side */

#ifndef GL_EXT_stencil_wrap
#define GL_EXT_stencil_wrap 1
#define GL_INCR_WRAP_EXT                  0x8507
#define GL_DECR_WRAP_EXT                  0x8508
#endif /* GL_EXT_stencil_wrap */

#ifndef GL_EXT_subtexture
#define GL_EXT_subtexture 1
typedef void (GLAPIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexSubImage1DEXT)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexSubImage2DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
#endif /* GL_EXT_subtexture */

#ifndef GL_EXT_texture
#define GL_EXT_texture 1
#define GL_ALPHA4_EXT                     0x803B
#define GL_ALPHA8_EXT                     0x803C
#define GL_ALPHA12_EXT                    0x803D
#define GL_ALPHA16_EXT                    0x803E
#define GL_LUMINANCE4_EXT                 0x803F
#define GL_LUMINANCE8_EXT                 0x8040
#define GL_LUMINANCE12_EXT                0x8041
#define GL_LUMINANCE16_EXT                0x8042
#define GL_LUMINANCE4_ALPHA4_EXT          0x8043
#define GL_LUMINANCE6_ALPHA2_EXT          0x8044
#define GL_LUMINANCE8_ALPHA8_EXT          0x8045
#define GL_LUMINANCE12_ALPHA4_EXT         0x8046
#define GL_LUMINANCE12_ALPHA12_EXT        0x8047
#define GL_LUMINANCE16_ALPHA16_EXT        0x8048
#define GL_INTENSITY_EXT                  0x8049
#define GL_INTENSITY4_EXT                 0x804A
#define GL_INTENSITY8_EXT                 0x804B
#define GL_INTENSITY12_EXT                0x804C
#define GL_INTENSITY16_EXT                0x804D
#define GL_RGB2_EXT                       0x804E
#define GL_RGB4_EXT                       0x804F
#define GL_RGB5_EXT                       0x8050
#define GL_RGB8_EXT                       0x8051
#define GL_RGB10_EXT                      0x8052
#define GL_RGB12_EXT                      0x8053
#define GL_RGB16_EXT                      0x8054
#define GL_RGBA2_EXT                      0x8055
#define GL_RGBA4_EXT                      0x8056
#define GL_RGB5_A1_EXT                    0x8057
#define GL_RGBA8_EXT                      0x8058
#define GL_RGB10_A2_EXT                   0x8059
#define GL_RGBA12_EXT                     0x805A
#define GL_RGBA16_EXT                     0x805B
#define GL_TEXTURE_RED_SIZE_EXT           0x805C
#define GL_TEXTURE_GREEN_SIZE_EXT         0x805D
#define GL_TEXTURE_BLUE_SIZE_EXT          0x805E
#define GL_TEXTURE_ALPHA_SIZE_EXT         0x805F
#define GL_TEXTURE_LUMINANCE_SIZE_EXT     0x8060
#define GL_TEXTURE_INTENSITY_SIZE_EXT     0x8061
#define GL_REPLACE_EXT                    0x8062
#define GL_PROXY_TEXTURE_1D_EXT           0x8063
#define GL_PROXY_TEXTURE_2D_EXT           0x8064
#define GL_TEXTURE_TOO_LARGE_EXT          0x8065
#endif /* GL_EXT_texture */

#ifndef GL_EXT_texture3D
#define GL_EXT_texture3D 1
#define GL_PACK_SKIP_IMAGES_EXT           0x806B
#define GL_PACK_IMAGE_HEIGHT_EXT          0x806C
#define GL_UNPACK_SKIP_IMAGES_EXT         0x806D
#define GL_UNPACK_IMAGE_HEIGHT_EXT        0x806E
#define GL_TEXTURE_3D_EXT                 0x806F
#define GL_PROXY_TEXTURE_3D_EXT           0x8070
#define GL_TEXTURE_DEPTH_EXT              0x8071
#define GL_TEXTURE_WRAP_R_EXT             0x8072
#define GL_MAX_3D_TEXTURE_SIZE_EXT        0x8073
typedef void (GLAPIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexImage3DEXT)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexSubImage3DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
#endif /* GL_EXT_texture3D */

#ifndef GL_EXT_texture_array
#define GL_EXT_texture_array 1
#define GL_TEXTURE_1D_ARRAY_EXT           0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY_EXT     0x8C19
#define GL_TEXTURE_2D_ARRAY_EXT           0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY_EXT     0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY_EXT   0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY_EXT   0x8C1D
#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT   0x88FF
#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT 0x884E
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTextureLayerEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif /* GL_EXT_texture_array */

#ifndef GL_EXT_texture_buffer_object
#define GL_EXT_texture_buffer_object 1
#define GL_TEXTURE_BUFFER_EXT             0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT    0x8C2B
#define GL_TEXTURE_BINDING_BUFFER_EXT     0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#define GL_TEXTURE_BUFFER_FORMAT_EXT      0x8C2E
typedef void (GLAPIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glTexBufferEXT)(GLenum target, GLenum internalformat, GLuint buffer);
#endif /* GL_EXT_texture_buffer_object */

#ifndef GL_EXT_texture_compression_latc
#define GL_EXT_texture_compression_latc 1
#define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70
#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71
#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72
#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73
#endif /* GL_EXT_texture_compression_latc */

#ifndef GL_EXT_texture_compression_rgtc
#define GL_EXT_texture_compression_rgtc 1
#define GL_COMPRESSED_RED_RGTC1_EXT       0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT 0x8DBC
#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT 0x8DBD
#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT 0x8DBE
#endif /* GL_EXT_texture_compression_rgtc */

#ifndef GL_EXT_texture_compression_s3tc
#define GL_EXT_texture_compression_s3tc 1
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT   0x83F0
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT  0x83F1
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT  0x83F2
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT  0x83F3
#endif /* GL_EXT_texture_compression_s3tc */

#ifndef GL_EXT_texture_cube_map
#define GL_EXT_texture_cube_map 1
#define GL_NORMAL_MAP_EXT                 0x8511
#define GL_REFLECTION_MAP_EXT             0x8512
#define GL_TEXTURE_CUBE_MAP_EXT           0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP_EXT   0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP_EXT     0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT  0x851C
#endif /* GL_EXT_texture_cube_map */

#ifndef GL_EXT_texture_env_add
#define GL_EXT_texture_env_add 1
#endif /* GL_EXT_texture_env_add */

#ifndef GL_EXT_texture_env_combine
#define GL_EXT_texture_env_combine 1
#define GL_COMBINE_EXT                    0x8570
#define GL_COMBINE_RGB_EXT                0x8571
#define GL_COMBINE_ALPHA_EXT              0x8572
#define GL_RGB_SCALE_EXT                  0x8573
#define GL_ADD_SIGNED_EXT                 0x8574
#define GL_INTERPOLATE_EXT                0x8575
#define GL_CONSTANT_EXT                   0x8576
#define GL_PRIMARY_COLOR_EXT              0x8577
#define GL_PREVIOUS_EXT                   0x8578
#define GL_SOURCE0_RGB_EXT                0x8580
#define GL_SOURCE1_RGB_EXT                0x8581
#define GL_SOURCE2_RGB_EXT                0x8582
#define GL_SOURCE0_ALPHA_EXT              0x8588
#define GL_SOURCE1_ALPHA_EXT              0x8589
#define GL_SOURCE2_ALPHA_EXT              0x858A
#define GL_OPERAND0_RGB_EXT               0x8590
#define GL_OPERAND1_RGB_EXT               0x8591
#define GL_OPERAND2_RGB_EXT               0x8592
#define GL_OPERAND0_ALPHA_EXT             0x8598
#define GL_OPERAND1_ALPHA_EXT             0x8599
#define GL_OPERAND2_ALPHA_EXT             0x859A
#endif /* GL_EXT_texture_env_combine */

#ifndef GL_EXT_texture_env_dot3
#define GL_EXT_texture_env_dot3 1
#define GL_DOT3_RGB_EXT                   0x8740
#define GL_DOT3_RGBA_EXT                  0x8741
#endif /* GL_EXT_texture_env_dot3 */

#ifndef GL_EXT_texture_filter_anisotropic
#define GL_EXT_texture_filter_anisotropic 1
#define GL_TEXTURE_MAX_ANISOTROPY_EXT     0x84FE
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#endif /* GL_EXT_texture_filter_anisotropic */

#ifndef GL_EXT_texture_filter_minmax
#define GL_EXT_texture_filter_minmax 1
#endif /* GL_EXT_texture_filter_minmax */

#ifndef GL_EXT_texture_integer
#define GL_EXT_texture_integer 1
#define GL_RGBA32UI_EXT                   0x8D70
#define GL_RGB32UI_EXT                    0x8D71
#define GL_ALPHA32UI_EXT                  0x8D72
#define GL_INTENSITY32UI_EXT              0x8D73
#define GL_LUMINANCE32UI_EXT              0x8D74
#define GL_LUMINANCE_ALPHA32UI_EXT        0x8D75
#define GL_RGBA16UI_EXT                   0x8D76
#define GL_RGB16UI_EXT                    0x8D77
#define GL_ALPHA16UI_EXT                  0x8D78
#define GL_INTENSITY16UI_EXT              0x8D79
#define GL_LUMINANCE16UI_EXT              0x8D7A
#define GL_LUMINANCE_ALPHA16UI_EXT        0x8D7B
#define GL_RGBA8UI_EXT                    0x8D7C
#define GL_RGB8UI_EXT                     0x8D7D
#define GL_ALPHA8UI_EXT                   0x8D7E
#define GL_INTENSITY8UI_EXT               0x8D7F
#define GL_LUMINANCE8UI_EXT               0x8D80
#define GL_LUMINANCE_ALPHA8UI_EXT         0x8D81
#define GL_RGBA32I_EXT                    0x8D82
#define GL_RGB32I_EXT                     0x8D83
#define GL_ALPHA32I_EXT                   0x8D84
#define GL_INTENSITY32I_EXT               0x8D85
#define GL_LUMINANCE32I_EXT               0x8D86
#define GL_LUMINANCE_ALPHA32I_EXT         0x8D87
#define GL_RGBA16I_EXT                    0x8D88
#define GL_RGB16I_EXT                     0x8D89
#define GL_ALPHA16I_EXT                   0x8D8A
#define GL_INTENSITY16I_EXT               0x8D8B
#define GL_LUMINANCE16I_EXT               0x8D8C
#define GL_LUMINANCE_ALPHA16I_EXT         0x8D8D
#define GL_RGBA8I_EXT                     0x8D8E
#define GL_RGB8I_EXT                      0x8D8F
#define GL_ALPHA8I_EXT                    0x8D90
#define GL_INTENSITY8I_EXT                0x8D91
#define GL_LUMINANCE8I_EXT                0x8D92
#define GL_LUMINANCE_ALPHA8I_EXT          0x8D93
#define GL_RED_INTEGER_EXT                0x8D94
#define GL_GREEN_INTEGER_EXT              0x8D95
#define GL_BLUE_INTEGER_EXT               0x8D96
#define GL_ALPHA_INTEGER_EXT              0x8D97
#define GL_RGB_INTEGER_EXT                0x8D98
#define GL_RGBA_INTEGER_EXT               0x8D99
#define GL_BGR_INTEGER_EXT                0x8D9A
#define GL_BGRA_INTEGER_EXT               0x8D9B
#define GL_LUMINANCE_INTEGER_EXT          0x8D9C
#define GL_LUMINANCE_ALPHA_INTEGER_EXT    0x8D9D
#define GL_RGBA_INTEGER_MODE_EXT          0x8D9E
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
typedef void (GLAPIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
typedef void (GLAPIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterIivEXT)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glTexParameterIuivEXT)(GLenum target, GLenum pname, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameterIivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetTexParameterIuivEXT)(GLenum target, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glClearColorIiEXT)(GLint red, GLint green, GLint blue, GLint alpha);
GLLOADER_API extern void (GLAPIENTRYP glClearColorIuiEXT)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif /* GL_EXT_texture_integer */

#ifndef GL_EXT_texture_lod_bias
#define GL_EXT_texture_lod_bias 1
#define GL_MAX_TEXTURE_LOD_BIAS_EXT       0x84FD
#define GL_TEXTURE_FILTER_CONTROL_EXT     0x8500
#define GL_TEXTURE_LOD_BIAS_EXT           0x8501
#endif /* GL_EXT_texture_lod_bias */

#ifndef GL_EXT_texture_mirror_clamp
#define GL_EXT_texture_mirror_clamp 1
#define GL_MIRROR_CLAMP_EXT               0x8742
#define GL_MIRROR_CLAMP_TO_EDGE_EXT       0x8743
#define GL_MIRROR_CLAMP_TO_BORDER_EXT     0x8912
#endif /* GL_EXT_texture_mirror_clamp */

#ifndef GL_EXT_texture_object
#define GL_EXT_texture_object 1
#define GL_TEXTURE_PRIORITY_EXT           0x8066
#define GL_TEXTURE_RESIDENT_EXT           0x8067
#define GL_TEXTURE_1D_BINDING_EXT         0x8068
#define GL_TEXTURE_2D_BINDING_EXT         0x8069
#define GL_TEXTURE_3D_BINDING_EXT         0x806A
typedef GLboolean(GLAPIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);
typedef void (GLAPIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);
typedef void (GLAPIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);
typedef void (GLAPIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);
typedef GLboolean(GLAPIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);
typedef void (GLAPIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);
GLLOADER_API extern GLboolean(GLAPIENTRYP glAreTexturesResidentEXT)(GLsizei n, const GLuint *textures, GLboolean *residences);
GLLOADER_API extern void (GLAPIENTRYP glBindTextureEXT)(GLenum target, GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glDeleteTexturesEXT)(GLsizei n, const GLuint *textures);
GLLOADER_API extern void (GLAPIENTRYP glGenTexturesEXT)(GLsizei n, GLuint *textures);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsTextureEXT)(GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glPrioritizeTexturesEXT)(GLsizei n, const GLuint *textures, const GLclampf *priorities);
#endif /* GL_EXT_texture_object */

#ifndef GL_EXT_texture_perturb_normal
#define GL_EXT_texture_perturb_normal 1
#define GL_PERTURB_EXT                    0x85AE
#define GL_TEXTURE_NORMAL_EXT             0x85AF
typedef void (GLAPIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glTextureNormalEXT)(GLenum mode);
#endif /* GL_EXT_texture_perturb_normal */

#ifndef GL_EXT_texture_sRGB
#define GL_EXT_texture_sRGB 1
#define GL_SRGB_EXT                       0x8C40
#define GL_SRGB8_EXT                      0x8C41
#define GL_SRGB_ALPHA_EXT                 0x8C42
#define GL_SRGB8_ALPHA8_EXT               0x8C43
#define GL_SLUMINANCE_ALPHA_EXT           0x8C44
#define GL_SLUMINANCE8_ALPHA8_EXT         0x8C45
#define GL_SLUMINANCE_EXT                 0x8C46
#define GL_SLUMINANCE8_EXT                0x8C47
#define GL_COMPRESSED_SRGB_EXT            0x8C48
#define GL_COMPRESSED_SRGB_ALPHA_EXT      0x8C49
#define GL_COMPRESSED_SLUMINANCE_EXT      0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT  0x8C4C
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
#endif /* GL_EXT_texture_sRGB */

#ifndef GL_EXT_texture_sRGB_decode
#define GL_EXT_texture_sRGB_decode 1
#define GL_TEXTURE_SRGB_DECODE_EXT        0x8A48
#define GL_DECODE_EXT                     0x8A49
#define GL_SKIP_DECODE_EXT                0x8A4A
#endif /* GL_EXT_texture_sRGB_decode */

#ifndef GL_EXT_texture_shared_exponent
#define GL_EXT_texture_shared_exponent 1
#define GL_RGB9_E5_EXT                    0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT   0x8C3E
#define GL_TEXTURE_SHARED_SIZE_EXT        0x8C3F
#endif /* GL_EXT_texture_shared_exponent */

#ifndef GL_EXT_texture_snorm
#define GL_EXT_texture_snorm 1
#define GL_ALPHA_SNORM                    0x9010
#define GL_LUMINANCE_SNORM                0x9011
#define GL_LUMINANCE_ALPHA_SNORM          0x9012
#define GL_INTENSITY_SNORM                0x9013
#define GL_ALPHA8_SNORM                   0x9014
#define GL_LUMINANCE8_SNORM               0x9015
#define GL_LUMINANCE8_ALPHA8_SNORM        0x9016
#define GL_INTENSITY8_SNORM               0x9017
#define GL_ALPHA16_SNORM                  0x9018
#define GL_LUMINANCE16_SNORM              0x9019
#define GL_LUMINANCE16_ALPHA16_SNORM      0x901A
#define GL_INTENSITY16_SNORM              0x901B
#define GL_RED_SNORM                      0x8F90
#define GL_RG_SNORM                       0x8F91
#define GL_RGB_SNORM                      0x8F92
#define GL_RGBA_SNORM                     0x8F93
#endif /* GL_EXT_texture_snorm */

#ifndef GL_EXT_texture_swizzle
#define GL_EXT_texture_swizzle 1
#define GL_TEXTURE_SWIZZLE_R_EXT          0x8E42
#define GL_TEXTURE_SWIZZLE_G_EXT          0x8E43
#define GL_TEXTURE_SWIZZLE_B_EXT          0x8E44
#define GL_TEXTURE_SWIZZLE_A_EXT          0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA_EXT       0x8E46
#endif /* GL_EXT_texture_swizzle */

#ifndef GL_EXT_timer_query
#define GL_EXT_timer_query 1
#define GL_TIME_ELAPSED_EXT               0x88BF
typedef void (GLAPIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *params);
typedef void (GLAPIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryObjecti64vEXT)(GLuint id, GLenum pname, GLint64 *params);
GLLOADER_API extern void (GLAPIENTRYP glGetQueryObjectui64vEXT)(GLuint id, GLenum pname, GLuint64 *params);
#endif /* GL_EXT_timer_query */

#ifndef GL_EXT_transform_feedback
#define GL_EXT_transform_feedback 1
#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT  0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#define GL_INTERLEAVED_ATTRIBS_EXT        0x8C8C
#define GL_SEPARATE_ATTRIBS_EXT           0x8C8D
#define GL_PRIMITIVES_GENERATED_EXT       0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#define GL_RASTERIZER_DISCARD_EXT         0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
typedef void (GLAPIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);
typedef void (GLAPIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);
typedef void (GLAPIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
typedef void (GLAPIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glBeginTransformFeedbackEXT)(GLenum primitiveMode);
GLLOADER_API extern void (GLAPIENTRYP glEndTransformFeedbackEXT)(void);
GLLOADER_API extern void (GLAPIENTRYP glBindBufferRangeEXT)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glBindBufferOffsetEXT)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glBindBufferBaseEXT)(GLenum target, GLuint index, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glTransformFeedbackVaryingsEXT)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
GLLOADER_API extern void (GLAPIENTRYP glGetTransformFeedbackVaryingEXT)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif /* GL_EXT_transform_feedback */

#ifndef GL_EXT_vertex_array
#define GL_EXT_vertex_array 1
#define GL_VERTEX_ARRAY_EXT               0x8074
#define GL_NORMAL_ARRAY_EXT               0x8075
#define GL_COLOR_ARRAY_EXT                0x8076
#define GL_INDEX_ARRAY_EXT                0x8077
#define GL_TEXTURE_COORD_ARRAY_EXT        0x8078
#define GL_EDGE_FLAG_ARRAY_EXT            0x8079
#define GL_VERTEX_ARRAY_SIZE_EXT          0x807A
#define GL_VERTEX_ARRAY_TYPE_EXT          0x807B
#define GL_VERTEX_ARRAY_STRIDE_EXT        0x807C
#define GL_VERTEX_ARRAY_COUNT_EXT         0x807D
#define GL_NORMAL_ARRAY_TYPE_EXT          0x807E
#define GL_NORMAL_ARRAY_STRIDE_EXT        0x807F
#define GL_NORMAL_ARRAY_COUNT_EXT         0x8080
#define GL_COLOR_ARRAY_SIZE_EXT           0x8081
#define GL_COLOR_ARRAY_TYPE_EXT           0x8082
#define GL_COLOR_ARRAY_STRIDE_EXT         0x8083
#define GL_COLOR_ARRAY_COUNT_EXT          0x8084
#define GL_INDEX_ARRAY_TYPE_EXT           0x8085
#define GL_INDEX_ARRAY_STRIDE_EXT         0x8086
#define GL_INDEX_ARRAY_COUNT_EXT          0x8087
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT   0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT   0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT  0x808B
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT     0x808C
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT      0x808D
#define GL_VERTEX_ARRAY_POINTER_EXT       0x808E
#define GL_NORMAL_ARRAY_POINTER_EXT       0x808F
#define GL_COLOR_ARRAY_POINTER_EXT        0x8090
#define GL_INDEX_ARRAY_POINTER_EXT        0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT    0x8093
typedef void (GLAPIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);
typedef void (GLAPIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
typedef void (GLAPIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (GLAPIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);
typedef void (GLAPIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, void **params);
typedef void (GLAPIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);
typedef void (GLAPIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);
typedef void (GLAPIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
typedef void (GLAPIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glArrayElementEXT)(GLint i);
GLLOADER_API extern void (GLAPIENTRYP glColorPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glDrawArraysEXT)(GLenum mode, GLint first, GLsizei count);
GLLOADER_API extern void (GLAPIENTRYP glEdgeFlagPointerEXT)(GLsizei stride, GLsizei count, const GLboolean *pointer);
GLLOADER_API extern void (GLAPIENTRYP glGetPointervEXT)(GLenum pname, void **params);
GLLOADER_API extern void (GLAPIENTRYP glIndexPointerEXT)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glNormalPointerEXT)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glVertexPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
#endif /* GL_EXT_vertex_array */

#ifndef GL_EXT_vertex_array_bgra
#define GL_EXT_vertex_array_bgra 1
#endif /* GL_EXT_vertex_array_bgra */

#ifndef GL_EXT_vertex_attrib_64bit
#define GL_EXT_vertex_attrib_64bit 1
#define GL_DOUBLE_VEC2_EXT                0x8FFC
#define GL_DOUBLE_VEC3_EXT                0x8FFD
#define GL_DOUBLE_VEC4_EXT                0x8FFE
#define GL_DOUBLE_MAT2_EXT                0x8F46
#define GL_DOUBLE_MAT3_EXT                0x8F47
#define GL_DOUBLE_MAT4_EXT                0x8F48
#define GL_DOUBLE_MAT2x3_EXT              0x8F49
#define GL_DOUBLE_MAT2x4_EXT              0x8F4A
#define GL_DOUBLE_MAT3x2_EXT              0x8F4B
#define GL_DOUBLE_MAT3x4_EXT              0x8F4C
#define GL_DOUBLE_MAT4x2_EXT              0x8F4D
#define GL_DOUBLE_MAT4x3_EXT              0x8F4E
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1dEXT)(GLuint index, GLdouble x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL2dEXT)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL3dEXT)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL4dEXT)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1dvEXT)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL2dvEXT)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL3dvEXT)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL4dvEXT)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribLPointerEXT)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribLdvEXT)(GLuint index, GLenum pname, GLdouble *params);
#endif /* GL_EXT_vertex_attrib_64bit */

#ifndef GL_EXT_vertex_shader
#define GL_EXT_vertex_shader 1
#define GL_VERTEX_SHADER_EXT              0x8780
#define GL_VERTEX_SHADER_BINDING_EXT      0x8781
#define GL_OP_INDEX_EXT                   0x8782
#define GL_OP_NEGATE_EXT                  0x8783
#define GL_OP_DOT3_EXT                    0x8784
#define GL_OP_DOT4_EXT                    0x8785
#define GL_OP_MUL_EXT                     0x8786
#define GL_OP_ADD_EXT                     0x8787
#define GL_OP_MADD_EXT                    0x8788
#define GL_OP_FRAC_EXT                    0x8789
#define GL_OP_MAX_EXT                     0x878A
#define GL_OP_MIN_EXT                     0x878B
#define GL_OP_SET_GE_EXT                  0x878C
#define GL_OP_SET_LT_EXT                  0x878D
#define GL_OP_CLAMP_EXT                   0x878E
#define GL_OP_FLOOR_EXT                   0x878F
#define GL_OP_ROUND_EXT                   0x8790
#define GL_OP_EXP_BASE_2_EXT              0x8791
#define GL_OP_LOG_BASE_2_EXT              0x8792
#define GL_OP_POWER_EXT                   0x8793
#define GL_OP_RECIP_EXT                   0x8794
#define GL_OP_RECIP_SQRT_EXT              0x8795
#define GL_OP_SUB_EXT                     0x8796
#define GL_OP_CROSS_PRODUCT_EXT           0x8797
#define GL_OP_MULTIPLY_MATRIX_EXT         0x8798
#define GL_OP_MOV_EXT                     0x8799
#define GL_OUTPUT_VERTEX_EXT              0x879A
#define GL_OUTPUT_COLOR0_EXT              0x879B
#define GL_OUTPUT_COLOR1_EXT              0x879C
#define GL_OUTPUT_TEXTURE_COORD0_EXT      0x879D
#define GL_OUTPUT_TEXTURE_COORD1_EXT      0x879E
#define GL_OUTPUT_TEXTURE_COORD2_EXT      0x879F
#define GL_OUTPUT_TEXTURE_COORD3_EXT      0x87A0
#define GL_OUTPUT_TEXTURE_COORD4_EXT      0x87A1
#define GL_OUTPUT_TEXTURE_COORD5_EXT      0x87A2
#define GL_OUTPUT_TEXTURE_COORD6_EXT      0x87A3
#define GL_OUTPUT_TEXTURE_COORD7_EXT      0x87A4
#define GL_OUTPUT_TEXTURE_COORD8_EXT      0x87A5
#define GL_OUTPUT_TEXTURE_COORD9_EXT      0x87A6
#define GL_OUTPUT_TEXTURE_COORD10_EXT     0x87A7
#define GL_OUTPUT_TEXTURE_COORD11_EXT     0x87A8
#define GL_OUTPUT_TEXTURE_COORD12_EXT     0x87A9
#define GL_OUTPUT_TEXTURE_COORD13_EXT     0x87AA
#define GL_OUTPUT_TEXTURE_COORD14_EXT     0x87AB
#define GL_OUTPUT_TEXTURE_COORD15_EXT     0x87AC
#define GL_OUTPUT_TEXTURE_COORD16_EXT     0x87AD
#define GL_OUTPUT_TEXTURE_COORD17_EXT     0x87AE
#define GL_OUTPUT_TEXTURE_COORD18_EXT     0x87AF
#define GL_OUTPUT_TEXTURE_COORD19_EXT     0x87B0
#define GL_OUTPUT_TEXTURE_COORD20_EXT     0x87B1
#define GL_OUTPUT_TEXTURE_COORD21_EXT     0x87B2
#define GL_OUTPUT_TEXTURE_COORD22_EXT     0x87B3
#define GL_OUTPUT_TEXTURE_COORD23_EXT     0x87B4
#define GL_OUTPUT_TEXTURE_COORD24_EXT     0x87B5
#define GL_OUTPUT_TEXTURE_COORD25_EXT     0x87B6
#define GL_OUTPUT_TEXTURE_COORD26_EXT     0x87B7
#define GL_OUTPUT_TEXTURE_COORD27_EXT     0x87B8
#define GL_OUTPUT_TEXTURE_COORD28_EXT     0x87B9
#define GL_OUTPUT_TEXTURE_COORD29_EXT     0x87BA
#define GL_OUTPUT_TEXTURE_COORD30_EXT     0x87BB
#define GL_OUTPUT_TEXTURE_COORD31_EXT     0x87BC
#define GL_OUTPUT_FOG_EXT                 0x87BD
#define GL_SCALAR_EXT                     0x87BE
#define GL_VECTOR_EXT                     0x87BF
#define GL_MATRIX_EXT                     0x87C0
#define GL_VARIANT_EXT                    0x87C1
#define GL_INVARIANT_EXT                  0x87C2
#define GL_LOCAL_CONSTANT_EXT             0x87C3
#define GL_LOCAL_EXT                      0x87C4
#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
#define GL_MAX_VERTEX_SHADER_LOCALS_EXT   0x87C9
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT 0x87CD
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
#define GL_VERTEX_SHADER_VARIANTS_EXT     0x87D0
#define GL_VERTEX_SHADER_INVARIANTS_EXT   0x87D1
#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
#define GL_VERTEX_SHADER_LOCALS_EXT       0x87D3
#define GL_VERTEX_SHADER_OPTIMIZED_EXT    0x87D4
#define GL_X_EXT                          0x87D5
#define GL_Y_EXT                          0x87D6
#define GL_Z_EXT                          0x87D7
#define GL_W_EXT                          0x87D8
#define GL_NEGATIVE_X_EXT                 0x87D9
#define GL_NEGATIVE_Y_EXT                 0x87DA
#define GL_NEGATIVE_Z_EXT                 0x87DB
#define GL_NEGATIVE_W_EXT                 0x87DC
#define GL_ZERO_EXT                       0x87DD
#define GL_ONE_EXT                        0x87DE
#define GL_NEGATIVE_ONE_EXT               0x87DF
#define GL_NORMALIZED_RANGE_EXT           0x87E0
#define GL_FULL_RANGE_EXT                 0x87E1
#define GL_CURRENT_VERTEX_EXT             0x87E2
#define GL_MVP_MATRIX_EXT                 0x87E3
#define GL_VARIANT_VALUE_EXT              0x87E4
#define GL_VARIANT_DATATYPE_EXT           0x87E5
#define GL_VARIANT_ARRAY_STRIDE_EXT       0x87E6
#define GL_VARIANT_ARRAY_TYPE_EXT         0x87E7
#define GL_VARIANT_ARRAY_EXT              0x87E8
#define GL_VARIANT_ARRAY_POINTER_EXT      0x87E9
#define GL_INVARIANT_VALUE_EXT            0x87EA
#define GL_INVARIANT_DATATYPE_EXT         0x87EB
#define GL_LOCAL_CONSTANT_VALUE_EXT       0x87EC
#define GL_LOCAL_CONSTANT_DATATYPE_EXT    0x87ED
typedef void (GLAPIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);
typedef void (GLAPIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);
typedef void (GLAPIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);
typedef GLuint(GLAPIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);
typedef void (GLAPIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);
typedef void (GLAPIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
typedef void (GLAPIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
typedef void (GLAPIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (GLAPIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (GLAPIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
typedef void (GLAPIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
typedef GLuint(GLAPIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
typedef void (GLAPIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);
typedef void (GLAPIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr);
typedef void (GLAPIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);
typedef void (GLAPIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);
typedef void (GLAPIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);
typedef void (GLAPIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);
typedef void (GLAPIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);
typedef void (GLAPIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);
typedef void (GLAPIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);
typedef void (GLAPIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);
typedef void (GLAPIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const void *addr);
typedef void (GLAPIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
typedef GLuint(GLAPIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);
typedef GLuint(GLAPIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);
typedef GLuint(GLAPIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);
typedef GLuint(GLAPIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);
typedef GLuint(GLAPIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);
typedef GLboolean(GLAPIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);
typedef void (GLAPIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (GLAPIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (GLAPIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
typedef void (GLAPIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data);
typedef void (GLAPIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (GLAPIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (GLAPIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
typedef void (GLAPIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (GLAPIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (GLAPIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
GLLOADER_API extern void (GLAPIENTRYP glBeginVertexShaderEXT)(void);
GLLOADER_API extern void (GLAPIENTRYP glEndVertexShaderEXT)(void);
GLLOADER_API extern void (GLAPIENTRYP glBindVertexShaderEXT)(GLuint id);
GLLOADER_API extern GLuint(GLAPIENTRYP glGenVertexShadersEXT)(GLuint range);
GLLOADER_API extern void (GLAPIENTRYP glDeleteVertexShaderEXT)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glShaderOp1EXT)(GLenum op, GLuint res, GLuint arg1);
GLLOADER_API extern void (GLAPIENTRYP glShaderOp2EXT)(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
GLLOADER_API extern void (GLAPIENTRYP glShaderOp3EXT)(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
GLLOADER_API extern void (GLAPIENTRYP glSwizzleEXT)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
GLLOADER_API extern void (GLAPIENTRYP glWriteMaskEXT)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
GLLOADER_API extern void (GLAPIENTRYP glInsertComponentEXT)(GLuint res, GLuint src, GLuint num);
GLLOADER_API extern void (GLAPIENTRYP glExtractComponentEXT)(GLuint res, GLuint src, GLuint num);
GLLOADER_API extern GLuint(GLAPIENTRYP glGenSymbolsEXT)(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
GLLOADER_API extern void (GLAPIENTRYP glSetInvariantEXT)(GLuint id, GLenum type, const void *addr);
GLLOADER_API extern void (GLAPIENTRYP glSetLocalConstantEXT)(GLuint id, GLenum type, const void *addr);
GLLOADER_API extern void (GLAPIENTRYP glVariantbvEXT)(GLuint id, const GLbyte *addr);
GLLOADER_API extern void (GLAPIENTRYP glVariantsvEXT)(GLuint id, const GLshort *addr);
GLLOADER_API extern void (GLAPIENTRYP glVariantivEXT)(GLuint id, const GLint *addr);
GLLOADER_API extern void (GLAPIENTRYP glVariantfvEXT)(GLuint id, const GLfloat *addr);
GLLOADER_API extern void (GLAPIENTRYP glVariantdvEXT)(GLuint id, const GLdouble *addr);
GLLOADER_API extern void (GLAPIENTRYP glVariantubvEXT)(GLuint id, const GLubyte *addr);
GLLOADER_API extern void (GLAPIENTRYP glVariantusvEXT)(GLuint id, const GLushort *addr);
GLLOADER_API extern void (GLAPIENTRYP glVariantuivEXT)(GLuint id, const GLuint *addr);
GLLOADER_API extern void (GLAPIENTRYP glVariantPointerEXT)(GLuint id, GLenum type, GLuint stride, const void *addr);
GLLOADER_API extern void (GLAPIENTRYP glEnableVariantClientStateEXT)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glDisableVariantClientStateEXT)(GLuint id);
GLLOADER_API extern GLuint(GLAPIENTRYP glBindLightParameterEXT)(GLenum light, GLenum value);
GLLOADER_API extern GLuint(GLAPIENTRYP glBindMaterialParameterEXT)(GLenum face, GLenum value);
GLLOADER_API extern GLuint(GLAPIENTRYP glBindTexGenParameterEXT)(GLenum unit, GLenum coord, GLenum value);
GLLOADER_API extern GLuint(GLAPIENTRYP glBindTextureUnitParameterEXT)(GLenum unit, GLenum value);
GLLOADER_API extern GLuint(GLAPIENTRYP glBindParameterEXT)(GLenum value);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsVariantEnabledEXT)(GLuint id, GLenum cap);
GLLOADER_API extern void (GLAPIENTRYP glGetVariantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
GLLOADER_API extern void (GLAPIENTRYP glGetVariantIntegervEXT)(GLuint id, GLenum value, GLint *data);
GLLOADER_API extern void (GLAPIENTRYP glGetVariantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
GLLOADER_API extern void (GLAPIENTRYP glGetVariantPointervEXT)(GLuint id, GLenum value, void **data);
GLLOADER_API extern void (GLAPIENTRYP glGetInvariantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
GLLOADER_API extern void (GLAPIENTRYP glGetInvariantIntegervEXT)(GLuint id, GLenum value, GLint *data);
GLLOADER_API extern void (GLAPIENTRYP glGetInvariantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
GLLOADER_API extern void (GLAPIENTRYP glGetLocalConstantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
GLLOADER_API extern void (GLAPIENTRYP glGetLocalConstantIntegervEXT)(GLuint id, GLenum value, GLint *data);
GLLOADER_API extern void (GLAPIENTRYP glGetLocalConstantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
#endif /* GL_EXT_vertex_shader */

#ifndef GL_EXT_vertex_weighting
#define GL_EXT_vertex_weighting 1
#define GL_MODELVIEW0_STACK_DEPTH_EXT     0x0BA3
#define GL_MODELVIEW1_STACK_DEPTH_EXT     0x8502
#define GL_MODELVIEW0_MATRIX_EXT          0x0BA6
#define GL_MODELVIEW1_MATRIX_EXT          0x8506
#define GL_VERTEX_WEIGHTING_EXT           0x8509
#define GL_MODELVIEW0_EXT                 0x1700
#define GL_MODELVIEW1_EXT                 0x850A
#define GL_CURRENT_VERTEX_WEIGHT_EXT      0x850B
#define GL_VERTEX_WEIGHT_ARRAY_EXT        0x850C
#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT   0x850D
#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT   0x850E
#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
typedef void (GLAPIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);
typedef void (GLAPIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);
typedef void (GLAPIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glVertexWeightfEXT)(GLfloat weight);
GLLOADER_API extern void (GLAPIENTRYP glVertexWeightfvEXT)(const GLfloat *weight);
GLLOADER_API extern void (GLAPIENTRYP glVertexWeightPointerEXT)(GLint size, GLenum type, GLsizei stride, const void *pointer);
#endif /* GL_EXT_vertex_weighting */

#ifndef GL_EXT_x11_sync_object
#define GL_EXT_x11_sync_object 1
#define GL_SYNC_X11_FENCE_EXT             0x90E1
typedef GLsync(GLAPIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
GLLOADER_API extern GLsync(GLAPIENTRYP glImportSyncEXT)(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
#endif /* GL_EXT_x11_sync_object */

#ifndef GL_GREMEDY_frame_terminator
#define GL_GREMEDY_frame_terminator 1
typedef void (GLAPIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glFrameTerminatorGREMEDY)(void);
#endif /* GL_GREMEDY_frame_terminator */

#ifndef GL_GREMEDY_string_marker
#define GL_GREMEDY_string_marker 1
typedef void (GLAPIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);
GLLOADER_API extern void (GLAPIENTRYP glStringMarkerGREMEDY)(GLsizei len, const void *string);
#endif /* GL_GREMEDY_string_marker */

#ifndef GL_HP_convolution_border_modes
#define GL_HP_convolution_border_modes 1
#define GL_IGNORE_BORDER_HP               0x8150
#define GL_CONSTANT_BORDER_HP             0x8151
#define GL_REPLICATE_BORDER_HP            0x8153
#define GL_CONVOLUTION_BORDER_COLOR_HP    0x8154
#endif /* GL_HP_convolution_border_modes */

#ifndef GL_HP_image_transform
#define GL_HP_image_transform 1
#define GL_IMAGE_SCALE_X_HP               0x8155
#define GL_IMAGE_SCALE_Y_HP               0x8156
#define GL_IMAGE_TRANSLATE_X_HP           0x8157
#define GL_IMAGE_TRANSLATE_Y_HP           0x8158
#define GL_IMAGE_ROTATE_ANGLE_HP          0x8159
#define GL_IMAGE_ROTATE_ORIGIN_X_HP       0x815A
#define GL_IMAGE_ROTATE_ORIGIN_Y_HP       0x815B
#define GL_IMAGE_MAG_FILTER_HP            0x815C
#define GL_IMAGE_MIN_FILTER_HP            0x815D
#define GL_IMAGE_CUBIC_WEIGHT_HP          0x815E
#define GL_CUBIC_HP                       0x815F
#define GL_AVERAGE_HP                     0x8160
#define GL_IMAGE_TRANSFORM_2D_HP          0x8161
#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
typedef void (GLAPIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glImageTransformParameteriHP)(GLenum target, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glImageTransformParameterfHP)(GLenum target, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glImageTransformParameterivHP)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glImageTransformParameterfvHP)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetImageTransformParameterivHP)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetImageTransformParameterfvHP)(GLenum target, GLenum pname, GLfloat *params);
#endif /* GL_HP_image_transform */

#ifndef GL_HP_occlusion_test
#define GL_HP_occlusion_test 1
#define GL_OCCLUSION_TEST_HP              0x8165
#define GL_OCCLUSION_TEST_RESULT_HP       0x8166
#endif /* GL_HP_occlusion_test */

#ifndef GL_HP_texture_lighting
#define GL_HP_texture_lighting 1
#define GL_TEXTURE_LIGHTING_MODE_HP       0x8167
#define GL_TEXTURE_POST_SPECULAR_HP       0x8168
#define GL_TEXTURE_PRE_SPECULAR_HP        0x8169
#endif /* GL_HP_texture_lighting */

#ifndef GL_IBM_cull_vertex
#define GL_IBM_cull_vertex 1
#define GL_CULL_VERTEX_IBM                103050
#endif /* GL_IBM_cull_vertex */

#ifndef GL_IBM_multimode_draw_arrays
#define GL_IBM_multimode_draw_arrays 1
typedef void (GLAPIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
typedef void (GLAPIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);
GLLOADER_API extern void (GLAPIENTRYP glMultiModeDrawArraysIBM)(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
GLLOADER_API extern void (GLAPIENTRYP glMultiModeDrawElementsIBM)(const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);
#endif /* GL_IBM_multimode_draw_arrays */

#ifndef GL_IBM_rasterpos_clip
#define GL_IBM_rasterpos_clip 1
#define GL_RASTER_POSITION_UNCLIPPED_IBM  0x19262
#endif /* GL_IBM_rasterpos_clip */

#ifndef GL_IBM_static_data
#define GL_IBM_static_data 1
#define GL_ALL_STATIC_DATA_IBM            103060
#define GL_STATIC_VERTEX_ARRAY_IBM        103061
typedef void (GLAPIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) (GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glFlushStaticDataIBM)(GLenum target);
#endif /* GL_IBM_static_data */

#ifndef GL_IBM_texture_mirrored_repeat
#define GL_IBM_texture_mirrored_repeat 1
#define GL_MIRRORED_REPEAT_IBM            0x8370
#endif /* GL_IBM_texture_mirrored_repeat */

#ifndef GL_IBM_vertex_array_lists
#define GL_IBM_vertex_array_lists 1
#define GL_VERTEX_ARRAY_LIST_IBM          103070
#define GL_NORMAL_ARRAY_LIST_IBM          103071
#define GL_COLOR_ARRAY_LIST_IBM           103072
#define GL_INDEX_ARRAY_LIST_IBM           103073
#define GL_TEXTURE_COORD_ARRAY_LIST_IBM   103074
#define GL_EDGE_FLAG_ARRAY_LIST_IBM       103075
#define GL_FOG_COORDINATE_ARRAY_LIST_IBM  103076
#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM   103080
#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM   103081
#define GL_COLOR_ARRAY_LIST_STRIDE_IBM    103082
#define GL_INDEX_ARRAY_LIST_STRIDE_IBM    103083
#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
typedef void (GLAPIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (GLAPIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean **pointer, GLint ptrstride);
typedef void (GLAPIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (GLAPIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (GLAPIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (GLAPIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (GLAPIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API extern void (GLAPIENTRYP glColorPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColorPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API extern void (GLAPIENTRYP glEdgeFlagPointerListIBM)(GLint stride, const GLboolean **pointer, GLint ptrstride);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API extern void (GLAPIENTRYP glIndexPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API extern void (GLAPIENTRYP glNormalPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API extern void (GLAPIENTRYP glVertexPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
#endif /* GL_IBM_vertex_array_lists */

#ifndef GL_INGR_blend_func_separate
#define GL_INGR_blend_func_separate 1
typedef void (GLAPIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLLOADER_API extern void (GLAPIENTRYP glBlendFuncSeparateINGR)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
#endif /* GL_INGR_blend_func_separate */

#ifndef GL_INGR_color_clamp
#define GL_INGR_color_clamp 1
#define GL_RED_MIN_CLAMP_INGR             0x8560
#define GL_GREEN_MIN_CLAMP_INGR           0x8561
#define GL_BLUE_MIN_CLAMP_INGR            0x8562
#define GL_ALPHA_MIN_CLAMP_INGR           0x8563
#define GL_RED_MAX_CLAMP_INGR             0x8564
#define GL_GREEN_MAX_CLAMP_INGR           0x8565
#define GL_BLUE_MAX_CLAMP_INGR            0x8566
#define GL_ALPHA_MAX_CLAMP_INGR           0x8567
#endif /* GL_INGR_color_clamp */

#ifndef GL_INGR_interlace_read
#define GL_INGR_interlace_read 1
#define GL_INTERLACE_READ_INGR            0x8568
#endif /* GL_INGR_interlace_read */

#ifndef GL_INTEL_fragment_shader_ordering
#define GL_INTEL_fragment_shader_ordering 1
#endif /* GL_INTEL_fragment_shader_ordering */

#ifndef GL_INTEL_framebuffer_CMAA
#define GL_INTEL_framebuffer_CMAA 1
typedef void (GLAPIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glApplyFramebufferAttachmentCMAAINTEL)(void);
#endif /* GL_INTEL_framebuffer_CMAA */

#ifndef GL_INTEL_map_texture
#define GL_INTEL_map_texture 1
#define GL_TEXTURE_MEMORY_LAYOUT_INTEL    0x83FF
#define GL_LAYOUT_DEFAULT_INTEL           0
#define GL_LAYOUT_LINEAR_INTEL            1
#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL 2
typedef void (GLAPIENTRYP PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);
typedef void (GLAPIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);
typedef void *(GLAPIENTRYP PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);
GLLOADER_API extern void (GLAPIENTRYP glSyncTextureINTEL)(GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glUnmapTexture2DINTEL)(GLuint texture, GLint level);
GLLOADER_API extern void *(GLAPIENTRYP glMapTexture2DINTEL)(GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);
#endif /* GL_INTEL_map_texture */

#ifndef GL_INTEL_parallel_arrays
#define GL_INTEL_parallel_arrays 1
#define GL_PARALLEL_ARRAYS_INTEL          0x83F4
#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
typedef void (GLAPIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);
typedef void (GLAPIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void **pointer);
typedef void (GLAPIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);
typedef void (GLAPIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);
GLLOADER_API extern void (GLAPIENTRYP glVertexPointervINTEL)(GLint size, GLenum type, const void **pointer);
GLLOADER_API extern void (GLAPIENTRYP glNormalPointervINTEL)(GLenum type, const void **pointer);
GLLOADER_API extern void (GLAPIENTRYP glColorPointervINTEL)(GLint size, GLenum type, const void **pointer);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordPointervINTEL)(GLint size, GLenum type, const void **pointer);
#endif /* GL_INTEL_parallel_arrays */

#ifndef GL_INTEL_performance_query
#define GL_INTEL_performance_query 1
#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL 0x00000000
#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL 0x00000001
#define GL_PERFQUERY_WAIT_INTEL           0x83FB
#define GL_PERFQUERY_FLUSH_INTEL          0x83FA
#define GL_PERFQUERY_DONOT_FLUSH_INTEL    0x83F9
#define GL_PERFQUERY_COUNTER_EVENT_INTEL  0x94F0
#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL 0x94F1
#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL 0x94F2
#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL 0x94F3
#define GL_PERFQUERY_COUNTER_RAW_INTEL    0x94F4
#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL 0x94F5
#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL 0x94F8
#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL 0x94F9
#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL 0x94FA
#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL 0x94FB
#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL 0x94FC
#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL 0x94FD
#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL 0x94FE
#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL 0x94FF
#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL 0x9500
typedef void (GLAPIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);
typedef void (GLAPIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);
typedef void (GLAPIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);
typedef void (GLAPIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);
typedef void (GLAPIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);
typedef void (GLAPIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);
typedef void (GLAPIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
typedef void (GLAPIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
typedef void (GLAPIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId);
typedef void (GLAPIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
GLLOADER_API extern void (GLAPIENTRYP glBeginPerfQueryINTEL)(GLuint queryHandle);
GLLOADER_API extern void (GLAPIENTRYP glCreatePerfQueryINTEL)(GLuint queryId, GLuint *queryHandle);
GLLOADER_API extern void (GLAPIENTRYP glDeletePerfQueryINTEL)(GLuint queryHandle);
GLLOADER_API extern void (GLAPIENTRYP glEndPerfQueryINTEL)(GLuint queryHandle);
GLLOADER_API extern void (GLAPIENTRYP glGetFirstPerfQueryIdINTEL)(GLuint *queryId);
GLLOADER_API extern void (GLAPIENTRYP glGetNextPerfQueryIdINTEL)(GLuint queryId, GLuint *nextQueryId);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfCounterInfoINTEL)(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfQueryDataINTEL)(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfQueryIdByNameINTEL)(GLchar *queryName, GLuint *queryId);
GLLOADER_API extern void (GLAPIENTRYP glGetPerfQueryInfoINTEL)(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
#endif /* GL_INTEL_performance_query */

#ifndef GL_MESAX_texture_stack
#define GL_MESAX_texture_stack 1
#define GL_TEXTURE_1D_STACK_MESAX         0x8759
#define GL_TEXTURE_2D_STACK_MESAX         0x875A
#define GL_PROXY_TEXTURE_1D_STACK_MESAX   0x875B
#define GL_PROXY_TEXTURE_2D_STACK_MESAX   0x875C
#define GL_TEXTURE_1D_STACK_BINDING_MESAX 0x875D
#define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
#endif /* GL_MESAX_texture_stack */

#ifndef GL_MESA_pack_invert
#define GL_MESA_pack_invert 1
#define GL_PACK_INVERT_MESA               0x8758
#endif /* GL_MESA_pack_invert */

#ifndef GL_MESA_resize_buffers
#define GL_MESA_resize_buffers 1
typedef void (GLAPIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glResizeBuffersMESA)(void);
#endif /* GL_MESA_resize_buffers */

#ifndef GL_MESA_window_pos
#define GL_MESA_window_pos 1
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAPIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2dMESA)(GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2dvMESA)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2fMESA)(GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2fvMESA)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2iMESA)(GLint x, GLint y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2ivMESA)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2sMESA)(GLshort x, GLshort y);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos2svMESA)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3dMESA)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3dvMESA)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3fMESA)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3fvMESA)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3iMESA)(GLint x, GLint y, GLint z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3ivMESA)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3sMESA)(GLshort x, GLshort y, GLshort z);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos3svMESA)(const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos4dMESA)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos4dvMESA)(const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos4fMESA)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos4fvMESA)(const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos4iMESA)(GLint x, GLint y, GLint z, GLint w);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos4ivMESA)(const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos4sMESA)(GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API extern void (GLAPIENTRYP glWindowPos4svMESA)(const GLshort *v);
#endif /* GL_MESA_window_pos */

#ifndef GL_MESA_ycbcr_texture
#define GL_MESA_ycbcr_texture 1
#define GL_UNSIGNED_SHORT_8_8_MESA        0x85BA
#define GL_UNSIGNED_SHORT_8_8_REV_MESA    0x85BB
#define GL_YCBCR_MESA                     0x8757
#endif /* GL_MESA_ycbcr_texture */

#ifndef GL_NVX_conditional_render
#define GL_NVX_conditional_render 1
typedef void (GLAPIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glBeginConditionalRenderNVX)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glEndConditionalRenderNVX)(void);
#endif /* GL_NVX_conditional_render */

#ifndef GL_NVX_gpu_memory_info
#define GL_NVX_gpu_memory_info 1
#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX 0x9047
#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX 0x9048
#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX 0x9049
#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX 0x904A
#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX 0x904B
#endif /* GL_NVX_gpu_memory_info */

#ifndef GL_NV_bindless_multi_draw_indirect
#define GL_NV_bindless_multi_draw_indirect 1
typedef void (GLAPIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawArraysIndirectBindlessNV)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawElementsIndirectBindlessNV)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
#endif /* GL_NV_bindless_multi_draw_indirect */

#ifndef GL_NV_bindless_multi_draw_indirect_count
#define GL_NV_bindless_multi_draw_indirect_count 1
typedef void (GLAPIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (GLAPIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawArraysIndirectBindlessCountNV)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
GLLOADER_API extern void (GLAPIENTRYP glMultiDrawElementsIndirectBindlessCountNV)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
#endif /* GL_NV_bindless_multi_draw_indirect_count */

#ifndef GL_NV_bindless_texture
#define GL_NV_bindless_texture 1
typedef GLuint64(GLAPIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);
typedef GLuint64(GLAPIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);
typedef void (GLAPIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
typedef void (GLAPIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);
typedef GLuint64(GLAPIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (GLAPIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);
typedef void (GLAPIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);
typedef void (GLAPIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);
typedef void (GLAPIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);
typedef GLboolean(GLAPIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
typedef GLboolean(GLAPIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);
GLLOADER_API extern GLuint64(GLAPIENTRYP glGetTextureHandleNV)(GLuint texture);
GLLOADER_API extern GLuint64(GLAPIENTRYP glGetTextureSamplerHandleNV)(GLuint texture, GLuint sampler);
GLLOADER_API extern void (GLAPIENTRYP glMakeTextureHandleResidentNV)(GLuint64 handle);
GLLOADER_API extern void (GLAPIENTRYP glMakeTextureHandleNonResidentNV)(GLuint64 handle);
GLLOADER_API extern GLuint64(GLAPIENTRYP glGetImageHandleNV)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLLOADER_API extern void (GLAPIENTRYP glMakeImageHandleResidentNV)(GLuint64 handle, GLenum access);
GLLOADER_API extern void (GLAPIENTRYP glMakeImageHandleNonResidentNV)(GLuint64 handle);
GLLOADER_API extern void (GLAPIENTRYP glUniformHandleui64NV)(GLint location, GLuint64 value);
GLLOADER_API extern void (GLAPIENTRYP glUniformHandleui64vNV)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformHandleui64NV)(GLuint program, GLint location, GLuint64 value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformHandleui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsTextureHandleResidentNV)(GLuint64 handle);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsImageHandleResidentNV)(GLuint64 handle);
#endif /* GL_NV_bindless_texture */

#ifndef GL_NV_blend_equation_advanced
#define GL_NV_blend_equation_advanced 1
#define GL_BLEND_OVERLAP_NV               0x9281
#define GL_BLEND_PREMULTIPLIED_SRC_NV     0x9280
#define GL_BLUE_NV                        0x1905
#define GL_COLORBURN_NV                   0x929A
#define GL_COLORDODGE_NV                  0x9299
#define GL_CONJOINT_NV                    0x9284
#define GL_CONTRAST_NV                    0x92A1
#define GL_DARKEN_NV                      0x9297
#define GL_DIFFERENCE_NV                  0x929E
#define GL_DISJOINT_NV                    0x9283
#define GL_DST_ATOP_NV                    0x928F
#define GL_DST_IN_NV                      0x928B
#define GL_DST_NV                         0x9287
#define GL_DST_OUT_NV                     0x928D
#define GL_DST_OVER_NV                    0x9289
#define GL_EXCLUSION_NV                   0x92A0
#define GL_GREEN_NV                       0x1904
#define GL_HARDLIGHT_NV                   0x929B
#define GL_HARDMIX_NV                     0x92A9
#define GL_HSL_COLOR_NV                   0x92AF
#define GL_HSL_HUE_NV                     0x92AD
#define GL_HSL_LUMINOSITY_NV              0x92B0
#define GL_HSL_SATURATION_NV              0x92AE
#define GL_INVERT_OVG_NV                  0x92B4
#define GL_INVERT_RGB_NV                  0x92A3
#define GL_LIGHTEN_NV                     0x9298
#define GL_LINEARBURN_NV                  0x92A5
#define GL_LINEARDODGE_NV                 0x92A4
#define GL_LINEARLIGHT_NV                 0x92A7
#define GL_MINUS_CLAMPED_NV               0x92B3
#define GL_MINUS_NV                       0x929F
#define GL_MULTIPLY_NV                    0x9294
#define GL_OVERLAY_NV                     0x9296
#define GL_PINLIGHT_NV                    0x92A8
#define GL_PLUS_CLAMPED_ALPHA_NV          0x92B2
#define GL_PLUS_CLAMPED_NV                0x92B1
#define GL_PLUS_DARKER_NV                 0x9292
#define GL_PLUS_NV                        0x9291
#define GL_RED_NV                         0x1903
#define GL_SCREEN_NV                      0x9295
#define GL_SOFTLIGHT_NV                   0x929C
#define GL_SRC_ATOP_NV                    0x928E
#define GL_SRC_IN_NV                      0x928A
#define GL_SRC_NV                         0x9286
#define GL_SRC_OUT_NV                     0x928C
#define GL_SRC_OVER_NV                    0x9288
#define GL_UNCORRELATED_NV                0x9282
#define GL_VIVIDLIGHT_NV                  0x92A6
#define GL_XOR_NV                         0x1506
typedef void (GLAPIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);
typedef void (GLAPIENTRYP PFNGLBLENDBARRIERNVPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glBlendParameteriNV)(GLenum pname, GLint value);
GLLOADER_API extern void (GLAPIENTRYP glBlendBarrierNV)(void);
#endif /* GL_NV_blend_equation_advanced */

#ifndef GL_NV_blend_equation_advanced_coherent
#define GL_NV_blend_equation_advanced_coherent 1
#define GL_BLEND_ADVANCED_COHERENT_NV     0x9285
#endif /* GL_NV_blend_equation_advanced_coherent */

#ifndef GL_NV_blend_square
#define GL_NV_blend_square 1
#endif /* GL_NV_blend_square */

#ifndef GL_NV_command_list
#define GL_NV_command_list 1
#define GL_TERMINATE_SEQUENCE_COMMAND_NV  0x0000
#define GL_NOP_COMMAND_NV                 0x0001
#define GL_DRAW_ELEMENTS_COMMAND_NV       0x0002
#define GL_DRAW_ARRAYS_COMMAND_NV         0x0003
#define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV 0x0004
#define GL_DRAW_ARRAYS_STRIP_COMMAND_NV   0x0005
#define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV 0x0006
#define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV 0x0007
#define GL_ELEMENT_ADDRESS_COMMAND_NV     0x0008
#define GL_ATTRIBUTE_ADDRESS_COMMAND_NV   0x0009
#define GL_UNIFORM_ADDRESS_COMMAND_NV     0x000A
#define GL_BLEND_COLOR_COMMAND_NV         0x000B
#define GL_STENCIL_REF_COMMAND_NV         0x000C
#define GL_LINE_WIDTH_COMMAND_NV          0x000D
#define GL_POLYGON_OFFSET_COMMAND_NV      0x000E
#define GL_ALPHA_REF_COMMAND_NV           0x000F
#define GL_VIEWPORT_COMMAND_NV            0x0010
#define GL_SCISSOR_COMMAND_NV             0x0011
#define GL_FRONT_FACE_COMMAND_NV          0x0012
typedef void (GLAPIENTRYP PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint *states);
typedef void (GLAPIENTRYP PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint *states);
typedef GLboolean(GLAPIENTRYP PFNGLISSTATENVPROC) (GLuint state);
typedef void (GLAPIENTRYP PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);
typedef GLuint(GLAPIENTRYP PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);
typedef GLushort(GLAPIENTRYP PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);
typedef void (GLAPIENTRYP PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);
typedef void (GLAPIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);
typedef void (GLAPIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
typedef void (GLAPIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
typedef void (GLAPIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint *lists);
typedef void (GLAPIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint *lists);
typedef GLboolean(GLAPIENTRYP PFNGLISCOMMANDLISTNVPROC) (GLuint list);
typedef void (GLAPIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
typedef void (GLAPIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);
typedef void (GLAPIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);
typedef void (GLAPIENTRYP PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);
GLLOADER_API extern void (GLAPIENTRYP glCreateStatesNV)(GLsizei n, GLuint *states);
GLLOADER_API extern void (GLAPIENTRYP glDeleteStatesNV)(GLsizei n, const GLuint *states);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsStateNV)(GLuint state);
GLLOADER_API extern void (GLAPIENTRYP glStateCaptureNV)(GLuint state, GLenum mode);
GLLOADER_API extern GLuint(GLAPIENTRYP glGetCommandHeaderNV)(GLenum tokenID, GLuint size);
GLLOADER_API extern GLushort(GLAPIENTRYP glGetStageIndexNV)(GLenum shadertype);
GLLOADER_API extern void (GLAPIENTRYP glDrawCommandsNV)(GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);
GLLOADER_API extern void (GLAPIENTRYP glDrawCommandsAddressNV)(GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);
GLLOADER_API extern void (GLAPIENTRYP glDrawCommandsStatesNV)(GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
GLLOADER_API extern void (GLAPIENTRYP glDrawCommandsStatesAddressNV)(const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
GLLOADER_API extern void (GLAPIENTRYP glCreateCommandListsNV)(GLsizei n, GLuint *lists);
GLLOADER_API extern void (GLAPIENTRYP glDeleteCommandListsNV)(GLsizei n, const GLuint *lists);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsCommandListNV)(GLuint list);
GLLOADER_API extern void (GLAPIENTRYP glListDrawCommandsStatesClientNV)(GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
GLLOADER_API extern void (GLAPIENTRYP glCommandListSegmentsNV)(GLuint list, GLuint segments);
GLLOADER_API extern void (GLAPIENTRYP glCompileCommandListNV)(GLuint list);
GLLOADER_API extern void (GLAPIENTRYP glCallCommandListNV)(GLuint list);
#endif /* GL_NV_command_list */

#ifndef GL_NV_compute_program5
#define GL_NV_compute_program5 1
#define GL_COMPUTE_PROGRAM_NV             0x90FB
#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV 0x90FC
#endif /* GL_NV_compute_program5 */

#ifndef GL_NV_conditional_render
#define GL_NV_conditional_render 1
#define GL_QUERY_WAIT_NV                  0x8E13
#define GL_QUERY_NO_WAIT_NV               0x8E14
#define GL_QUERY_BY_REGION_WAIT_NV        0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT_NV     0x8E16
typedef void (GLAPIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);
typedef void (GLAPIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glBeginConditionalRenderNV)(GLuint id, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glEndConditionalRenderNV)(void);
#endif /* GL_NV_conditional_render */

#ifndef GL_NV_conservative_raster
#define GL_NV_conservative_raster 1
#define GL_CONSERVATIVE_RASTERIZATION_NV  0x9346
#define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV 0x9347
#define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV 0x9348
#define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV 0x9349
typedef void (GLAPIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);
GLLOADER_API extern void (GLAPIENTRYP glSubpixelPrecisionBiasNV)(GLuint xbits, GLuint ybits);
#endif /* GL_NV_conservative_raster */

#ifndef GL_NV_conservative_raster_dilate
#define GL_NV_conservative_raster_dilate 1
#define GL_CONSERVATIVE_RASTER_DILATE_NV  0x9379
#define GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV 0x937A
#define GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV 0x937B
typedef void (GLAPIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value);
GLLOADER_API extern void (GLAPIENTRYP glConservativeRasterParameterfNV)(GLenum pname, GLfloat value);
#endif /* GL_NV_conservative_raster_dilate */

#ifndef GL_NV_copy_depth_to_color
#define GL_NV_copy_depth_to_color 1
#define GL_DEPTH_STENCIL_TO_RGBA_NV       0x886E
#define GL_DEPTH_STENCIL_TO_BGRA_NV       0x886F
#endif /* GL_NV_copy_depth_to_color */

#ifndef GL_NV_copy_image
#define GL_NV_copy_image 1
typedef void (GLAPIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
GLLOADER_API extern void (GLAPIENTRYP glCopyImageSubDataNV)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
#endif /* GL_NV_copy_image */

#ifndef GL_NV_deep_texture3D
#define GL_NV_deep_texture3D 1
#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV 0x90D0
#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV   0x90D1
#endif /* GL_NV_deep_texture3D */

#ifndef GL_NV_depth_buffer_float
#define GL_NV_depth_buffer_float 1
#define GL_DEPTH_COMPONENT32F_NV          0x8DAB
#define GL_DEPTH32F_STENCIL8_NV           0x8DAC
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
#define GL_DEPTH_BUFFER_FLOAT_MODE_NV     0x8DAF
typedef void (GLAPIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);
typedef void (GLAPIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);
typedef void (GLAPIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);
GLLOADER_API extern void (GLAPIENTRYP glDepthRangedNV)(GLdouble zNear, GLdouble zFar);
GLLOADER_API extern void (GLAPIENTRYP glClearDepthdNV)(GLdouble depth);
GLLOADER_API extern void (GLAPIENTRYP glDepthBoundsdNV)(GLdouble zmin, GLdouble zmax);
#endif /* GL_NV_depth_buffer_float */

#ifndef GL_NV_depth_clamp
#define GL_NV_depth_clamp 1
#define GL_DEPTH_CLAMP_NV                 0x864F
#endif /* GL_NV_depth_clamp */

#ifndef GL_NV_draw_texture
#define GL_NV_draw_texture 1
typedef void (GLAPIENTRYP PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
GLLOADER_API extern void (GLAPIENTRYP glDrawTextureNV)(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
#endif /* GL_NV_draw_texture */

#ifndef GL_NV_evaluators
#define GL_NV_evaluators 1
#define GL_EVAL_2D_NV                     0x86C0
#define GL_EVAL_TRIANGULAR_2D_NV          0x86C1
#define GL_MAP_TESSELLATION_NV            0x86C2
#define GL_MAP_ATTRIB_U_ORDER_NV          0x86C3
#define GL_MAP_ATTRIB_V_ORDER_NV          0x86C4
#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
#define GL_EVAL_VERTEX_ATTRIB0_NV         0x86C6
#define GL_EVAL_VERTEX_ATTRIB1_NV         0x86C7
#define GL_EVAL_VERTEX_ATTRIB2_NV         0x86C8
#define GL_EVAL_VERTEX_ATTRIB3_NV         0x86C9
#define GL_EVAL_VERTEX_ATTRIB4_NV         0x86CA
#define GL_EVAL_VERTEX_ATTRIB5_NV         0x86CB
#define GL_EVAL_VERTEX_ATTRIB6_NV         0x86CC
#define GL_EVAL_VERTEX_ATTRIB7_NV         0x86CD
#define GL_EVAL_VERTEX_ATTRIB8_NV         0x86CE
#define GL_EVAL_VERTEX_ATTRIB9_NV         0x86CF
#define GL_EVAL_VERTEX_ATTRIB10_NV        0x86D0
#define GL_EVAL_VERTEX_ATTRIB11_NV        0x86D1
#define GL_EVAL_VERTEX_ATTRIB12_NV        0x86D2
#define GL_EVAL_VERTEX_ATTRIB13_NV        0x86D3
#define GL_EVAL_VERTEX_ATTRIB14_NV        0x86D4
#define GL_EVAL_VERTEX_ATTRIB15_NV        0x86D5
#define GL_MAX_MAP_TESSELLATION_NV        0x86D6
#define GL_MAX_RATIONAL_EVAL_ORDER_NV     0x86D7
typedef void (GLAPIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);
typedef void (GLAPIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);
typedef void (GLAPIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glMapControlPointsNV)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);
GLLOADER_API extern void (GLAPIENTRYP glMapParameterivNV)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glMapParameterfvNV)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMapControlPointsNV)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);
GLLOADER_API extern void (GLAPIENTRYP glGetMapParameterivNV)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMapParameterfvNV)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMapAttribParameterivNV)(GLenum target, GLuint index, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetMapAttribParameterfvNV)(GLenum target, GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glEvalMapsNV)(GLenum target, GLenum mode);
#endif /* GL_NV_evaluators */

#ifndef GL_NV_explicit_multisample
#define GL_NV_explicit_multisample 1
#define GL_SAMPLE_POSITION_NV             0x8E50
#define GL_SAMPLE_MASK_NV                 0x8E51
#define GL_SAMPLE_MASK_VALUE_NV           0x8E52
#define GL_TEXTURE_BINDING_RENDERBUFFER_NV 0x8E53
#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV 0x8E54
#define GL_TEXTURE_RENDERBUFFER_NV        0x8E55
#define GL_SAMPLER_RENDERBUFFER_NV        0x8E56
#define GL_INT_SAMPLER_RENDERBUFFER_NV    0x8E57
#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV 0x8E58
#define GL_MAX_SAMPLE_MASK_WORDS_NV       0x8E59
typedef void (GLAPIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);
typedef void (GLAPIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);
typedef void (GLAPIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);
GLLOADER_API extern void (GLAPIENTRYP glGetMultisamplefvNV)(GLenum pname, GLuint index, GLfloat *val);
GLLOADER_API extern void (GLAPIENTRYP glSampleMaskIndexedNV)(GLuint index, GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glTexRenderbufferNV)(GLenum target, GLuint renderbuffer);
#endif /* GL_NV_explicit_multisample */

#ifndef GL_NV_fence
#define GL_NV_fence 1
#define GL_ALL_COMPLETED_NV               0x84F2
#define GL_FENCE_STATUS_NV                0x84F3
#define GL_FENCE_CONDITION_NV             0x84F4
typedef void (GLAPIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);
typedef void (GLAPIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);
typedef GLboolean(GLAPIENTRYP PFNGLISFENCENVPROC) (GLuint fence);
typedef GLboolean(GLAPIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);
typedef void (GLAPIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);
typedef void (GLAPIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);
GLLOADER_API extern void (GLAPIENTRYP glDeleteFencesNV)(GLsizei n, const GLuint *fences);
GLLOADER_API extern void (GLAPIENTRYP glGenFencesNV)(GLsizei n, GLuint *fences);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsFenceNV)(GLuint fence);
GLLOADER_API extern GLboolean(GLAPIENTRYP glTestFenceNV)(GLuint fence);
GLLOADER_API extern void (GLAPIENTRYP glGetFenceivNV)(GLuint fence, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glFinishFenceNV)(GLuint fence);
GLLOADER_API extern void (GLAPIENTRYP glSetFenceNV)(GLuint fence, GLenum condition);
#endif /* GL_NV_fence */

#ifndef GL_NV_fill_rectangle
#define GL_NV_fill_rectangle 1
#define GL_FILL_RECTANGLE_NV              0x933C
#endif /* GL_NV_fill_rectangle */

#ifndef GL_NV_float_buffer
#define GL_NV_float_buffer 1
#define GL_FLOAT_R_NV                     0x8880
#define GL_FLOAT_RG_NV                    0x8881
#define GL_FLOAT_RGB_NV                   0x8882
#define GL_FLOAT_RGBA_NV                  0x8883
#define GL_FLOAT_R16_NV                   0x8884
#define GL_FLOAT_R32_NV                   0x8885
#define GL_FLOAT_RG16_NV                  0x8886
#define GL_FLOAT_RG32_NV                  0x8887
#define GL_FLOAT_RGB16_NV                 0x8888
#define GL_FLOAT_RGB32_NV                 0x8889
#define GL_FLOAT_RGBA16_NV                0x888A
#define GL_FLOAT_RGBA32_NV                0x888B
#define GL_TEXTURE_FLOAT_COMPONENTS_NV    0x888C
#define GL_FLOAT_CLEAR_COLOR_VALUE_NV     0x888D
#define GL_FLOAT_RGBA_MODE_NV             0x888E
#endif /* GL_NV_float_buffer */

#ifndef GL_NV_fog_distance
#define GL_NV_fog_distance 1
#define GL_FOG_DISTANCE_MODE_NV           0x855A
#define GL_EYE_RADIAL_NV                  0x855B
#define GL_EYE_PLANE_ABSOLUTE_NV          0x855C
#endif /* GL_NV_fog_distance */

#ifndef GL_NV_fragment_coverage_to_color
#define GL_NV_fragment_coverage_to_color 1
#define GL_FRAGMENT_COVERAGE_TO_COLOR_NV  0x92DD
#define GL_FRAGMENT_COVERAGE_COLOR_NV     0x92DE
typedef void (GLAPIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);
GLLOADER_API extern void (GLAPIENTRYP glFragmentCoverageColorNV)(GLuint color);
#endif /* GL_NV_fragment_coverage_to_color */

#ifndef GL_NV_fragment_program
#define GL_NV_fragment_program 1
#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
#define GL_FRAGMENT_PROGRAM_NV            0x8870
#define GL_MAX_TEXTURE_COORDS_NV          0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS_NV     0x8872
#define GL_FRAGMENT_PROGRAM_BINDING_NV    0x8873
#define GL_PROGRAM_ERROR_STRING_NV        0x8874
typedef void (GLAPIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramNamedParameter4fNV)(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glProgramNamedParameter4fvNV)(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glProgramNamedParameter4dNV)(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glProgramNamedParameter4dvNV)(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramNamedParameterfvNV)(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramNamedParameterdvNV)(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
#endif /* GL_NV_fragment_program */

#ifndef GL_NV_fragment_program2
#define GL_NV_fragment_program2 1
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#define GL_MAX_PROGRAM_CALL_DEPTH_NV      0x88F5
#define GL_MAX_PROGRAM_IF_DEPTH_NV        0x88F6
#define GL_MAX_PROGRAM_LOOP_DEPTH_NV      0x88F7
#define GL_MAX_PROGRAM_LOOP_COUNT_NV      0x88F8
#endif /* GL_NV_fragment_program2 */

#ifndef GL_NV_fragment_program4
#define GL_NV_fragment_program4 1
#endif /* GL_NV_fragment_program4 */

#ifndef GL_NV_fragment_program_option
#define GL_NV_fragment_program_option 1
#endif /* GL_NV_fragment_program_option */

#ifndef GL_NV_fragment_shader_interlock
#define GL_NV_fragment_shader_interlock 1
#endif /* GL_NV_fragment_shader_interlock */

#ifndef GL_NV_framebuffer_mixed_samples
#define GL_NV_framebuffer_mixed_samples 1
#define GL_COVERAGE_MODULATION_TABLE_NV   0x9331
#define GL_COLOR_SAMPLES_NV               0x8E20
#define GL_DEPTH_SAMPLES_NV               0x932D
#define GL_STENCIL_SAMPLES_NV             0x932E
#define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV 0x932F
#define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV 0x9330
#define GL_COVERAGE_MODULATION_NV         0x9332
#define GL_COVERAGE_MODULATION_TABLE_SIZE_NV 0x9333
typedef void (GLAPIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat *v);
typedef void (GLAPIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);
GLLOADER_API extern void (GLAPIENTRYP glCoverageModulationTableNV)(GLsizei n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glGetCoverageModulationTableNV)(GLsizei bufsize, GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glCoverageModulationNV)(GLenum components);
#endif /* GL_NV_framebuffer_mixed_samples */

#ifndef GL_NV_framebuffer_multisample_coverage
#define GL_NV_framebuffer_multisample_coverage 1
#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV 0x8CAB
#define GL_RENDERBUFFER_COLOR_SAMPLES_NV  0x8E10
#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV 0x8E11
#define GL_MULTISAMPLE_COVERAGE_MODES_NV  0x8E12
typedef void (GLAPIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API extern void (GLAPIENTRYP glRenderbufferStorageMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
#endif /* GL_NV_framebuffer_multisample_coverage */

#ifndef GL_NV_geometry_program4
#define GL_NV_geometry_program4 1
#define GL_GEOMETRY_PROGRAM_NV            0x8C26
#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV 0x8C27
#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV 0x8C28
typedef void (GLAPIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLLOADER_API extern void (GLAPIENTRYP glProgramVertexLimitNV)(GLenum target, GLint limit);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTextureEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTextureFaceEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif /* GL_NV_geometry_program4 */

#ifndef GL_NV_geometry_shader4
#define GL_NV_geometry_shader4 1
#endif /* GL_NV_geometry_shader4 */

#ifndef GL_NV_geometry_shader_passthrough
#define GL_NV_geometry_shader_passthrough 1
#endif /* GL_NV_geometry_shader_passthrough */

#ifndef GL_NV_gpu_program4
#define GL_NV_gpu_program4 1
#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV    0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV    0x8905
#define GL_PROGRAM_ATTRIB_COMPONENTS_NV   0x8906
#define GL_PROGRAM_RESULT_COMPONENTS_NV   0x8907
#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV 0x8908
#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV 0x8909
#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV 0x8DA5
#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV 0x8DA6
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParameterI4iNV)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParameterI4ivNV)(GLenum target, GLuint index, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParametersI4ivNV)(GLenum target, GLuint index, GLsizei count, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParameterI4uiNV)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParameterI4uivNV)(GLenum target, GLuint index, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramLocalParametersI4uivNV)(GLenum target, GLuint index, GLsizei count, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParameterI4iNV)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParameterI4ivNV)(GLenum target, GLuint index, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParametersI4ivNV)(GLenum target, GLuint index, GLsizei count, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParameterI4uiNV)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParameterI4uivNV)(GLenum target, GLuint index, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramEnvParametersI4uivNV)(GLenum target, GLuint index, GLsizei count, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramLocalParameterIivNV)(GLenum target, GLuint index, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramLocalParameterIuivNV)(GLenum target, GLuint index, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramEnvParameterIivNV)(GLenum target, GLuint index, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramEnvParameterIuivNV)(GLenum target, GLuint index, GLuint *params);
#endif /* GL_NV_gpu_program4 */

#ifndef GL_NV_gpu_program5
#define GL_NV_gpu_program5 1
#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C
#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F
#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV 0x8F44
#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV  0x8F45
typedef void (GLAPIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count, const GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint index, GLuint *param);
GLLOADER_API extern void (GLAPIENTRYP glProgramSubroutineParametersuivNV)(GLenum target, GLsizei count, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramSubroutineParameteruivNV)(GLenum target, GLuint index, GLuint *param);
#endif /* GL_NV_gpu_program5 */

#ifndef GL_NV_gpu_program5_mem_extended
#define GL_NV_gpu_program5_mem_extended 1
#endif /* GL_NV_gpu_program5_mem_extended */

#ifndef GL_NV_gpu_shader5
#define GL_NV_gpu_shader5 1
#endif /* GL_NV_gpu_shader5 */

#ifndef GL_NV_half_float
#define GL_NV_half_float 1
typedef unsigned short GLhalfNV;
#define GL_HALF_FLOAT_NV                  0x140B
typedef void (GLAPIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);
typedef void (GLAPIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (GLAPIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (GLAPIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
typedef void (GLAPIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (GLAPIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
typedef void (GLAPIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);
typedef void (GLAPIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (GLAPIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (GLAPIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);
typedef void (GLAPIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);
typedef void (GLAPIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex2hNV)(GLhalfNV x, GLhalfNV y);
GLLOADER_API extern void (GLAPIENTRYP glVertex2hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex3hNV)(GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLLOADER_API extern void (GLAPIENTRYP glVertex3hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertex4hNV)(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLLOADER_API extern void (GLAPIENTRYP glVertex4hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glNormal3hNV)(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
GLLOADER_API extern void (GLAPIENTRYP glNormal3hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glColor3hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLLOADER_API extern void (GLAPIENTRYP glColor3hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
GLLOADER_API extern void (GLAPIENTRYP glColor4hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1hNV)(GLhalfNV s);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord1hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2hNV)(GLhalfNV s, GLhalfNV t);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3hNV)(GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord3hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4hNV)(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1hNV)(GLenum target, GLhalfNV s);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord1hvNV)(GLenum target, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2hNV)(GLenum target, GLhalfNV s, GLhalfNV t);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord2hvNV)(GLenum target, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3hNV)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord3hvNV)(GLenum target, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4hNV)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLLOADER_API extern void (GLAPIENTRYP glMultiTexCoord4hvNV)(GLenum target, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordhNV)(GLhalfNV fog);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordhvNV)(const GLhalfNV *fog);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColor3hvNV)(const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexWeighthNV)(GLhalfNV weight);
GLLOADER_API extern void (GLAPIENTRYP glVertexWeighthvNV)(const GLhalfNV *weight);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1hNV)(GLuint index, GLhalfNV x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1hvNV)(GLuint index, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2hNV)(GLuint index, GLhalfNV x, GLhalfNV y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2hvNV)(GLuint index, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3hNV)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3hvNV)(GLuint index, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4hNV)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4hvNV)(GLuint index, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs1hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs2hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs3hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs4hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
#endif /* GL_NV_half_float */

#ifndef GL_NV_internalformat_sample_query
#define GL_NV_internalformat_sample_query 1
#define GL_MULTISAMPLES_NV                0x9371
#define GL_SUPERSAMPLE_SCALE_X_NV         0x9372
#define GL_SUPERSAMPLE_SCALE_Y_NV         0x9373
#define GL_CONFORMANT_NV                  0x9374
typedef void (GLAPIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetInternalformatSampleivNV)(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
#endif /* GL_NV_internalformat_sample_query */

#ifndef GL_NV_light_max_exponent
#define GL_NV_light_max_exponent 1
#define GL_MAX_SHININESS_NV               0x8504
#define GL_MAX_SPOT_EXPONENT_NV           0x8505
#endif /* GL_NV_light_max_exponent */

#ifndef GL_NV_multisample_coverage
#define GL_NV_multisample_coverage 1
#endif /* GL_NV_multisample_coverage */

#ifndef GL_NV_multisample_filter_hint
#define GL_NV_multisample_filter_hint 1
#define GL_MULTISAMPLE_FILTER_HINT_NV     0x8534
#endif /* GL_NV_multisample_filter_hint */

#ifndef GL_NV_occlusion_query
#define GL_NV_occlusion_query 1
#define GL_PIXEL_COUNTER_BITS_NV          0x8864
#define GL_CURRENT_OCCLUSION_QUERY_ID_NV  0x8865
#define GL_PIXEL_COUNT_NV                 0x8866
#define GL_PIXEL_COUNT_AVAILABLE_NV       0x8867
typedef void (GLAPIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);
typedef void (GLAPIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);
typedef GLboolean(GLAPIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);
typedef void (GLAPIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGenOcclusionQueriesNV)(GLsizei n, GLuint *ids);
GLLOADER_API extern void (GLAPIENTRYP glDeleteOcclusionQueriesNV)(GLsizei n, const GLuint *ids);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsOcclusionQueryNV)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glBeginOcclusionQueryNV)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glEndOcclusionQueryNV)(void);
GLLOADER_API extern void (GLAPIENTRYP glGetOcclusionQueryivNV)(GLuint id, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetOcclusionQueryuivNV)(GLuint id, GLenum pname, GLuint *params);
#endif /* GL_NV_occlusion_query */

#ifndef GL_NV_packed_depth_stencil
#define GL_NV_packed_depth_stencil 1
#define GL_DEPTH_STENCIL_NV               0x84F9
#define GL_UNSIGNED_INT_24_8_NV           0x84FA
#endif /* GL_NV_packed_depth_stencil */

#ifndef GL_NV_parameter_buffer_object
#define GL_NV_parameter_buffer_object 1
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV 0x8DA0
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV 0x8DA1
#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV 0x8DA2
#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV 0x8DA3
#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV 0x8DA4
typedef void (GLAPIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);
typedef void (GLAPIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramBufferParametersfvNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramBufferParametersIivNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glProgramBufferParametersIuivNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);
#endif /* GL_NV_parameter_buffer_object */

#ifndef GL_NV_parameter_buffer_object2
#define GL_NV_parameter_buffer_object2 1
#endif /* GL_NV_parameter_buffer_object2 */

#ifndef GL_NV_path_rendering
#define GL_NV_path_rendering 1
#define GL_PATH_FORMAT_SVG_NV             0x9070
#define GL_PATH_FORMAT_PS_NV              0x9071
#define GL_STANDARD_FONT_NAME_NV          0x9072
#define GL_SYSTEM_FONT_NAME_NV            0x9073
#define GL_FILE_NAME_NV                   0x9074
#define GL_PATH_STROKE_WIDTH_NV           0x9075
#define GL_PATH_END_CAPS_NV               0x9076
#define GL_PATH_INITIAL_END_CAP_NV        0x9077
#define GL_PATH_TERMINAL_END_CAP_NV       0x9078
#define GL_PATH_JOIN_STYLE_NV             0x9079
#define GL_PATH_MITER_LIMIT_NV            0x907A
#define GL_PATH_DASH_CAPS_NV              0x907B
#define GL_PATH_INITIAL_DASH_CAP_NV       0x907C
#define GL_PATH_TERMINAL_DASH_CAP_NV      0x907D
#define GL_PATH_DASH_OFFSET_NV            0x907E
#define GL_PATH_CLIENT_LENGTH_NV          0x907F
#define GL_PATH_FILL_MODE_NV              0x9080
#define GL_PATH_FILL_MASK_NV              0x9081
#define GL_PATH_FILL_COVER_MODE_NV        0x9082
#define GL_PATH_STROKE_COVER_MODE_NV      0x9083
#define GL_PATH_STROKE_MASK_NV            0x9084
#define GL_COUNT_UP_NV                    0x9088
#define GL_COUNT_DOWN_NV                  0x9089
#define GL_PATH_OBJECT_BOUNDING_BOX_NV    0x908A
#define GL_CONVEX_HULL_NV                 0x908B
#define GL_BOUNDING_BOX_NV                0x908D
#define GL_TRANSLATE_X_NV                 0x908E
#define GL_TRANSLATE_Y_NV                 0x908F
#define GL_TRANSLATE_2D_NV                0x9090
#define GL_TRANSLATE_3D_NV                0x9091
#define GL_AFFINE_2D_NV                   0x9092
#define GL_AFFINE_3D_NV                   0x9094
#define GL_TRANSPOSE_AFFINE_2D_NV         0x9096
#define GL_TRANSPOSE_AFFINE_3D_NV         0x9098
#define GL_UTF8_NV                        0x909A
#define GL_UTF16_NV                       0x909B
#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV 0x909C
#define GL_PATH_COMMAND_COUNT_NV          0x909D
#define GL_PATH_COORD_COUNT_NV            0x909E
#define GL_PATH_DASH_ARRAY_COUNT_NV       0x909F
#define GL_PATH_COMPUTED_LENGTH_NV        0x90A0
#define GL_PATH_FILL_BOUNDING_BOX_NV      0x90A1
#define GL_PATH_STROKE_BOUNDING_BOX_NV    0x90A2
#define GL_SQUARE_NV                      0x90A3
#define GL_ROUND_NV                       0x90A4
#define GL_TRIANGULAR_NV                  0x90A5
#define GL_BEVEL_NV                       0x90A6
#define GL_MITER_REVERT_NV                0x90A7
#define GL_MITER_TRUNCATE_NV              0x90A8
#define GL_SKIP_MISSING_GLYPH_NV          0x90A9
#define GL_USE_MISSING_GLYPH_NV           0x90AA
#define GL_PATH_ERROR_POSITION_NV         0x90AB
#define GL_ACCUM_ADJACENT_PAIRS_NV        0x90AD
#define GL_ADJACENT_PAIRS_NV              0x90AE
#define GL_FIRST_TO_REST_NV               0x90AF
#define GL_PATH_GEN_MODE_NV               0x90B0
#define GL_PATH_GEN_COEFF_NV              0x90B1
#define GL_PATH_GEN_COMPONENTS_NV         0x90B3
#define GL_PATH_STENCIL_FUNC_NV           0x90B7
#define GL_PATH_STENCIL_REF_NV            0x90B8
#define GL_PATH_STENCIL_VALUE_MASK_NV     0x90B9
#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV 0x90BD
#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE
#define GL_PATH_COVER_DEPTH_FUNC_NV       0x90BF
#define GL_PATH_DASH_OFFSET_RESET_NV      0x90B4
#define GL_MOVE_TO_RESETS_NV              0x90B5
#define GL_MOVE_TO_CONTINUES_NV           0x90B6
#define GL_CLOSE_PATH_NV                  0x00
#define GL_MOVE_TO_NV                     0x02
#define GL_RELATIVE_MOVE_TO_NV            0x03
#define GL_LINE_TO_NV                     0x04
#define GL_RELATIVE_LINE_TO_NV            0x05
#define GL_HORIZONTAL_LINE_TO_NV          0x06
#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV 0x07
#define GL_VERTICAL_LINE_TO_NV            0x08
#define GL_RELATIVE_VERTICAL_LINE_TO_NV   0x09
#define GL_QUADRATIC_CURVE_TO_NV          0x0A
#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV 0x0B
#define GL_CUBIC_CURVE_TO_NV              0x0C
#define GL_RELATIVE_CUBIC_CURVE_TO_NV     0x0D
#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV   0x0E
#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0F
#define GL_SMOOTH_CUBIC_CURVE_TO_NV       0x10
#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV 0x11
#define GL_SMALL_CCW_ARC_TO_NV            0x12
#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV   0x13
#define GL_SMALL_CW_ARC_TO_NV             0x14
#define GL_RELATIVE_SMALL_CW_ARC_TO_NV    0x15
#define GL_LARGE_CCW_ARC_TO_NV            0x16
#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV   0x17
#define GL_LARGE_CW_ARC_TO_NV             0x18
#define GL_RELATIVE_LARGE_CW_ARC_TO_NV    0x19
#define GL_RESTART_PATH_NV                0xF0
#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV    0xF2
#define GL_DUP_LAST_CUBIC_CURVE_TO_NV     0xF4
#define GL_RECT_NV                        0xF6
#define GL_CIRCULAR_CCW_ARC_TO_NV         0xF8
#define GL_CIRCULAR_CW_ARC_TO_NV          0xFA
#define GL_CIRCULAR_TANGENT_ARC_TO_NV     0xFC
#define GL_ARC_TO_NV                      0xFE
#define GL_RELATIVE_ARC_TO_NV             0xFF
#define GL_BOLD_BIT_NV                    0x01
#define GL_ITALIC_BIT_NV                  0x02
#define GL_GLYPH_WIDTH_BIT_NV             0x01
#define GL_GLYPH_HEIGHT_BIT_NV            0x02
#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV 0x04
#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV 0x08
#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV 0x10
#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV 0x20
#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV 0x40
#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV 0x80
#define GL_GLYPH_HAS_KERNING_BIT_NV       0x100
#define GL_FONT_X_MIN_BOUNDS_BIT_NV       0x00010000
#define GL_FONT_Y_MIN_BOUNDS_BIT_NV       0x00020000
#define GL_FONT_X_MAX_BOUNDS_BIT_NV       0x00040000
#define GL_FONT_Y_MAX_BOUNDS_BIT_NV       0x00080000
#define GL_FONT_UNITS_PER_EM_BIT_NV       0x00100000
#define GL_FONT_ASCENDER_BIT_NV           0x00200000
#define GL_FONT_DESCENDER_BIT_NV          0x00400000
#define GL_FONT_HEIGHT_BIT_NV             0x00800000
#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV  0x01000000
#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV 0x02000000
#define GL_FONT_UNDERLINE_POSITION_BIT_NV 0x04000000
#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV 0x08000000
#define GL_FONT_HAS_KERNING_BIT_NV        0x10000000
#define GL_ROUNDED_RECT_NV                0xE8
#define GL_RELATIVE_ROUNDED_RECT_NV       0xE9
#define GL_ROUNDED_RECT2_NV               0xEA
#define GL_RELATIVE_ROUNDED_RECT2_NV      0xEB
#define GL_ROUNDED_RECT4_NV               0xEC
#define GL_RELATIVE_ROUNDED_RECT4_NV      0xED
#define GL_ROUNDED_RECT8_NV               0xEE
#define GL_RELATIVE_ROUNDED_RECT8_NV      0xEF
#define GL_RELATIVE_RECT_NV               0xF7
#define GL_FONT_GLYPHS_AVAILABLE_NV       0x9368
#define GL_FONT_TARGET_UNAVAILABLE_NV     0x9369
#define GL_FONT_UNAVAILABLE_NV            0x936A
#define GL_FONT_UNINTELLIGIBLE_NV         0x936B
#define GL_CONIC_CURVE_TO_NV              0x1A
#define GL_RELATIVE_CONIC_CURVE_TO_NV     0x1B
#define GL_FONT_NUM_GLYPH_INDICES_BIT_NV  0x20000000
#define GL_STANDARD_FONT_FORMAT_NV        0x936C
#define GL_2_BYTES_NV                     0x1407
#define GL_3_BYTES_NV                     0x1408
#define GL_4_BYTES_NV                     0x1409
#define GL_EYE_LINEAR_NV                  0x2400
#define GL_OBJECT_LINEAR_NV               0x2401
#define GL_CONSTANT_NV                    0x8576
#define GL_PATH_FOG_GEN_MODE_NV           0x90AC
#define GL_PRIMARY_COLOR_NV               0x852C
#define GL_SECONDARY_COLOR_NV             0x852D
#define GL_PATH_GEN_COLOR_FORMAT_NV       0x90B2
#define GL_PATH_PROJECTION_NV             0x1701
#define GL_PATH_MODELVIEW_NV              0x1700
#define GL_PATH_MODELVIEW_STACK_DEPTH_NV  0x0BA3
#define GL_PATH_MODELVIEW_MATRIX_NV       0x0BA6
#define GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV 0x0D36
#define GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV 0x84E3
#define GL_PATH_PROJECTION_STACK_DEPTH_NV 0x0BA4
#define GL_PATH_PROJECTION_MATRIX_NV      0x0BA7
#define GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV 0x0D38
#define GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV 0x84E4
#define GL_FRAGMENT_INPUT_NV              0x936D
typedef GLuint(GLAPIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);
typedef void (GLAPIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);
typedef GLboolean(GLAPIENTRYP PFNGLISPATHNVPROC) (GLuint path);
typedef void (GLAPIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
typedef void (GLAPIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);
typedef void (GLAPIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
typedef void (GLAPIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);
typedef void (GLAPIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const void *pathString);
typedef void (GLAPIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (GLAPIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (GLAPIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
typedef void (GLAPIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);
typedef void (GLAPIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
typedef void (GLAPIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
typedef void (GLAPIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *value);
typedef void (GLAPIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);
typedef void (GLAPIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *value);
typedef void (GLAPIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);
typedef void (GLAPIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat *dashArray);
typedef void (GLAPIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);
typedef void (GLAPIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);
typedef void (GLAPIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);
typedef void (GLAPIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);
typedef void (GLAPIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
typedef void (GLAPIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
typedef void (GLAPIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);
typedef void (GLAPIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);
typedef void (GLAPIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);
typedef void (GLAPIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (GLAPIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (GLAPIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value);
typedef void (GLAPIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *value);
typedef void (GLAPIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);
typedef void (GLAPIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);
typedef void (GLAPIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);
typedef void (GLAPIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
typedef void (GLAPIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
typedef void (GLAPIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
typedef GLboolean(GLAPIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);
typedef GLboolean(GLAPIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);
typedef GLfloat(GLAPIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);
typedef GLboolean(GLAPIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
typedef void (GLAPIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (GLAPIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
typedef void (GLAPIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
typedef void (GLAPIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (GLAPIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef GLenum(GLAPIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
typedef GLenum(GLAPIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef GLenum(GLAPIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (GLAPIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
typedef void (GLAPIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
typedef void (GLAPIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);
typedef void (GLAPIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value);
typedef void (GLAPIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *value);
typedef void (GLAPIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *value);
typedef void (GLAPIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat *value);
GLLOADER_API extern GLuint(GLAPIENTRYP glGenPathsNV)(GLsizei range);
GLLOADER_API extern void (GLAPIENTRYP glDeletePathsNV)(GLuint path, GLsizei range);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsPathNV)(GLuint path);
GLLOADER_API extern void (GLAPIENTRYP glPathCommandsNV)(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
GLLOADER_API extern void (GLAPIENTRYP glPathCoordsNV)(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);
GLLOADER_API extern void (GLAPIENTRYP glPathSubCommandsNV)(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
GLLOADER_API extern void (GLAPIENTRYP glPathSubCoordsNV)(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);
GLLOADER_API extern void (GLAPIENTRYP glPathStringNV)(GLuint path, GLenum format, GLsizei length, const void *pathString);
GLLOADER_API extern void (GLAPIENTRYP glPathGlyphsNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLLOADER_API extern void (GLAPIENTRYP glPathGlyphRangeNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLLOADER_API extern void (GLAPIENTRYP glWeightPathsNV)(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
GLLOADER_API extern void (GLAPIENTRYP glCopyPathNV)(GLuint resultPath, GLuint srcPath);
GLLOADER_API extern void (GLAPIENTRYP glInterpolatePathsNV)(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
GLLOADER_API extern void (GLAPIENTRYP glTransformPathNV)(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API extern void (GLAPIENTRYP glPathParameterivNV)(GLuint path, GLenum pname, const GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glPathParameteriNV)(GLuint path, GLenum pname, GLint value);
GLLOADER_API extern void (GLAPIENTRYP glPathParameterfvNV)(GLuint path, GLenum pname, const GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glPathParameterfNV)(GLuint path, GLenum pname, GLfloat value);
GLLOADER_API extern void (GLAPIENTRYP glPathDashArrayNV)(GLuint path, GLsizei dashCount, const GLfloat *dashArray);
GLLOADER_API extern void (GLAPIENTRYP glPathStencilFuncNV)(GLenum func, GLint ref, GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glPathStencilDepthOffsetNV)(GLfloat factor, GLfloat units);
GLLOADER_API extern void (GLAPIENTRYP glStencilFillPathNV)(GLuint path, GLenum fillMode, GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glStencilStrokePathNV)(GLuint path, GLint reference, GLuint mask);
GLLOADER_API extern void (GLAPIENTRYP glStencilFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API extern void (GLAPIENTRYP glStencilStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API extern void (GLAPIENTRYP glPathCoverDepthFuncNV)(GLenum func);
GLLOADER_API extern void (GLAPIENTRYP glCoverFillPathNV)(GLuint path, GLenum coverMode);
GLLOADER_API extern void (GLAPIENTRYP glCoverStrokePathNV)(GLuint path, GLenum coverMode);
GLLOADER_API extern void (GLAPIENTRYP glCoverFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API extern void (GLAPIENTRYP glCoverStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API extern void (GLAPIENTRYP glGetPathParameterivNV)(GLuint path, GLenum pname, GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glGetPathParameterfvNV)(GLuint path, GLenum pname, GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glGetPathCommandsNV)(GLuint path, GLubyte *commands);
GLLOADER_API extern void (GLAPIENTRYP glGetPathCoordsNV)(GLuint path, GLfloat *coords);
GLLOADER_API extern void (GLAPIENTRYP glGetPathDashArrayNV)(GLuint path, GLfloat *dashArray);
GLLOADER_API extern void (GLAPIENTRYP glGetPathMetricsNV)(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
GLLOADER_API extern void (GLAPIENTRYP glGetPathMetricRangeNV)(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
GLLOADER_API extern void (GLAPIENTRYP glGetPathSpacingNV)(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsPointInFillPathNV)(GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsPointInStrokePathNV)(GLuint path, GLfloat x, GLfloat y);
GLLOADER_API extern GLfloat(GLAPIENTRYP glGetPathLengthNV)(GLuint path, GLsizei startSegment, GLsizei numSegments);
GLLOADER_API extern GLboolean(GLAPIENTRYP glPointAlongPathNV)(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
GLLOADER_API extern void (GLAPIENTRYP glMatrixLoad3x2fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixLoad3x3fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixLoadTranspose3x3fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixMult3x2fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixMult3x3fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glMatrixMultTranspose3x3fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API extern void (GLAPIENTRYP glStencilThenCoverFillPathNV)(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
GLLOADER_API extern void (GLAPIENTRYP glStencilThenCoverStrokePathNV)(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
GLLOADER_API extern void (GLAPIENTRYP glStencilThenCoverFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API extern void (GLAPIENTRYP glStencilThenCoverStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API extern GLenum(GLAPIENTRYP glPathGlyphIndexRangeNV)(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
GLLOADER_API extern GLenum(GLAPIENTRYP glPathGlyphIndexArrayNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLLOADER_API extern GLenum(GLAPIENTRYP glPathMemoryGlyphIndexArrayNV)(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLLOADER_API extern void (GLAPIENTRYP glProgramPathFragmentInputGenNV)(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramResourcefvNV)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glPathColorGenNV)(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
GLLOADER_API extern void (GLAPIENTRYP glPathTexGenNV)(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
GLLOADER_API extern void (GLAPIENTRYP glPathFogGenNV)(GLenum genMode);
GLLOADER_API extern void (GLAPIENTRYP glGetPathColorGenivNV)(GLenum color, GLenum pname, GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glGetPathColorGenfvNV)(GLenum color, GLenum pname, GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP glGetPathTexGenivNV)(GLenum texCoordSet, GLenum pname, GLint *value);
GLLOADER_API extern void (GLAPIENTRYP glGetPathTexGenfvNV)(GLenum texCoordSet, GLenum pname, GLfloat *value);
#endif /* GL_NV_path_rendering */

#ifndef GL_NV_path_rendering_shared_edge
#define GL_NV_path_rendering_shared_edge 1
#define GL_SHARED_EDGE_NV                 0xC0
#endif /* GL_NV_path_rendering_shared_edge */

#ifndef GL_NV_pixel_data_range
#define GL_NV_pixel_data_range 1
#define GL_WRITE_PIXEL_DATA_RANGE_NV      0x8878
#define GL_READ_PIXEL_DATA_RANGE_NV       0x8879
#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV 0x887A
#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV 0x887B
#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV 0x887C
#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV 0x887D
typedef void (GLAPIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const void *pointer);
typedef void (GLAPIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glPixelDataRangeNV)(GLenum target, GLsizei length, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glFlushPixelDataRangeNV)(GLenum target);
#endif /* GL_NV_pixel_data_range */

#ifndef GL_NV_point_sprite
#define GL_NV_point_sprite 1
#define GL_POINT_SPRITE_NV                0x8861
#define GL_COORD_REPLACE_NV               0x8862
#define GL_POINT_SPRITE_R_MODE_NV         0x8863
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glPointParameteriNV)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterivNV)(GLenum pname, const GLint *params);
#endif /* GL_NV_point_sprite */

#ifndef GL_NV_present_video
#define GL_NV_present_video 1
#define GL_FRAME_NV                       0x8E26
#define GL_FIELDS_NV                      0x8E27
#define GL_CURRENT_TIME_NV                0x8E28
#define GL_NUM_FILL_STREAMS_NV            0x8E29
#define GL_PRESENT_TIME_NV                0x8E2A
#define GL_PRESENT_DURATION_NV            0x8E2B
typedef void (GLAPIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
typedef void (GLAPIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
typedef void (GLAPIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params);
typedef void (GLAPIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *params);
typedef void (GLAPIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT *params);
GLLOADER_API extern void (GLAPIENTRYP glPresentFrameKeyedNV)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
GLLOADER_API extern void (GLAPIENTRYP glPresentFrameDualFillNV)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
GLLOADER_API extern void (GLAPIENTRYP glGetVideoivNV)(GLuint video_slot, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVideouivNV)(GLuint video_slot, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVideoi64vNV)(GLuint video_slot, GLenum pname, GLint64EXT *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVideoui64vNV)(GLuint video_slot, GLenum pname, GLuint64EXT *params);
#endif /* GL_NV_present_video */

#ifndef GL_NV_primitive_restart
#define GL_NV_primitive_restart 1
#define GL_PRIMITIVE_RESTART_NV           0x8558
#define GL_PRIMITIVE_RESTART_INDEX_NV     0x8559
typedef void (GLAPIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);
typedef void (GLAPIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);
GLLOADER_API extern void (GLAPIENTRYP glPrimitiveRestartNV)(void);
GLLOADER_API extern void (GLAPIENTRYP glPrimitiveRestartIndexNV)(GLuint index);
#endif /* GL_NV_primitive_restart */

#ifndef GL_NV_register_combiners
#define GL_NV_register_combiners 1
#define GL_REGISTER_COMBINERS_NV          0x8522
#define GL_VARIABLE_A_NV                  0x8523
#define GL_VARIABLE_B_NV                  0x8524
#define GL_VARIABLE_C_NV                  0x8525
#define GL_VARIABLE_D_NV                  0x8526
#define GL_VARIABLE_E_NV                  0x8527
#define GL_VARIABLE_F_NV                  0x8528
#define GL_VARIABLE_G_NV                  0x8529
#define GL_CONSTANT_COLOR0_NV             0x852A
#define GL_CONSTANT_COLOR1_NV             0x852B
#define GL_SPARE0_NV                      0x852E
#define GL_SPARE1_NV                      0x852F
#define GL_DISCARD_NV                     0x8530
#define GL_E_TIMES_F_NV                   0x8531
#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
#define GL_UNSIGNED_IDENTITY_NV           0x8536
#define GL_UNSIGNED_INVERT_NV             0x8537
#define GL_EXPAND_NORMAL_NV               0x8538
#define GL_EXPAND_NEGATE_NV               0x8539
#define GL_HALF_BIAS_NORMAL_NV            0x853A
#define GL_HALF_BIAS_NEGATE_NV            0x853B
#define GL_SIGNED_IDENTITY_NV             0x853C
#define GL_SIGNED_NEGATE_NV               0x853D
#define GL_SCALE_BY_TWO_NV                0x853E
#define GL_SCALE_BY_FOUR_NV               0x853F
#define GL_SCALE_BY_ONE_HALF_NV           0x8540
#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV   0x8541
#define GL_COMBINER_INPUT_NV              0x8542
#define GL_COMBINER_MAPPING_NV            0x8543
#define GL_COMBINER_COMPONENT_USAGE_NV    0x8544
#define GL_COMBINER_AB_DOT_PRODUCT_NV     0x8545
#define GL_COMBINER_CD_DOT_PRODUCT_NV     0x8546
#define GL_COMBINER_MUX_SUM_NV            0x8547
#define GL_COMBINER_SCALE_NV              0x8548
#define GL_COMBINER_BIAS_NV               0x8549
#define GL_COMBINER_AB_OUTPUT_NV          0x854A
#define GL_COMBINER_CD_OUTPUT_NV          0x854B
#define GL_COMBINER_SUM_OUTPUT_NV         0x854C
#define GL_MAX_GENERAL_COMBINERS_NV       0x854D
#define GL_NUM_GENERAL_COMBINERS_NV       0x854E
#define GL_COLOR_SUM_CLAMP_NV             0x854F
#define GL_COMBINER0_NV                   0x8550
#define GL_COMBINER1_NV                   0x8551
#define GL_COMBINER2_NV                   0x8552
#define GL_COMBINER3_NV                   0x8553
#define GL_COMBINER4_NV                   0x8554
#define GL_COMBINER5_NV                   0x8555
#define GL_COMBINER6_NV                   0x8556
#define GL_COMBINER7_NV                   0x8557
typedef void (GLAPIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (GLAPIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
typedef void (GLAPIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (GLAPIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glCombinerParameterfvNV)(GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glCombinerParameterfNV)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glCombinerParameterivNV)(GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glCombinerParameteriNV)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glCombinerInputNV)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLLOADER_API extern void (GLAPIENTRYP glCombinerOutputNV)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
GLLOADER_API extern void (GLAPIENTRYP glFinalCombinerInputNV)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLLOADER_API extern void (GLAPIENTRYP glGetCombinerInputParameterfvNV)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetCombinerInputParameterivNV)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetCombinerOutputParameterfvNV)(GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetCombinerOutputParameterivNV)(GLenum stage, GLenum portion, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetFinalCombinerInputParameterfvNV)(GLenum variable, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetFinalCombinerInputParameterivNV)(GLenum variable, GLenum pname, GLint *params);
#endif /* GL_NV_register_combiners */

#ifndef GL_NV_register_combiners2
#define GL_NV_register_combiners2 1
#define GL_PER_STAGE_CONSTANTS_NV         0x8535
typedef void (GLAPIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glCombinerStageParameterfvNV)(GLenum stage, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetCombinerStageParameterfvNV)(GLenum stage, GLenum pname, GLfloat *params);
#endif /* GL_NV_register_combiners2 */

#ifndef GL_NV_sample_locations
#define GL_NV_sample_locations 1
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV 0x933D
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV 0x933E
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV 0x933F
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV 0x9340
#define GL_SAMPLE_LOCATION_NV             0x8E50
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9341
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV 0x9342
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV 0x9343
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferSampleLocationsfvNV)(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glNamedFramebufferSampleLocationsfvNV)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glResolveDepthValuesNV)(void);
#endif /* GL_NV_sample_locations */

#ifndef GL_NV_sample_mask_override_coverage
#define GL_NV_sample_mask_override_coverage 1
#endif /* GL_NV_sample_mask_override_coverage */

#ifndef GL_NV_shader_atomic_counters
#define GL_NV_shader_atomic_counters 1
#endif /* GL_NV_shader_atomic_counters */

#ifndef GL_NV_shader_atomic_float
#define GL_NV_shader_atomic_float 1
#endif /* GL_NV_shader_atomic_float */

#ifndef GL_NV_shader_atomic_fp16_vector
#define GL_NV_shader_atomic_fp16_vector 1
#endif /* GL_NV_shader_atomic_fp16_vector */

#ifndef GL_NV_shader_atomic_int64
#define GL_NV_shader_atomic_int64 1
#endif /* GL_NV_shader_atomic_int64 */

#ifndef GL_NV_shader_buffer_load
#define GL_NV_shader_buffer_load 1
#define GL_BUFFER_GPU_ADDRESS_NV          0x8F1D
#define GL_GPU_ADDRESS_NV                 0x8F34
#define GL_MAX_SHADER_BUFFER_ADDRESS_NV   0x8F35
typedef void (GLAPIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
typedef void (GLAPIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
typedef GLboolean(GLAPIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);
typedef void (GLAPIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
typedef void (GLAPIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
typedef GLboolean(GLAPIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
typedef void (GLAPIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
typedef void (GLAPIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
typedef void (GLAPIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
typedef void (GLAPIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
typedef void (GLAPIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
typedef void (GLAPIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glMakeBufferResidentNV)(GLenum target, GLenum access);
GLLOADER_API extern void (GLAPIENTRYP glMakeBufferNonResidentNV)(GLenum target);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsBufferResidentNV)(GLenum target);
GLLOADER_API extern void (GLAPIENTRYP glMakeNamedBufferResidentNV)(GLuint buffer, GLenum access);
GLLOADER_API extern void (GLAPIENTRYP glMakeNamedBufferNonResidentNV)(GLuint buffer);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsNamedBufferResidentNV)(GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glGetBufferParameterui64vNV)(GLenum target, GLenum pname, GLuint64EXT *params);
GLLOADER_API extern void (GLAPIENTRYP glGetNamedBufferParameterui64vNV)(GLuint buffer, GLenum pname, GLuint64EXT *params);
GLLOADER_API extern void (GLAPIENTRYP glGetIntegerui64vNV)(GLenum value, GLuint64EXT *result);
GLLOADER_API extern void (GLAPIENTRYP glUniformui64NV)(GLint location, GLuint64EXT value);
GLLOADER_API extern void (GLAPIENTRYP glUniformui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformui64NV)(GLuint program, GLint location, GLuint64EXT value);
GLLOADER_API extern void (GLAPIENTRYP glProgramUniformui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif /* GL_NV_shader_buffer_load */

#ifndef GL_NV_shader_buffer_store
#define GL_NV_shader_buffer_store 1
#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV 0x00000010
#endif /* GL_NV_shader_buffer_store */

#ifndef GL_NV_shader_storage_buffer_object
#define GL_NV_shader_storage_buffer_object 1
#endif /* GL_NV_shader_storage_buffer_object */

#ifndef GL_NV_shader_thread_group
#define GL_NV_shader_thread_group 1
#define GL_WARP_SIZE_NV                   0x9339
#define GL_WARPS_PER_SM_NV                0x933A
#define GL_SM_COUNT_NV                    0x933B
#endif /* GL_NV_shader_thread_group */

#ifndef GL_NV_shader_thread_shuffle
#define GL_NV_shader_thread_shuffle 1
#endif /* GL_NV_shader_thread_shuffle */

#ifndef GL_NV_tessellation_program5
#define GL_NV_tessellation_program5 1
#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV   0x86D8
#define GL_TESS_CONTROL_PROGRAM_NV        0x891E
#define GL_TESS_EVALUATION_PROGRAM_NV     0x891F
#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV 0x8C74
#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV 0x8C75
#endif /* GL_NV_tessellation_program5 */

#ifndef GL_NV_texgen_emboss
#define GL_NV_texgen_emboss 1
#define GL_EMBOSS_LIGHT_NV                0x855D
#define GL_EMBOSS_CONSTANT_NV             0x855E
#define GL_EMBOSS_MAP_NV                  0x855F
#endif /* GL_NV_texgen_emboss */

#ifndef GL_NV_texgen_reflection
#define GL_NV_texgen_reflection 1
#define GL_NORMAL_MAP_NV                  0x8511
#define GL_REFLECTION_MAP_NV              0x8512
#endif /* GL_NV_texgen_reflection */

#ifndef GL_NV_texture_barrier
#define GL_NV_texture_barrier 1
typedef void (GLAPIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glTextureBarrierNV)(void);
#endif /* GL_NV_texture_barrier */

#ifndef GL_NV_texture_compression_vtc
#define GL_NV_texture_compression_vtc 1
#endif /* GL_NV_texture_compression_vtc */

#ifndef GL_NV_texture_env_combine4
#define GL_NV_texture_env_combine4 1
#define GL_COMBINE4_NV                    0x8503
#define GL_SOURCE3_RGB_NV                 0x8583
#define GL_SOURCE3_ALPHA_NV               0x858B
#define GL_OPERAND3_RGB_NV                0x8593
#define GL_OPERAND3_ALPHA_NV              0x859B
#endif /* GL_NV_texture_env_combine4 */

#ifndef GL_NV_texture_expand_normal
#define GL_NV_texture_expand_normal 1
#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV 0x888F
#endif /* GL_NV_texture_expand_normal */

#ifndef GL_NV_texture_multisample
#define GL_NV_texture_multisample 1
#define GL_TEXTURE_COVERAGE_SAMPLES_NV    0x9045
#define GL_TEXTURE_COLOR_SAMPLES_NV       0x9046
typedef void (GLAPIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (GLAPIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (GLAPIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (GLAPIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (GLAPIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (GLAPIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLLOADER_API extern void (GLAPIENTRYP glTexImage2DMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLLOADER_API extern void (GLAPIENTRYP glTexImage3DMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLLOADER_API extern void (GLAPIENTRYP glTextureImage2DMultisampleNV)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLLOADER_API extern void (GLAPIENTRYP glTextureImage3DMultisampleNV)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLLOADER_API extern void (GLAPIENTRYP glTextureImage2DMultisampleCoverageNV)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLLOADER_API extern void (GLAPIENTRYP glTextureImage3DMultisampleCoverageNV)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
#endif /* GL_NV_texture_multisample */

#ifndef GL_NV_texture_rectangle
#define GL_NV_texture_rectangle 1
#define GL_TEXTURE_RECTANGLE_NV           0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE_NV   0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE_NV     0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV  0x84F8
#endif /* GL_NV_texture_rectangle */

#ifndef GL_NV_texture_shader
#define GL_NV_texture_shader 1
#define GL_OFFSET_TEXTURE_RECTANGLE_NV    0x864C
#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
#define GL_UNSIGNED_INT_S8_S8_8_8_NV      0x86DA
#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV  0x86DB
#define GL_DSDT_MAG_INTENSITY_NV          0x86DC
#define GL_SHADER_CONSISTENT_NV           0x86DD
#define GL_TEXTURE_SHADER_NV              0x86DE
#define GL_SHADER_OPERATION_NV            0x86DF
#define GL_CULL_MODES_NV                  0x86E0
#define GL_OFFSET_TEXTURE_MATRIX_NV       0x86E1
#define GL_OFFSET_TEXTURE_SCALE_NV        0x86E2
#define GL_OFFSET_TEXTURE_BIAS_NV         0x86E3
#define GL_OFFSET_TEXTURE_2D_MATRIX_NV    0x86E1
#define GL_OFFSET_TEXTURE_2D_SCALE_NV     0x86E2
#define GL_OFFSET_TEXTURE_2D_BIAS_NV      0x86E3
#define GL_PREVIOUS_TEXTURE_INPUT_NV      0x86E4
#define GL_CONST_EYE_NV                   0x86E5
#define GL_PASS_THROUGH_NV                0x86E6
#define GL_CULL_FRAGMENT_NV               0x86E7
#define GL_OFFSET_TEXTURE_2D_NV           0x86E8
#define GL_DEPENDENT_AR_TEXTURE_2D_NV     0x86E9
#define GL_DEPENDENT_GB_TEXTURE_2D_NV     0x86EA
#define GL_DOT_PRODUCT_NV                 0x86EC
#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV   0x86ED
#define GL_DOT_PRODUCT_TEXTURE_2D_NV      0x86EE
#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
#define GL_HILO_NV                        0x86F4
#define GL_DSDT_NV                        0x86F5
#define GL_DSDT_MAG_NV                    0x86F6
#define GL_DSDT_MAG_VIB_NV                0x86F7
#define GL_HILO16_NV                      0x86F8
#define GL_SIGNED_HILO_NV                 0x86F9
#define GL_SIGNED_HILO16_NV               0x86FA
#define GL_SIGNED_RGBA_NV                 0x86FB
#define GL_SIGNED_RGBA8_NV                0x86FC
#define GL_SIGNED_RGB_NV                  0x86FE
#define GL_SIGNED_RGB8_NV                 0x86FF
#define GL_SIGNED_LUMINANCE_NV            0x8701
#define GL_SIGNED_LUMINANCE8_NV           0x8702
#define GL_SIGNED_LUMINANCE_ALPHA_NV      0x8703
#define GL_SIGNED_LUMINANCE8_ALPHA8_NV    0x8704
#define GL_SIGNED_ALPHA_NV                0x8705
#define GL_SIGNED_ALPHA8_NV               0x8706
#define GL_SIGNED_INTENSITY_NV            0x8707
#define GL_SIGNED_INTENSITY8_NV           0x8708
#define GL_DSDT8_NV                       0x8709
#define GL_DSDT8_MAG8_NV                  0x870A
#define GL_DSDT8_MAG8_INTENSITY8_NV       0x870B
#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV   0x870C
#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
#define GL_HI_SCALE_NV                    0x870E
#define GL_LO_SCALE_NV                    0x870F
#define GL_DS_SCALE_NV                    0x8710
#define GL_DT_SCALE_NV                    0x8711
#define GL_MAGNITUDE_SCALE_NV             0x8712
#define GL_VIBRANCE_SCALE_NV              0x8713
#define GL_HI_BIAS_NV                     0x8714
#define GL_LO_BIAS_NV                     0x8715
#define GL_DS_BIAS_NV                     0x8716
#define GL_DT_BIAS_NV                     0x8717
#define GL_MAGNITUDE_BIAS_NV              0x8718
#define GL_VIBRANCE_BIAS_NV               0x8719
#define GL_TEXTURE_BORDER_VALUES_NV       0x871A
#define GL_TEXTURE_HI_SIZE_NV             0x871B
#define GL_TEXTURE_LO_SIZE_NV             0x871C
#define GL_TEXTURE_DS_SIZE_NV             0x871D
#define GL_TEXTURE_DT_SIZE_NV             0x871E
#define GL_TEXTURE_MAG_SIZE_NV            0x871F
#endif /* GL_NV_texture_shader */

#ifndef GL_NV_texture_shader2
#define GL_NV_texture_shader2 1
#define GL_DOT_PRODUCT_TEXTURE_3D_NV      0x86EF
#endif /* GL_NV_texture_shader2 */

#ifndef GL_NV_texture_shader3
#define GL_NV_texture_shader3 1
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
#define GL_OFFSET_HILO_TEXTURE_2D_NV      0x8854
#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
#define GL_DEPENDENT_HILO_TEXTURE_2D_NV   0x8858
#define GL_DEPENDENT_RGB_TEXTURE_3D_NV    0x8859
#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
#define GL_DOT_PRODUCT_PASS_THROUGH_NV    0x885B
#define GL_DOT_PRODUCT_TEXTURE_1D_NV      0x885C
#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
#define GL_HILO8_NV                       0x885E
#define GL_SIGNED_HILO8_NV                0x885F
#define GL_FORCE_BLUE_TO_ONE_NV           0x8860
#endif /* GL_NV_texture_shader3 */

#ifndef GL_NV_transform_feedback
#define GL_NV_transform_feedback 1
#define GL_BACK_PRIMARY_COLOR_NV          0x8C77
#define GL_BACK_SECONDARY_COLOR_NV        0x8C78
#define GL_TEXTURE_COORD_NV               0x8C79
#define GL_CLIP_DISTANCE_NV               0x8C7A
#define GL_VERTEX_ID_NV                   0x8C7B
#define GL_PRIMITIVE_ID_NV                0x8C7C
#define GL_GENERIC_ATTRIB_NV              0x8C7D
#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV  0x8C7E
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#define GL_ACTIVE_VARYINGS_NV             0x8C81
#define GL_ACTIVE_VARYING_MAX_LENGTH_NV   0x8C82
#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#define GL_TRANSFORM_FEEDBACK_RECORD_NV   0x8C86
#define GL_PRIMITIVES_GENERATED_NV        0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#define GL_RASTERIZER_DISCARD_NV          0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#define GL_INTERLEAVED_ATTRIBS_NV         0x8C8C
#define GL_SEPARATE_ATTRIBS_NV            0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER_NV   0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#define GL_LAYER_NV                       0x8DAA
#define GL_NEXT_BUFFER_NV                 -2
#define GL_SKIP_COMPONENTS4_NV            -3
#define GL_SKIP_COMPONENTS3_NV            -4
#define GL_SKIP_COMPONENTS2_NV            -5
#define GL_SKIP_COMPONENTS1_NV            -6
typedef void (GLAPIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
typedef void (GLAPIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);
typedef void (GLAPIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLenum bufferMode);
typedef void (GLAPIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAPIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (GLAPIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (GLAPIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
typedef void (GLAPIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
typedef GLint(GLAPIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
typedef void (GLAPIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
typedef void (GLAPIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
GLLOADER_API extern void (GLAPIENTRYP glBeginTransformFeedbackNV)(GLenum primitiveMode);
GLLOADER_API extern void (GLAPIENTRYP glEndTransformFeedbackNV)(void);
GLLOADER_API extern void (GLAPIENTRYP glTransformFeedbackAttribsNV)(GLsizei count, const GLint *attribs, GLenum bufferMode);
GLLOADER_API extern void (GLAPIENTRYP glBindBufferRangeNV)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API extern void (GLAPIENTRYP glBindBufferOffsetNV)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLLOADER_API extern void (GLAPIENTRYP glBindBufferBaseNV)(GLenum target, GLuint index, GLuint buffer);
GLLOADER_API extern void (GLAPIENTRYP glTransformFeedbackVaryingsNV)(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
GLLOADER_API extern void (GLAPIENTRYP glActiveVaryingNV)(GLuint program, const GLchar *name);
GLLOADER_API extern GLint(GLAPIENTRYP glGetVaryingLocationNV)(GLuint program, const GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetActiveVaryingNV)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
GLLOADER_API extern void (GLAPIENTRYP glGetTransformFeedbackVaryingNV)(GLuint program, GLuint index, GLint *location);
GLLOADER_API extern void (GLAPIENTRYP glTransformFeedbackStreamAttribsNV)(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif /* GL_NV_transform_feedback */

#ifndef GL_NV_transform_feedback2
#define GL_NV_transform_feedback2 1
#define GL_TRANSFORM_FEEDBACK_NV          0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING_NV  0x8E25
typedef void (GLAPIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
typedef void (GLAPIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
typedef void (GLAPIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
typedef GLboolean(GLAPIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);
typedef void (GLAPIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);
typedef void (GLAPIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glBindTransformFeedbackNV)(GLenum target, GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glDeleteTransformFeedbacksNV)(GLsizei n, const GLuint *ids);
GLLOADER_API extern void (GLAPIENTRYP glGenTransformFeedbacksNV)(GLsizei n, GLuint *ids);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsTransformFeedbackNV)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glPauseTransformFeedbackNV)(void);
GLLOADER_API extern void (GLAPIENTRYP glResumeTransformFeedbackNV)(void);
GLLOADER_API extern void (GLAPIENTRYP glDrawTransformFeedbackNV)(GLenum mode, GLuint id);
#endif /* GL_NV_transform_feedback2 */

#ifndef GL_NV_uniform_buffer_unified_memory
#define GL_NV_uniform_buffer_unified_memory 1
#define GL_UNIFORM_BUFFER_UNIFIED_NV      0x936E
#define GL_UNIFORM_BUFFER_ADDRESS_NV      0x936F
#define GL_UNIFORM_BUFFER_LENGTH_NV       0x9370
#endif /* GL_NV_uniform_buffer_unified_memory */

#ifndef GL_NV_vdpau_interop
#define GL_NV_vdpau_interop 1
typedef GLintptr GLvdpauSurfaceNV;
#define GL_SURFACE_STATE_NV               0x86EB
#define GL_SURFACE_REGISTERED_NV          0x86FD
#define GL_SURFACE_MAPPED_NV              0x8700
#define GL_WRITE_DISCARD_NV               0x88BE
typedef void (GLAPIENTRYP PFNGLVDPAUINITNVPROC) (const void *vdpDevice, const void *getProcAddress);
typedef void (GLAPIENTRYP PFNGLVDPAUFININVPROC) (void);
typedef GLvdpauSurfaceNV(GLAPIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
typedef GLvdpauSurfaceNV(GLAPIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
typedef GLboolean(GLAPIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);
typedef void (GLAPIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);
typedef void (GLAPIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
typedef void (GLAPIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access);
typedef void (GLAPIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
typedef void (GLAPIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
GLLOADER_API extern void (GLAPIENTRYP glVDPAUInitNV)(const void *vdpDevice, const void *getProcAddress);
GLLOADER_API extern void (GLAPIENTRYP glVDPAUFiniNV)(void);
GLLOADER_API extern GLvdpauSurfaceNV(GLAPIENTRYP glVDPAURegisterVideoSurfaceNV)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLLOADER_API extern GLvdpauSurfaceNV(GLAPIENTRYP glVDPAURegisterOutputSurfaceNV)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLLOADER_API extern GLboolean(GLAPIENTRYP glVDPAUIsSurfaceNV)(GLvdpauSurfaceNV surface);
GLLOADER_API extern void (GLAPIENTRYP glVDPAUUnregisterSurfaceNV)(GLvdpauSurfaceNV surface);
GLLOADER_API extern void (GLAPIENTRYP glVDPAUGetSurfaceivNV)(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
GLLOADER_API extern void (GLAPIENTRYP glVDPAUSurfaceAccessNV)(GLvdpauSurfaceNV surface, GLenum access);
GLLOADER_API extern void (GLAPIENTRYP glVDPAUMapSurfacesNV)(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
GLLOADER_API extern void (GLAPIENTRYP glVDPAUUnmapSurfacesNV)(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
#endif /* GL_NV_vdpau_interop */

#ifndef GL_NV_vertex_array_range
#define GL_NV_vertex_array_range 1
#define GL_VERTEX_ARRAY_RANGE_NV          0x851D
#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV   0x851E
#define GL_VERTEX_ARRAY_RANGE_VALID_NV    0x851F
#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
#define GL_VERTEX_ARRAY_RANGE_POINTER_NV  0x8521
typedef void (GLAPIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);
typedef void (GLAPIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glFlushVertexArrayRangeNV)(void);
GLLOADER_API extern void (GLAPIENTRYP glVertexArrayRangeNV)(GLsizei length, const void *pointer);
#endif /* GL_NV_vertex_array_range */

#ifndef GL_NV_vertex_array_range2
#define GL_NV_vertex_array_range2 1
#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533
#endif /* GL_NV_vertex_array_range2 */

#ifndef GL_NV_vertex_attrib_integer_64bit
#define GL_NV_vertex_attrib_integer_64bit 1
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1i64NV)(GLuint index, GLint64EXT x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL2i64NV)(GLuint index, GLint64EXT x, GLint64EXT y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL3i64NV)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL4i64NV)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1i64vNV)(GLuint index, const GLint64EXT *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL2i64vNV)(GLuint index, const GLint64EXT *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL3i64vNV)(GLuint index, const GLint64EXT *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL4i64vNV)(GLuint index, const GLint64EXT *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1ui64NV)(GLuint index, GLuint64EXT x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL2ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL3ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL4ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL1ui64vNV)(GLuint index, const GLuint64EXT *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL2ui64vNV)(GLuint index, const GLuint64EXT *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL3ui64vNV)(GLuint index, const GLuint64EXT *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribL4ui64vNV)(GLuint index, const GLuint64EXT *v);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribLi64vNV)(GLuint index, GLenum pname, GLint64EXT *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribLui64vNV)(GLuint index, GLenum pname, GLuint64EXT *params);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribLFormatNV)(GLuint index, GLint size, GLenum type, GLsizei stride);
#endif /* GL_NV_vertex_attrib_integer_64bit */

#ifndef GL_NV_vertex_buffer_unified_memory
#define GL_NV_vertex_buffer_unified_memory 1
#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#define GL_ELEMENT_ARRAY_UNIFIED_NV       0x8F1F
#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#define GL_VERTEX_ARRAY_ADDRESS_NV        0x8F21
#define GL_NORMAL_ARRAY_ADDRESS_NV        0x8F22
#define GL_COLOR_ARRAY_ADDRESS_NV         0x8F23
#define GL_INDEX_ARRAY_ADDRESS_NV         0x8F24
#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV     0x8F26
#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#define GL_FOG_COORD_ARRAY_ADDRESS_NV     0x8F28
#define GL_ELEMENT_ARRAY_ADDRESS_NV       0x8F29
#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV  0x8F2A
#define GL_VERTEX_ARRAY_LENGTH_NV         0x8F2B
#define GL_NORMAL_ARRAY_LENGTH_NV         0x8F2C
#define GL_COLOR_ARRAY_LENGTH_NV          0x8F2D
#define GL_INDEX_ARRAY_LENGTH_NV          0x8F2E
#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV  0x8F2F
#define GL_EDGE_FLAG_ARRAY_LENGTH_NV      0x8F30
#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#define GL_FOG_COORD_ARRAY_LENGTH_NV      0x8F32
#define GL_ELEMENT_ARRAY_LENGTH_NV        0x8F33
#define GL_DRAW_INDIRECT_UNIFIED_NV       0x8F40
#define GL_DRAW_INDIRECT_ADDRESS_NV       0x8F41
#define GL_DRAW_INDIRECT_LENGTH_NV        0x8F42
typedef void (GLAPIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
typedef void (GLAPIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);
typedef void (GLAPIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (GLAPIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
GLLOADER_API extern void (GLAPIENTRYP glBufferAddressRangeNV)(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
GLLOADER_API extern void (GLAPIENTRYP glVertexFormatNV)(GLint size, GLenum type, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glNormalFormatNV)(GLenum type, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glColorFormatNV)(GLint size, GLenum type, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glIndexFormatNV)(GLenum type, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glTexCoordFormatNV)(GLint size, GLenum type, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glEdgeFlagFormatNV)(GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glSecondaryColorFormatNV)(GLint size, GLenum type, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glFogCoordFormatNV)(GLenum type, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribFormatNV)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribIFormatNV)(GLuint index, GLint size, GLenum type, GLsizei stride);
GLLOADER_API extern void (GLAPIENTRYP glGetIntegerui64i_vNV)(GLenum value, GLuint index, GLuint64EXT *result);
#endif /* GL_NV_vertex_buffer_unified_memory */

#ifndef GL_NV_vertex_program
#define GL_NV_vertex_program 1
#define GL_VERTEX_PROGRAM_NV              0x8620
#define GL_VERTEX_STATE_PROGRAM_NV        0x8621
#define GL_ATTRIB_ARRAY_SIZE_NV           0x8623
#define GL_ATTRIB_ARRAY_STRIDE_NV         0x8624
#define GL_ATTRIB_ARRAY_TYPE_NV           0x8625
#define GL_CURRENT_ATTRIB_NV              0x8626
#define GL_PROGRAM_LENGTH_NV              0x8627
#define GL_PROGRAM_STRING_NV              0x8628
#define GL_MODELVIEW_PROJECTION_NV        0x8629
#define GL_IDENTITY_NV                    0x862A
#define GL_INVERSE_NV                     0x862B
#define GL_TRANSPOSE_NV                   0x862C
#define GL_INVERSE_TRANSPOSE_NV           0x862D
#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
#define GL_MAX_TRACK_MATRICES_NV          0x862F
#define GL_MATRIX0_NV                     0x8630
#define GL_MATRIX1_NV                     0x8631
#define GL_MATRIX2_NV                     0x8632
#define GL_MATRIX3_NV                     0x8633
#define GL_MATRIX4_NV                     0x8634
#define GL_MATRIX5_NV                     0x8635
#define GL_MATRIX6_NV                     0x8636
#define GL_MATRIX7_NV                     0x8637
#define GL_CURRENT_MATRIX_STACK_DEPTH_NV  0x8640
#define GL_CURRENT_MATRIX_NV              0x8641
#define GL_VERTEX_PROGRAM_POINT_SIZE_NV   0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE_NV     0x8643
#define GL_PROGRAM_PARAMETER_NV           0x8644
#define GL_ATTRIB_ARRAY_POINTER_NV        0x8645
#define GL_PROGRAM_TARGET_NV              0x8646
#define GL_PROGRAM_RESIDENT_NV            0x8647
#define GL_TRACK_MATRIX_NV                0x8648
#define GL_TRACK_MATRIX_TRANSFORM_NV      0x8649
#define GL_VERTEX_PROGRAM_BINDING_NV      0x864A
#define GL_PROGRAM_ERROR_POSITION_NV      0x864B
#define GL_VERTEX_ATTRIB_ARRAY0_NV        0x8650
#define GL_VERTEX_ATTRIB_ARRAY1_NV        0x8651
#define GL_VERTEX_ATTRIB_ARRAY2_NV        0x8652
#define GL_VERTEX_ATTRIB_ARRAY3_NV        0x8653
#define GL_VERTEX_ATTRIB_ARRAY4_NV        0x8654
#define GL_VERTEX_ATTRIB_ARRAY5_NV        0x8655
#define GL_VERTEX_ATTRIB_ARRAY6_NV        0x8656
#define GL_VERTEX_ATTRIB_ARRAY7_NV        0x8657
#define GL_VERTEX_ATTRIB_ARRAY8_NV        0x8658
#define GL_VERTEX_ATTRIB_ARRAY9_NV        0x8659
#define GL_VERTEX_ATTRIB_ARRAY10_NV       0x865A
#define GL_VERTEX_ATTRIB_ARRAY11_NV       0x865B
#define GL_VERTEX_ATTRIB_ARRAY12_NV       0x865C
#define GL_VERTEX_ATTRIB_ARRAY13_NV       0x865D
#define GL_VERTEX_ATTRIB_ARRAY14_NV       0x865E
#define GL_VERTEX_ATTRIB_ARRAY15_NV       0x865F
#define GL_MAP1_VERTEX_ATTRIB0_4_NV       0x8660
#define GL_MAP1_VERTEX_ATTRIB1_4_NV       0x8661
#define GL_MAP1_VERTEX_ATTRIB2_4_NV       0x8662
#define GL_MAP1_VERTEX_ATTRIB3_4_NV       0x8663
#define GL_MAP1_VERTEX_ATTRIB4_4_NV       0x8664
#define GL_MAP1_VERTEX_ATTRIB5_4_NV       0x8665
#define GL_MAP1_VERTEX_ATTRIB6_4_NV       0x8666
#define GL_MAP1_VERTEX_ATTRIB7_4_NV       0x8667
#define GL_MAP1_VERTEX_ATTRIB8_4_NV       0x8668
#define GL_MAP1_VERTEX_ATTRIB9_4_NV       0x8669
#define GL_MAP1_VERTEX_ATTRIB10_4_NV      0x866A
#define GL_MAP1_VERTEX_ATTRIB11_4_NV      0x866B
#define GL_MAP1_VERTEX_ATTRIB12_4_NV      0x866C
#define GL_MAP1_VERTEX_ATTRIB13_4_NV      0x866D
#define GL_MAP1_VERTEX_ATTRIB14_4_NV      0x866E
#define GL_MAP1_VERTEX_ATTRIB15_4_NV      0x866F
#define GL_MAP2_VERTEX_ATTRIB0_4_NV       0x8670
#define GL_MAP2_VERTEX_ATTRIB1_4_NV       0x8671
#define GL_MAP2_VERTEX_ATTRIB2_4_NV       0x8672
#define GL_MAP2_VERTEX_ATTRIB3_4_NV       0x8673
#define GL_MAP2_VERTEX_ATTRIB4_4_NV       0x8674
#define GL_MAP2_VERTEX_ATTRIB5_4_NV       0x8675
#define GL_MAP2_VERTEX_ATTRIB6_4_NV       0x8676
#define GL_MAP2_VERTEX_ATTRIB7_4_NV       0x8677
#define GL_MAP2_VERTEX_ATTRIB8_4_NV       0x8678
#define GL_MAP2_VERTEX_ATTRIB9_4_NV       0x8679
#define GL_MAP2_VERTEX_ATTRIB10_4_NV      0x867A
#define GL_MAP2_VERTEX_ATTRIB11_4_NV      0x867B
#define GL_MAP2_VERTEX_ATTRIB12_4_NV      0x867C
#define GL_MAP2_VERTEX_ATTRIB13_4_NV      0x867D
#define GL_MAP2_VERTEX_ATTRIB14_4_NV      0x867E
#define GL_MAP2_VERTEX_ATTRIB15_4_NV      0x867F
typedef GLboolean(GLAPIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);
typedef void (GLAPIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);
typedef void (GLAPIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);
typedef void (GLAPIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);
typedef void (GLAPIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void **pointer);
typedef GLboolean(GLAPIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);
typedef void (GLAPIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);
typedef void (GLAPIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);
typedef void (GLAPIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);
GLLOADER_API extern GLboolean(GLAPIENTRYP glAreProgramsResidentNV)(GLsizei n, const GLuint *programs, GLboolean *residences);
GLLOADER_API extern void (GLAPIENTRYP glBindProgramNV)(GLenum target, GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glDeleteProgramsNV)(GLsizei n, const GLuint *programs);
GLLOADER_API extern void (GLAPIENTRYP glExecuteProgramNV)(GLenum target, GLuint id, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGenProgramsNV)(GLsizei n, GLuint *programs);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramParameterdvNV)(GLenum target, GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramParameterfvNV)(GLenum target, GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramivNV)(GLuint id, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetProgramStringNV)(GLuint id, GLenum pname, GLubyte *program);
GLLOADER_API extern void (GLAPIENTRYP glGetTrackMatrixivNV)(GLenum target, GLuint address, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribdvNV)(GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribfvNV)(GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribivNV)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribPointervNV)(GLuint index, GLenum pname, void **pointer);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsProgramNV)(GLuint id);
GLLOADER_API extern void (GLAPIENTRYP glLoadProgramNV)(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
GLLOADER_API extern void (GLAPIENTRYP glProgramParameter4dNV)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glProgramParameter4dvNV)(GLenum target, GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glProgramParameter4fNV)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glProgramParameter4fvNV)(GLenum target, GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glProgramParameters4dvNV)(GLenum target, GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glProgramParameters4fvNV)(GLenum target, GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glRequestResidentProgramsNV)(GLsizei n, const GLuint *programs);
GLLOADER_API extern void (GLAPIENTRYP glTrackMatrixNV)(GLenum target, GLuint address, GLenum matrix, GLenum transform);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribPointerNV)(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1dNV)(GLuint index, GLdouble x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1dvNV)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1fNV)(GLuint index, GLfloat x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1fvNV)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1sNV)(GLuint index, GLshort x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib1svNV)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2dNV)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2dvNV)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2fNV)(GLuint index, GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2fvNV)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2sNV)(GLuint index, GLshort x, GLshort y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib2svNV)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3dNV)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3dvNV)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3fNV)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3fvNV)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3sNV)(GLuint index, GLshort x, GLshort y, GLshort z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib3svNV)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4dNV)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4dvNV)(GLuint index, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4fNV)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4fvNV)(GLuint index, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4sNV)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4svNV)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4ubNV)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttrib4ubvNV)(GLuint index, const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs1dvNV)(GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs1fvNV)(GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs1svNV)(GLuint index, GLsizei count, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs2dvNV)(GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs2fvNV)(GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs2svNV)(GLuint index, GLsizei count, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs3dvNV)(GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs3fvNV)(GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs3svNV)(GLuint index, GLsizei count, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs4dvNV)(GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs4fvNV)(GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs4svNV)(GLuint index, GLsizei count, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribs4ubvNV)(GLuint index, GLsizei count, const GLubyte *v);
#endif /* GL_NV_vertex_program */

#ifndef GL_NV_vertex_program1_1
#define GL_NV_vertex_program1_1 1
#endif /* GL_NV_vertex_program1_1 */

#ifndef GL_NV_vertex_program2
#define GL_NV_vertex_program2 1
#endif /* GL_NV_vertex_program2 */

#ifndef GL_NV_vertex_program2_option
#define GL_NV_vertex_program2_option 1
#endif /* GL_NV_vertex_program2_option */

#ifndef GL_NV_vertex_program3
#define GL_NV_vertex_program3 1
#endif /* GL_NV_vertex_program3 */

#ifndef GL_NV_vertex_program4
#define GL_NV_vertex_program4 1
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);
typedef void (GLAPIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI1iEXT)(GLuint index, GLint x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI2iEXT)(GLuint index, GLint x, GLint y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI3iEXT)(GLuint index, GLint x, GLint y, GLint z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4iEXT)(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI1uiEXT)(GLuint index, GLuint x);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI2uiEXT)(GLuint index, GLuint x, GLuint y);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI3uiEXT)(GLuint index, GLuint x, GLuint y, GLuint z);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4uiEXT)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI1ivEXT)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI2ivEXT)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI3ivEXT)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4ivEXT)(GLuint index, const GLint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI1uivEXT)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI2uivEXT)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI3uivEXT)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4uivEXT)(GLuint index, const GLuint *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4bvEXT)(GLuint index, const GLbyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4svEXT)(GLuint index, const GLshort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4ubvEXT)(GLuint index, const GLubyte *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribI4usvEXT)(GLuint index, const GLushort *v);
GLLOADER_API extern void (GLAPIENTRYP glVertexAttribIPointerEXT)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribIivEXT)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVertexAttribIuivEXT)(GLuint index, GLenum pname, GLuint *params);
#endif /* GL_NV_vertex_program4 */

#ifndef GL_NV_video_capture
#define GL_NV_video_capture 1
#define GL_VIDEO_BUFFER_NV                0x9020
#define GL_VIDEO_BUFFER_BINDING_NV        0x9021
#define GL_FIELD_UPPER_NV                 0x9022
#define GL_FIELD_LOWER_NV                 0x9023
#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV   0x9024
#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV 0x9025
#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV 0x9026
#define GL_LAST_VIDEO_CAPTURE_STATUS_NV   0x9027
#define GL_VIDEO_BUFFER_PITCH_NV          0x9028
#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029
#define GL_VIDEO_COLOR_CONVERSION_MAX_NV  0x902A
#define GL_VIDEO_COLOR_CONVERSION_MIN_NV  0x902B
#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C
#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D
#define GL_PARTIAL_SUCCESS_NV             0x902E
#define GL_SUCCESS_NV                     0x902F
#define GL_FAILURE_NV                     0x9030
#define GL_YCBYCR8_422_NV                 0x9031
#define GL_YCBAYCR8A_4224_NV              0x9032
#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV  0x9033
#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV 0x9034
#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV  0x9035
#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV 0x9036
#define GL_Z4Y12Z4CB12Z4CR12_444_NV       0x9037
#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV   0x9038
#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV  0x9039
#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV 0x903A
#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV 0x903B
#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV 0x903C
typedef void (GLAPIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);
typedef void (GLAPIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
typedef void (GLAPIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
typedef void (GLAPIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);
typedef void (GLAPIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);
typedef GLenum(GLAPIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);
typedef void (GLAPIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);
GLLOADER_API extern void (GLAPIENTRYP glBeginVideoCaptureNV)(GLuint video_capture_slot);
GLLOADER_API extern void (GLAPIENTRYP glBindVideoCaptureStreamBufferNV)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
GLLOADER_API extern void (GLAPIENTRYP glBindVideoCaptureStreamTextureNV)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
GLLOADER_API extern void (GLAPIENTRYP glEndVideoCaptureNV)(GLuint video_capture_slot);
GLLOADER_API extern void (GLAPIENTRYP glGetVideoCaptureivNV)(GLuint video_capture_slot, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVideoCaptureStreamivNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVideoCaptureStreamfvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetVideoCaptureStreamdvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);
GLLOADER_API extern GLenum(GLAPIENTRYP glVideoCaptureNV)(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);
GLLOADER_API extern void (GLAPIENTRYP glVideoCaptureStreamParameterivNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glVideoCaptureStreamParameterfvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glVideoCaptureStreamParameterdvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);
#endif /* GL_NV_video_capture */

#ifndef GL_NV_viewport_array2
#define GL_NV_viewport_array2 1
#endif /* GL_NV_viewport_array2 */

#ifndef GL_OML_interlace
#define GL_OML_interlace 1
#define GL_INTERLACE_OML                  0x8980
#define GL_INTERLACE_READ_OML             0x8981
#endif /* GL_OML_interlace */

#ifndef GL_OML_resample
#define GL_OML_resample 1
#define GL_PACK_RESAMPLE_OML              0x8984
#define GL_UNPACK_RESAMPLE_OML            0x8985
#define GL_RESAMPLE_REPLICATE_OML         0x8986
#define GL_RESAMPLE_ZERO_FILL_OML         0x8987
#define GL_RESAMPLE_AVERAGE_OML           0x8988
#define GL_RESAMPLE_DECIMATE_OML          0x8989
#endif /* GL_OML_resample */

#ifndef GL_OML_subsample
#define GL_OML_subsample 1
#define GL_FORMAT_SUBSAMPLE_24_24_OML     0x8982
#define GL_FORMAT_SUBSAMPLE_244_244_OML   0x8983
#endif /* GL_OML_subsample */

#ifndef GL_OVR_multiview
#define GL_OVR_multiview 1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR 0x9630
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR 0x9632
#define GL_MAX_VIEWS_OVR                  0x9631
typedef void (GLAPIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
GLLOADER_API extern void (GLAPIENTRYP glFramebufferTextureMultiviewOVR)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
#endif /* GL_OVR_multiview */

#ifndef GL_OVR_multiview2
#define GL_OVR_multiview2 1
#endif /* GL_OVR_multiview2 */

#ifndef GL_PGI_misc_hints
#define GL_PGI_misc_hints 1
#define GL_PREFER_DOUBLEBUFFER_HINT_PGI   0x1A1F8
#define GL_CONSERVE_MEMORY_HINT_PGI       0x1A1FD
#define GL_RECLAIM_MEMORY_HINT_PGI        0x1A1FE
#define GL_NATIVE_GRAPHICS_HANDLE_PGI     0x1A202
#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203
#define GL_NATIVE_GRAPHICS_END_HINT_PGI   0x1A204
#define GL_ALWAYS_FAST_HINT_PGI           0x1A20C
#define GL_ALWAYS_SOFT_HINT_PGI           0x1A20D
#define GL_ALLOW_DRAW_OBJ_HINT_PGI        0x1A20E
#define GL_ALLOW_DRAW_WIN_HINT_PGI        0x1A20F
#define GL_ALLOW_DRAW_FRG_HINT_PGI        0x1A210
#define GL_ALLOW_DRAW_MEM_HINT_PGI        0x1A211
#define GL_STRICT_DEPTHFUNC_HINT_PGI      0x1A216
#define GL_STRICT_LIGHTING_HINT_PGI       0x1A217
#define GL_STRICT_SCISSOR_HINT_PGI        0x1A218
#define GL_FULL_STIPPLE_HINT_PGI          0x1A219
#define GL_CLIP_NEAR_HINT_PGI             0x1A220
#define GL_CLIP_FAR_HINT_PGI              0x1A221
#define GL_WIDE_LINE_HINT_PGI             0x1A222
#define GL_BACK_NORMALS_HINT_PGI          0x1A223
typedef void (GLAPIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);
GLLOADER_API extern void (GLAPIENTRYP glHintPGI)(GLenum target, GLint mode);
#endif /* GL_PGI_misc_hints */

#ifndef GL_PGI_vertex_hints
#define GL_PGI_vertex_hints 1
#define GL_VERTEX_DATA_HINT_PGI           0x1A22A
#define GL_VERTEX_CONSISTENT_HINT_PGI     0x1A22B
#define GL_MATERIAL_SIDE_HINT_PGI         0x1A22C
#define GL_MAX_VERTEX_HINT_PGI            0x1A22D
#define GL_COLOR3_BIT_PGI                 0x00010000
#define GL_COLOR4_BIT_PGI                 0x00020000
#define GL_EDGEFLAG_BIT_PGI               0x00040000
#define GL_INDEX_BIT_PGI                  0x00080000
#define GL_MAT_AMBIENT_BIT_PGI            0x00100000
#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000
#define GL_MAT_DIFFUSE_BIT_PGI            0x00400000
#define GL_MAT_EMISSION_BIT_PGI           0x00800000
#define GL_MAT_COLOR_INDEXES_BIT_PGI      0x01000000
#define GL_MAT_SHININESS_BIT_PGI          0x02000000
#define GL_MAT_SPECULAR_BIT_PGI           0x04000000
#define GL_NORMAL_BIT_PGI                 0x08000000
#define GL_TEXCOORD1_BIT_PGI              0x10000000
#define GL_TEXCOORD2_BIT_PGI              0x20000000
#define GL_TEXCOORD3_BIT_PGI              0x40000000
#define GL_TEXCOORD4_BIT_PGI              0x80000000
#define GL_VERTEX23_BIT_PGI               0x00000004
#define GL_VERTEX4_BIT_PGI                0x00000008
#endif /* GL_PGI_vertex_hints */

#ifndef GL_REND_screen_coordinates
#define GL_REND_screen_coordinates 1
#define GL_SCREEN_COORDINATES_REND        0x8490
#define GL_INVERTED_SCREEN_W_REND         0x8491
#endif /* GL_REND_screen_coordinates */

#ifndef GL_S3_s3tc
#define GL_S3_s3tc 1
#define GL_RGB_S3TC                       0x83A0
#define GL_RGB4_S3TC                      0x83A1
#define GL_RGBA_S3TC                      0x83A2
#define GL_RGBA4_S3TC                     0x83A3
#define GL_RGBA_DXT5_S3TC                 0x83A4
#define GL_RGBA4_DXT5_S3TC                0x83A5
#endif /* GL_S3_s3tc */

#ifndef GL_SGIS_detail_texture
#define GL_SGIS_detail_texture 1
#define GL_DETAIL_TEXTURE_2D_SGIS         0x8095
#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
#define GL_LINEAR_DETAIL_SGIS             0x8097
#define GL_LINEAR_DETAIL_ALPHA_SGIS       0x8098
#define GL_LINEAR_DETAIL_COLOR_SGIS       0x8099
#define GL_DETAIL_TEXTURE_LEVEL_SGIS      0x809A
#define GL_DETAIL_TEXTURE_MODE_SGIS       0x809B
#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
typedef void (GLAPIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);
typedef void (GLAPIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glDetailTexFuncSGIS)(GLenum target, GLsizei n, const GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glGetDetailTexFuncSGIS)(GLenum target, GLfloat *points);
#endif /* GL_SGIS_detail_texture */

#ifndef GL_SGIS_fog_function
#define GL_SGIS_fog_function 1
#define GL_FOG_FUNC_SGIS                  0x812A
#define GL_FOG_FUNC_POINTS_SGIS           0x812B
#define GL_MAX_FOG_FUNC_POINTS_SGIS       0x812C
typedef void (GLAPIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);
typedef void (GLAPIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glFogFuncSGIS)(GLsizei n, const GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glGetFogFuncSGIS)(GLfloat *points);
#endif /* GL_SGIS_fog_function */

#ifndef GL_SGIS_generate_mipmap
#define GL_SGIS_generate_mipmap 1
#define GL_GENERATE_MIPMAP_SGIS           0x8191
#define GL_GENERATE_MIPMAP_HINT_SGIS      0x8192
#endif /* GL_SGIS_generate_mipmap */

#ifndef GL_SGIS_multisample
#define GL_SGIS_multisample 1
#define GL_MULTISAMPLE_SGIS               0x809D
#define GL_SAMPLE_ALPHA_TO_MASK_SGIS      0x809E
#define GL_SAMPLE_ALPHA_TO_ONE_SGIS       0x809F
#define GL_SAMPLE_MASK_SGIS               0x80A0
#define GL_1PASS_SGIS                     0x80A1
#define GL_2PASS_0_SGIS                   0x80A2
#define GL_2PASS_1_SGIS                   0x80A3
#define GL_4PASS_0_SGIS                   0x80A4
#define GL_4PASS_1_SGIS                   0x80A5
#define GL_4PASS_2_SGIS                   0x80A6
#define GL_4PASS_3_SGIS                   0x80A7
#define GL_SAMPLE_BUFFERS_SGIS            0x80A8
#define GL_SAMPLES_SGIS                   0x80A9
#define GL_SAMPLE_MASK_VALUE_SGIS         0x80AA
#define GL_SAMPLE_MASK_INVERT_SGIS        0x80AB
#define GL_SAMPLE_PATTERN_SGIS            0x80AC
typedef void (GLAPIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);
typedef void (GLAPIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);
GLLOADER_API extern void (GLAPIENTRYP glSampleMaskSGIS)(GLclampf value, GLboolean invert);
GLLOADER_API extern void (GLAPIENTRYP glSamplePatternSGIS)(GLenum pattern);
#endif /* GL_SGIS_multisample */

#ifndef GL_SGIS_pixel_texture
#define GL_SGIS_pixel_texture 1
#define GL_PIXEL_TEXTURE_SGIS             0x8353
#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
#define GL_PIXEL_GROUP_COLOR_SGIS         0x8356
typedef void (GLAPIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glPixelTexGenParameteriSGIS)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glPixelTexGenParameterivSGIS)(GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glPixelTexGenParameterfSGIS)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPixelTexGenParameterfvSGIS)(GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetPixelTexGenParameterivSGIS)(GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetPixelTexGenParameterfvSGIS)(GLenum pname, GLfloat *params);
#endif /* GL_SGIS_pixel_texture */

#ifndef GL_SGIS_point_line_texgen
#define GL_SGIS_point_line_texgen 1
#define GL_EYE_DISTANCE_TO_POINT_SGIS     0x81F0
#define GL_OBJECT_DISTANCE_TO_POINT_SGIS  0x81F1
#define GL_EYE_DISTANCE_TO_LINE_SGIS      0x81F2
#define GL_OBJECT_DISTANCE_TO_LINE_SGIS   0x81F3
#define GL_EYE_POINT_SGIS                 0x81F4
#define GL_OBJECT_POINT_SGIS              0x81F5
#define GL_EYE_LINE_SGIS                  0x81F6
#define GL_OBJECT_LINE_SGIS               0x81F7
#endif /* GL_SGIS_point_line_texgen */

#ifndef GL_SGIS_point_parameters
#define GL_SGIS_point_parameters 1
#define GL_POINT_SIZE_MIN_SGIS            0x8126
#define GL_POINT_SIZE_MAX_SGIS            0x8127
#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
#define GL_DISTANCE_ATTENUATION_SGIS      0x8129
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterfSGIS)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glPointParameterfvSGIS)(GLenum pname, const GLfloat *params);
#endif /* GL_SGIS_point_parameters */

#ifndef GL_SGIS_sharpen_texture
#define GL_SGIS_sharpen_texture 1
#define GL_LINEAR_SHARPEN_SGIS            0x80AD
#define GL_LINEAR_SHARPEN_ALPHA_SGIS      0x80AE
#define GL_LINEAR_SHARPEN_COLOR_SGIS      0x80AF
#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
typedef void (GLAPIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);
typedef void (GLAPIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glSharpenTexFuncSGIS)(GLenum target, GLsizei n, const GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glGetSharpenTexFuncSGIS)(GLenum target, GLfloat *points);
#endif /* GL_SGIS_sharpen_texture */

#ifndef GL_SGIS_texture4D
#define GL_SGIS_texture4D 1
#define GL_PACK_SKIP_VOLUMES_SGIS         0x8130
#define GL_PACK_IMAGE_DEPTH_SGIS          0x8131
#define GL_UNPACK_SKIP_VOLUMES_SGIS       0x8132
#define GL_UNPACK_IMAGE_DEPTH_SGIS        0x8133
#define GL_TEXTURE_4D_SGIS                0x8134
#define GL_PROXY_TEXTURE_4D_SGIS          0x8135
#define GL_TEXTURE_4DSIZE_SGIS            0x8136
#define GL_TEXTURE_WRAP_Q_SGIS            0x8137
#define GL_MAX_4D_TEXTURE_SIZE_SGIS       0x8138
#define GL_TEXTURE_4D_BINDING_SGIS        0x814F
typedef void (GLAPIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (GLAPIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexImage4DSGIS)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API extern void (GLAPIENTRYP glTexSubImage4DSGIS)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);
#endif /* GL_SGIS_texture4D */

#ifndef GL_SGIS_texture_border_clamp
#define GL_SGIS_texture_border_clamp 1
#define GL_CLAMP_TO_BORDER_SGIS           0x812D
#endif /* GL_SGIS_texture_border_clamp */

#ifndef GL_SGIS_texture_color_mask
#define GL_SGIS_texture_color_mask 1
#define GL_TEXTURE_COLOR_WRITEMASK_SGIS   0x81EF
typedef void (GLAPIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLLOADER_API extern void (GLAPIENTRYP glTextureColorMaskSGIS)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
#endif /* GL_SGIS_texture_color_mask */

#ifndef GL_SGIS_texture_edge_clamp
#define GL_SGIS_texture_edge_clamp 1
#define GL_CLAMP_TO_EDGE_SGIS             0x812F
#endif /* GL_SGIS_texture_edge_clamp */

#ifndef GL_SGIS_texture_filter4
#define GL_SGIS_texture_filter4 1
#define GL_FILTER4_SGIS                   0x8146
#define GL_TEXTURE_FILTER4_SIZE_SGIS      0x8147
typedef void (GLAPIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);
typedef void (GLAPIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);
GLLOADER_API extern void (GLAPIENTRYP glGetTexFilterFuncSGIS)(GLenum target, GLenum filter, GLfloat *weights);
GLLOADER_API extern void (GLAPIENTRYP glTexFilterFuncSGIS)(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);
#endif /* GL_SGIS_texture_filter4 */

#ifndef GL_SGIS_texture_lod
#define GL_SGIS_texture_lod 1
#define GL_TEXTURE_MIN_LOD_SGIS           0x813A
#define GL_TEXTURE_MAX_LOD_SGIS           0x813B
#define GL_TEXTURE_BASE_LEVEL_SGIS        0x813C
#define GL_TEXTURE_MAX_LEVEL_SGIS         0x813D
#endif /* GL_SGIS_texture_lod */

#ifndef GL_SGIS_texture_select
#define GL_SGIS_texture_select 1
#define GL_DUAL_ALPHA4_SGIS               0x8110
#define GL_DUAL_ALPHA8_SGIS               0x8111
#define GL_DUAL_ALPHA12_SGIS              0x8112
#define GL_DUAL_ALPHA16_SGIS              0x8113
#define GL_DUAL_LUMINANCE4_SGIS           0x8114
#define GL_DUAL_LUMINANCE8_SGIS           0x8115
#define GL_DUAL_LUMINANCE12_SGIS          0x8116
#define GL_DUAL_LUMINANCE16_SGIS          0x8117
#define GL_DUAL_INTENSITY4_SGIS           0x8118
#define GL_DUAL_INTENSITY8_SGIS           0x8119
#define GL_DUAL_INTENSITY12_SGIS          0x811A
#define GL_DUAL_INTENSITY16_SGIS          0x811B
#define GL_DUAL_LUMINANCE_ALPHA4_SGIS     0x811C
#define GL_DUAL_LUMINANCE_ALPHA8_SGIS     0x811D
#define GL_QUAD_ALPHA4_SGIS               0x811E
#define GL_QUAD_ALPHA8_SGIS               0x811F
#define GL_QUAD_LUMINANCE4_SGIS           0x8120
#define GL_QUAD_LUMINANCE8_SGIS           0x8121
#define GL_QUAD_INTENSITY4_SGIS           0x8122
#define GL_QUAD_INTENSITY8_SGIS           0x8123
#define GL_DUAL_TEXTURE_SELECT_SGIS       0x8124
#define GL_QUAD_TEXTURE_SELECT_SGIS       0x8125
#endif /* GL_SGIS_texture_select */

#ifndef GL_SGIX_async
#define GL_SGIX_async 1
#define GL_ASYNC_MARKER_SGIX              0x8329
typedef void (GLAPIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);
typedef GLint(GLAPIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);
typedef GLint(GLAPIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);
typedef GLuint(GLAPIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);
typedef void (GLAPIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);
typedef GLboolean(GLAPIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);
GLLOADER_API extern void (GLAPIENTRYP glAsyncMarkerSGIX)(GLuint marker);
GLLOADER_API extern GLint(GLAPIENTRYP glFinishAsyncSGIX)(GLuint *markerp);
GLLOADER_API extern GLint(GLAPIENTRYP glPollAsyncSGIX)(GLuint *markerp);
GLLOADER_API extern GLuint(GLAPIENTRYP glGenAsyncMarkersSGIX)(GLsizei range);
GLLOADER_API extern void (GLAPIENTRYP glDeleteAsyncMarkersSGIX)(GLuint marker, GLsizei range);
GLLOADER_API extern GLboolean(GLAPIENTRYP glIsAsyncMarkerSGIX)(GLuint marker);
#endif /* GL_SGIX_async */

#ifndef GL_SGIX_async_histogram
#define GL_SGIX_async_histogram 1
#define GL_ASYNC_HISTOGRAM_SGIX           0x832C
#define GL_MAX_ASYNC_HISTOGRAM_SGIX       0x832D
#endif /* GL_SGIX_async_histogram */

#ifndef GL_SGIX_async_pixel
#define GL_SGIX_async_pixel 1
#define GL_ASYNC_TEX_IMAGE_SGIX           0x835C
#define GL_ASYNC_DRAW_PIXELS_SGIX         0x835D
#define GL_ASYNC_READ_PIXELS_SGIX         0x835E
#define GL_MAX_ASYNC_TEX_IMAGE_SGIX       0x835F
#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX     0x8360
#define GL_MAX_ASYNC_READ_PIXELS_SGIX     0x8361
#endif /* GL_SGIX_async_pixel */

#ifndef GL_SGIX_blend_alpha_minmax
#define GL_SGIX_blend_alpha_minmax 1
#define GL_ALPHA_MIN_SGIX                 0x8320
#define GL_ALPHA_MAX_SGIX                 0x8321
#endif /* GL_SGIX_blend_alpha_minmax */

#ifndef GL_SGIX_calligraphic_fragment
#define GL_SGIX_calligraphic_fragment 1
#define GL_CALLIGRAPHIC_FRAGMENT_SGIX     0x8183
#endif /* GL_SGIX_calligraphic_fragment */

#ifndef GL_SGIX_clipmap
#define GL_SGIX_clipmap 1
#define GL_LINEAR_CLIPMAP_LINEAR_SGIX     0x8170
#define GL_TEXTURE_CLIPMAP_CENTER_SGIX    0x8171
#define GL_TEXTURE_CLIPMAP_FRAME_SGIX     0x8172
#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX    0x8173
#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX     0x8176
#define GL_MAX_CLIPMAP_DEPTH_SGIX         0x8177
#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
#define GL_NEAREST_CLIPMAP_NEAREST_SGIX   0x844D
#define GL_NEAREST_CLIPMAP_LINEAR_SGIX    0x844E
#define GL_LINEAR_CLIPMAP_NEAREST_SGIX    0x844F
#endif /* GL_SGIX_clipmap */

#ifndef GL_SGIX_convolution_accuracy
#define GL_SGIX_convolution_accuracy 1
#define GL_CONVOLUTION_HINT_SGIX          0x8316
#endif /* GL_SGIX_convolution_accuracy */

#ifndef GL_SGIX_depth_pass_instrument
#define GL_SGIX_depth_pass_instrument 1
#endif /* GL_SGIX_depth_pass_instrument */

#ifndef GL_SGIX_depth_texture
#define GL_SGIX_depth_texture 1
#define GL_DEPTH_COMPONENT16_SGIX         0x81A5
#define GL_DEPTH_COMPONENT24_SGIX         0x81A6
#define GL_DEPTH_COMPONENT32_SGIX         0x81A7
#endif /* GL_SGIX_depth_texture */

#ifndef GL_SGIX_flush_raster
#define GL_SGIX_flush_raster 1
typedef void (GLAPIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glFlushRasterSGIX)(void);
#endif /* GL_SGIX_flush_raster */

#ifndef GL_SGIX_fog_offset
#define GL_SGIX_fog_offset 1
#define GL_FOG_OFFSET_SGIX                0x8198
#define GL_FOG_OFFSET_VALUE_SGIX          0x8199
#endif /* GL_SGIX_fog_offset */

#ifndef GL_SGIX_fragment_lighting
#define GL_SGIX_fragment_lighting 1
#define GL_FRAGMENT_LIGHTING_SGIX         0x8400
#define GL_FRAGMENT_COLOR_MATERIAL_SGIX   0x8401
#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
#define GL_MAX_FRAGMENT_LIGHTS_SGIX       0x8404
#define GL_MAX_ACTIVE_LIGHTS_SGIX         0x8405
#define GL_CURRENT_RASTER_NORMAL_SGIX     0x8406
#define GL_LIGHT_ENV_MODE_SGIX            0x8407
#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
#define GL_FRAGMENT_LIGHT0_SGIX           0x840C
#define GL_FRAGMENT_LIGHT1_SGIX           0x840D
#define GL_FRAGMENT_LIGHT2_SGIX           0x840E
#define GL_FRAGMENT_LIGHT3_SGIX           0x840F
#define GL_FRAGMENT_LIGHT4_SGIX           0x8410
#define GL_FRAGMENT_LIGHT5_SGIX           0x8411
#define GL_FRAGMENT_LIGHT6_SGIX           0x8412
#define GL_FRAGMENT_LIGHT7_SGIX           0x8413
typedef void (GLAPIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);
typedef void (GLAPIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glFragmentColorMaterialSGIX)(GLenum face, GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glFragmentLightfSGIX)(GLenum light, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glFragmentLightfvSGIX)(GLenum light, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glFragmentLightiSGIX)(GLenum light, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glFragmentLightivSGIX)(GLenum light, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glFragmentLightModelfSGIX)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glFragmentLightModelfvSGIX)(GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glFragmentLightModeliSGIX)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glFragmentLightModelivSGIX)(GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glFragmentMaterialfSGIX)(GLenum face, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glFragmentMaterialfvSGIX)(GLenum face, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glFragmentMaterialiSGIX)(GLenum face, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glFragmentMaterialivSGIX)(GLenum face, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetFragmentLightfvSGIX)(GLenum light, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetFragmentLightivSGIX)(GLenum light, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetFragmentMaterialfvSGIX)(GLenum face, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetFragmentMaterialivSGIX)(GLenum face, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glLightEnviSGIX)(GLenum pname, GLint param);
#endif /* GL_SGIX_fragment_lighting */

#ifndef GL_SGIX_framezoom
#define GL_SGIX_framezoom 1
#define GL_FRAMEZOOM_SGIX                 0x818B
#define GL_FRAMEZOOM_FACTOR_SGIX          0x818C
#define GL_MAX_FRAMEZOOM_FACTOR_SGIX      0x818D
typedef void (GLAPIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);
GLLOADER_API extern void (GLAPIENTRYP glFrameZoomSGIX)(GLint factor);
#endif /* GL_SGIX_framezoom */

#ifndef GL_SGIX_igloo_interface
#define GL_SGIX_igloo_interface 1
typedef void (GLAPIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const void *params);
GLLOADER_API extern void (GLAPIENTRYP glIglooInterfaceSGIX)(GLenum pname, const void *params);
#endif /* GL_SGIX_igloo_interface */

#ifndef GL_SGIX_instruments
#define GL_SGIX_instruments 1
#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
#define GL_INSTRUMENT_MEASUREMENTS_SGIX   0x8181
typedef GLint(GLAPIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);
typedef void (GLAPIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);
typedef GLint(GLAPIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);
typedef void (GLAPIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);
typedef void (GLAPIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);
typedef void (GLAPIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);
GLLOADER_API extern GLint(GLAPIENTRYP glGetInstrumentsSGIX)(void);
GLLOADER_API extern void (GLAPIENTRYP glInstrumentsBufferSGIX)(GLsizei size, GLint *buffer);
GLLOADER_API extern GLint(GLAPIENTRYP glPollInstrumentsSGIX)(GLint *marker_p);
GLLOADER_API extern void (GLAPIENTRYP glReadInstrumentsSGIX)(GLint marker);
GLLOADER_API extern void (GLAPIENTRYP glStartInstrumentsSGIX)(void);
GLLOADER_API extern void (GLAPIENTRYP glStopInstrumentsSGIX)(GLint marker);
#endif /* GL_SGIX_instruments */

#ifndef GL_SGIX_interlace
#define GL_SGIX_interlace 1
#define GL_INTERLACE_SGIX                 0x8094
#endif /* GL_SGIX_interlace */

#ifndef GL_SGIX_ir_instrument1
#define GL_SGIX_ir_instrument1 1
#define GL_IR_INSTRUMENT1_SGIX            0x817F
#endif /* GL_SGIX_ir_instrument1 */

#ifndef GL_SGIX_list_priority
#define GL_SGIX_list_priority 1
#define GL_LIST_PRIORITY_SGIX             0x8182
typedef void (GLAPIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);
typedef void (GLAPIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glGetListParameterfvSGIX)(GLuint list, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetListParameterivSGIX)(GLuint list, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glListParameterfSGIX)(GLuint list, GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glListParameterfvSGIX)(GLuint list, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glListParameteriSGIX)(GLuint list, GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glListParameterivSGIX)(GLuint list, GLenum pname, const GLint *params);
#endif /* GL_SGIX_list_priority */

#ifndef GL_SGIX_pixel_texture
#define GL_SGIX_pixel_texture 1
#define GL_PIXEL_TEX_GEN_SGIX             0x8139
#define GL_PIXEL_TEX_GEN_MODE_SGIX        0x832B
typedef void (GLAPIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);
GLLOADER_API extern void (GLAPIENTRYP glPixelTexGenSGIX)(GLenum mode);
#endif /* GL_SGIX_pixel_texture */

#ifndef GL_SGIX_pixel_tiles
#define GL_SGIX_pixel_tiles 1
#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
#define GL_PIXEL_TILE_WIDTH_SGIX          0x8140
#define GL_PIXEL_TILE_HEIGHT_SGIX         0x8141
#define GL_PIXEL_TILE_GRID_WIDTH_SGIX     0x8142
#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX    0x8143
#define GL_PIXEL_TILE_GRID_DEPTH_SGIX     0x8144
#define GL_PIXEL_TILE_CACHE_SIZE_SGIX     0x8145
#endif /* GL_SGIX_pixel_tiles */

#ifndef GL_SGIX_polynomial_ffd
#define GL_SGIX_polynomial_ffd 1
#define GL_TEXTURE_DEFORMATION_BIT_SGIX   0x00000001
#define GL_GEOMETRY_DEFORMATION_BIT_SGIX  0x00000002
#define GL_GEOMETRY_DEFORMATION_SGIX      0x8194
#define GL_TEXTURE_DEFORMATION_SGIX       0x8195
#define GL_DEFORMATIONS_MASK_SGIX         0x8196
#define GL_MAX_DEFORMATION_ORDER_SGIX     0x8197
typedef void (GLAPIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
typedef void (GLAPIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
typedef void (GLAPIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);
typedef void (GLAPIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glDeformationMap3dSGIX)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
GLLOADER_API extern void (GLAPIENTRYP glDeformationMap3fSGIX)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
GLLOADER_API extern void (GLAPIENTRYP glDeformSGIX)(GLbitfield mask);
GLLOADER_API extern void (GLAPIENTRYP glLoadIdentityDeformationMapSGIX)(GLbitfield mask);
#endif /* GL_SGIX_polynomial_ffd */

#ifndef GL_SGIX_reference_plane
#define GL_SGIX_reference_plane 1
#define GL_REFERENCE_PLANE_SGIX           0x817D
#define GL_REFERENCE_PLANE_EQUATION_SGIX  0x817E
typedef void (GLAPIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);
GLLOADER_API extern void (GLAPIENTRYP glReferencePlaneSGIX)(const GLdouble *equation);
#endif /* GL_SGIX_reference_plane */

#ifndef GL_SGIX_resample
#define GL_SGIX_resample 1
#define GL_PACK_RESAMPLE_SGIX             0x842E
#define GL_UNPACK_RESAMPLE_SGIX           0x842F
#define GL_RESAMPLE_REPLICATE_SGIX        0x8433
#define GL_RESAMPLE_ZERO_FILL_SGIX        0x8434
#define GL_RESAMPLE_DECIMATE_SGIX         0x8430
#endif /* GL_SGIX_resample */

#ifndef GL_SGIX_scalebias_hint
#define GL_SGIX_scalebias_hint 1
#define GL_SCALEBIAS_HINT_SGIX            0x8322
#endif /* GL_SGIX_scalebias_hint */

#ifndef GL_SGIX_shadow
#define GL_SGIX_shadow 1
#define GL_TEXTURE_COMPARE_SGIX           0x819A
#define GL_TEXTURE_COMPARE_OPERATOR_SGIX  0x819B
#define GL_TEXTURE_LEQUAL_R_SGIX          0x819C
#define GL_TEXTURE_GEQUAL_R_SGIX          0x819D
#endif /* GL_SGIX_shadow */

#ifndef GL_SGIX_shadow_ambient
#define GL_SGIX_shadow_ambient 1
#define GL_SHADOW_AMBIENT_SGIX            0x80BF
#endif /* GL_SGIX_shadow_ambient */

#ifndef GL_SGIX_sprite
#define GL_SGIX_sprite 1
#define GL_SPRITE_SGIX                    0x8148
#define GL_SPRITE_MODE_SGIX               0x8149
#define GL_SPRITE_AXIS_SGIX               0x814A
#define GL_SPRITE_TRANSLATION_SGIX        0x814B
#define GL_SPRITE_AXIAL_SGIX              0x814C
#define GL_SPRITE_OBJECT_ALIGNED_SGIX     0x814D
#define GL_SPRITE_EYE_ALIGNED_SGIX        0x814E
typedef void (GLAPIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);
typedef void (GLAPIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);
typedef void (GLAPIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glSpriteParameterfSGIX)(GLenum pname, GLfloat param);
GLLOADER_API extern void (GLAPIENTRYP glSpriteParameterfvSGIX)(GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glSpriteParameteriSGIX)(GLenum pname, GLint param);
GLLOADER_API extern void (GLAPIENTRYP glSpriteParameterivSGIX)(GLenum pname, const GLint *params);
#endif /* GL_SGIX_sprite */

#ifndef GL_SGIX_subsample
#define GL_SGIX_subsample 1
#define GL_PACK_SUBSAMPLE_RATE_SGIX       0x85A0
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX     0x85A1
#define GL_PIXEL_SUBSAMPLE_4444_SGIX      0x85A2
#define GL_PIXEL_SUBSAMPLE_2424_SGIX      0x85A3
#define GL_PIXEL_SUBSAMPLE_4242_SGIX      0x85A4
#endif /* GL_SGIX_subsample */

#ifndef GL_SGIX_tag_sample_buffer
#define GL_SGIX_tag_sample_buffer 1
typedef void (GLAPIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glTagSampleBufferSGIX)(void);
#endif /* GL_SGIX_tag_sample_buffer */

#ifndef GL_SGIX_texture_add_env
#define GL_SGIX_texture_add_env 1
#define GL_TEXTURE_ENV_BIAS_SGIX          0x80BE
#endif /* GL_SGIX_texture_add_env */

#ifndef GL_SGIX_texture_coordinate_clamp
#define GL_SGIX_texture_coordinate_clamp 1
#define GL_TEXTURE_MAX_CLAMP_S_SGIX       0x8369
#define GL_TEXTURE_MAX_CLAMP_T_SGIX       0x836A
#define GL_TEXTURE_MAX_CLAMP_R_SGIX       0x836B
#endif /* GL_SGIX_texture_coordinate_clamp */

#ifndef GL_SGIX_texture_lod_bias
#define GL_SGIX_texture_lod_bias 1
#define GL_TEXTURE_LOD_BIAS_S_SGIX        0x818E
#define GL_TEXTURE_LOD_BIAS_T_SGIX        0x818F
#define GL_TEXTURE_LOD_BIAS_R_SGIX        0x8190
#endif /* GL_SGIX_texture_lod_bias */

#ifndef GL_SGIX_texture_multi_buffer
#define GL_SGIX_texture_multi_buffer 1
#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
#endif /* GL_SGIX_texture_multi_buffer */

#ifndef GL_SGIX_texture_scale_bias
#define GL_SGIX_texture_scale_bias 1
#define GL_POST_TEXTURE_FILTER_BIAS_SGIX  0x8179
#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
#endif /* GL_SGIX_texture_scale_bias */

#ifndef GL_SGIX_vertex_preclip
#define GL_SGIX_vertex_preclip 1
#define GL_VERTEX_PRECLIP_SGIX            0x83EE
#define GL_VERTEX_PRECLIP_HINT_SGIX       0x83EF
#endif /* GL_SGIX_vertex_preclip */

#ifndef GL_SGIX_ycrcb
#define GL_SGIX_ycrcb 1
#define GL_YCRCB_422_SGIX                 0x81BB
#define GL_YCRCB_444_SGIX                 0x81BC
#endif /* GL_SGIX_ycrcb */

#ifndef GL_SGIX_ycrcb_subsample
#define GL_SGIX_ycrcb_subsample 1
#endif /* GL_SGIX_ycrcb_subsample */

#ifndef GL_SGIX_ycrcba
#define GL_SGIX_ycrcba 1
#define GL_YCRCB_SGIX                     0x8318
#define GL_YCRCBA_SGIX                    0x8319
#endif /* GL_SGIX_ycrcba */

#ifndef GL_SGI_color_matrix
#define GL_SGI_color_matrix 1
#define GL_COLOR_MATRIX_SGI               0x80B1
#define GL_COLOR_MATRIX_STACK_DEPTH_SGI   0x80B2
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
#endif /* GL_SGI_color_matrix */

#ifndef GL_SGI_color_table
#define GL_SGI_color_table 1
#define GL_COLOR_TABLE_SGI                0x80D0
#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
#define GL_PROXY_COLOR_TABLE_SGI          0x80D3
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
#define GL_COLOR_TABLE_SCALE_SGI          0x80D6
#define GL_COLOR_TABLE_BIAS_SGI           0x80D7
#define GL_COLOR_TABLE_FORMAT_SGI         0x80D8
#define GL_COLOR_TABLE_WIDTH_SGI          0x80D9
#define GL_COLOR_TABLE_RED_SIZE_SGI       0x80DA
#define GL_COLOR_TABLE_GREEN_SIZE_SGI     0x80DB
#define GL_COLOR_TABLE_BLUE_SIZE_SGI      0x80DC
#define GL_COLOR_TABLE_ALPHA_SIZE_SGI     0x80DD
#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
typedef void (GLAPIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
typedef void (GLAPIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (GLAPIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (GLAPIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, void *table);
typedef void (GLAPIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (GLAPIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glColorTableSGI)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
GLLOADER_API extern void (GLAPIENTRYP glColorTableParameterfvSGI)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glColorTableParameterivSGI)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API extern void (GLAPIENTRYP glCopyColorTableSGI)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glGetColorTableSGI)(GLenum target, GLenum format, GLenum type, void *table);
GLLOADER_API extern void (GLAPIENTRYP glGetColorTableParameterfvSGI)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API extern void (GLAPIENTRYP glGetColorTableParameterivSGI)(GLenum target, GLenum pname, GLint *params);
#endif /* GL_SGI_color_table */

#ifndef GL_SGI_texture_color_table
#define GL_SGI_texture_color_table 1
#define GL_TEXTURE_COLOR_TABLE_SGI        0x80BC
#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI  0x80BD
#endif /* GL_SGI_texture_color_table */

#ifndef GL_SUNX_constant_data
#define GL_SUNX_constant_data 1
#define GL_UNPACK_CONSTANT_DATA_SUNX      0x81D5
#define GL_TEXTURE_CONSTANT_DATA_SUNX     0x81D6
typedef void (GLAPIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);
GLLOADER_API extern void (GLAPIENTRYP glFinishTextureSUNX)(void);
#endif /* GL_SUNX_constant_data */

#ifndef GL_SUN_convolution_border_modes
#define GL_SUN_convolution_border_modes 1
#define GL_WRAP_BORDER_SUN                0x81D4
#endif /* GL_SUN_convolution_border_modes */

#ifndef GL_SUN_global_alpha
#define GL_SUN_global_alpha 1
#define GL_GLOBAL_ALPHA_SUN               0x81D9
#define GL_GLOBAL_ALPHA_FACTOR_SUN        0x81DA
typedef void (GLAPIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);
typedef void (GLAPIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);
typedef void (GLAPIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);
typedef void (GLAPIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);
typedef void (GLAPIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);
typedef void (GLAPIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);
typedef void (GLAPIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);
typedef void (GLAPIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);
GLLOADER_API extern void (GLAPIENTRYP glGlobalAlphaFactorbSUN)(GLbyte factor);
GLLOADER_API extern void (GLAPIENTRYP glGlobalAlphaFactorsSUN)(GLshort factor);
GLLOADER_API extern void (GLAPIENTRYP glGlobalAlphaFactoriSUN)(GLint factor);
GLLOADER_API extern void (GLAPIENTRYP glGlobalAlphaFactorfSUN)(GLfloat factor);
GLLOADER_API extern void (GLAPIENTRYP glGlobalAlphaFactordSUN)(GLdouble factor);
GLLOADER_API extern void (GLAPIENTRYP glGlobalAlphaFactorubSUN)(GLubyte factor);
GLLOADER_API extern void (GLAPIENTRYP glGlobalAlphaFactorusSUN)(GLushort factor);
GLLOADER_API extern void (GLAPIENTRYP glGlobalAlphaFactoruiSUN)(GLuint factor);
#endif /* GL_SUN_global_alpha */

#ifndef GL_SUN_mesh_array
#define GL_SUN_mesh_array 1
#define GL_QUAD_MESH_SUN                  0x8614
#define GL_TRIANGLE_MESH_SUN              0x8615
typedef void (GLAPIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);
GLLOADER_API extern void (GLAPIENTRYP glDrawMeshArraysSUN)(GLenum mode, GLint first, GLsizei count, GLsizei width);
#endif /* GL_SUN_mesh_array */

#ifndef GL_SUN_slice_accum
#define GL_SUN_slice_accum 1
#define GL_SLICE_ACCUM_SUN                0x85CC
#endif /* GL_SUN_slice_accum */

#ifndef GL_SUN_triangle_list
#define GL_SUN_triangle_list 1
#define GL_RESTART_SUN                    0x0001
#define GL_REPLACE_MIDDLE_SUN             0x0002
#define GL_REPLACE_OLDEST_SUN             0x0003
#define GL_TRIANGLE_LIST_SUN              0x81D7
#define GL_REPLACEMENT_CODE_SUN           0x81D8
#define GL_REPLACEMENT_CODE_ARRAY_SUN     0x85C0
#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
#define GL_R1UI_V3F_SUN                   0x85C4
#define GL_R1UI_C4UB_V3F_SUN              0x85C5
#define GL_R1UI_C3F_V3F_SUN               0x85C6
#define GL_R1UI_N3F_V3F_SUN               0x85C7
#define GL_R1UI_C4F_N3F_V3F_SUN           0x85C8
#define GL_R1UI_T2F_V3F_SUN               0x85C9
#define GL_R1UI_T2F_N3F_V3F_SUN           0x85CA
#define GL_R1UI_T2F_C4F_N3F_V3F_SUN       0x85CB
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const void **pointer);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiSUN)(GLuint code);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeusSUN)(GLushort code);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeubSUN)(GLubyte code);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuivSUN)(const GLuint *code);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeusvSUN)(const GLushort *code);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeubvSUN)(const GLubyte *code);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodePointerSUN)(GLenum type, GLsizei stride, const void **pointer);
#endif /* GL_SUN_triangle_list */

#ifndef GL_SUN_vertex
#define GL_SUN_vertex 1
typedef void (GLAPIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
typedef void (GLAPIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4ubVertex2fSUN)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
GLLOADER_API extern void (GLAPIENTRYP glColor4ubVertex2fvSUN)(const GLubyte *c, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4ubVertex3fSUN)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glColor4ubVertex3fvSUN)(const GLubyte *c, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glColor3fVertex3fSUN)(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glColor3fVertex3fvSUN)(const GLfloat *c, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glNormal3fVertex3fSUN)(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glNormal3fVertex3fvSUN)(const GLfloat *n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glColor4fNormal3fVertex3fSUN)(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glColor4fNormal3fVertex3fvSUN)(const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fVertex3fvSUN)(const GLfloat *tc, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4fVertex4fSUN)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4fVertex4fvSUN)(const GLfloat *tc, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fColor4ubVertex3fSUN)(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fColor4ubVertex3fvSUN)(const GLfloat *tc, const GLubyte *c, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fColor3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fColor3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fNormal3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fNormal3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fColor4fNormal3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4fColor4fNormal3fVertex4fSUN)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API extern void (GLAPIENTRYP glTexCoord4fColor4fNormal3fVertex4fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiVertex3fSUN)(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiVertex3fvSUN)(const GLuint *rc, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiColor4ubVertex3fSUN)(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiColor4ubVertex3fvSUN)(const GLuint *rc, const GLubyte *c, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiColor3fVertex3fSUN)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiColor3fVertex3fvSUN)(const GLuint *rc, const GLfloat *c, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiNormal3fVertex3fSUN)(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiColor4fNormal3fVertex3fSUN)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiColor4fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiTexCoord2fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiTexCoord2fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API extern void (GLAPIENTRYP glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
#endif /* GL_SUN_vertex */

#ifndef GL_WIN_phong_shading
#define GL_WIN_phong_shading 1
#define GL_PHONG_WIN                      0x80EA
#define GL_PHONG_HINT_WIN                 0x80EB
#endif /* GL_WIN_phong_shading */

#ifndef GL_WIN_specular_fog
#define GL_WIN_specular_fog 1
#define GL_FOG_SPECULAR_TEXTURE_WIN       0x80EC
#endif /* GL_WIN_specular_fog */

// definitions of function pointers
#ifdef GLLOADER_IMPLEMENTATION
#ifndef GL_VERSION_1_2_IMPLEMENTATION
#define GL_VERSION_1_2_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
GLLOADER_API void (GLAPIENTRYP glTexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glCopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif // GL_VERSION_1_2_IMPLEMENTATION
#ifndef GL_VERSION_1_3_IMPLEMENTATION
#define GL_VERSION_1_3_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glActiveTexture)(GLenum texture);
GLLOADER_API void (GLAPIENTRYP glSampleCoverage)(GLfloat value, GLboolean invert);
GLLOADER_API void (GLAPIENTRYP glCompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glGetCompressedTexImage)(GLenum target, GLint level, void *img);
GLLOADER_API void (GLAPIENTRYP glClientActiveTexture)(GLenum texture);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1d)(GLenum target, GLdouble s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1dv)(GLenum target, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1f)(GLenum target, GLfloat s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1fv)(GLenum target, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1i)(GLenum target, GLint s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1iv)(GLenum target, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1s)(GLenum target, GLshort s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1sv)(GLenum target, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2d)(GLenum target, GLdouble s, GLdouble t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2dv)(GLenum target, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2f)(GLenum target, GLfloat s, GLfloat t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2fv)(GLenum target, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2i)(GLenum target, GLint s, GLint t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2iv)(GLenum target, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2s)(GLenum target, GLshort s, GLshort t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2sv)(GLenum target, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3d)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3dv)(GLenum target, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3f)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3fv)(GLenum target, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3i)(GLenum target, GLint s, GLint t, GLint r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3iv)(GLenum target, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3s)(GLenum target, GLshort s, GLshort t, GLshort r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3sv)(GLenum target, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4d)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4dv)(GLenum target, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4f)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4fv)(GLenum target, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4i)(GLenum target, GLint s, GLint t, GLint r, GLint q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4iv)(GLenum target, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4s)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4sv)(GLenum target, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glLoadTransposeMatrixf)(const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glLoadTransposeMatrixd)(const GLdouble *m);
GLLOADER_API void (GLAPIENTRYP glMultTransposeMatrixf)(const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMultTransposeMatrixd)(const GLdouble *m);
#endif // GL_VERSION_1_3_IMPLEMENTATION
#ifndef GL_VERSION_1_4_IMPLEMENTATION
#define GL_VERSION_1_4_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLLOADER_API void (GLAPIENTRYP glMultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
GLLOADER_API void (GLAPIENTRYP glMultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
GLLOADER_API void (GLAPIENTRYP glPointParameterf)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glPointParameterfv)(GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glPointParameteri)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glPointParameteriv)(GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glFogCoordf)(GLfloat coord);
GLLOADER_API void (GLAPIENTRYP glFogCoordfv)(const GLfloat *coord);
GLLOADER_API void (GLAPIENTRYP glFogCoordd)(GLdouble coord);
GLLOADER_API void (GLAPIENTRYP glFogCoorddv)(const GLdouble *coord);
GLLOADER_API void (GLAPIENTRYP glFogCoordPointer)(GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3b)(GLbyte red, GLbyte green, GLbyte blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3bv)(const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3d)(GLdouble red, GLdouble green, GLdouble blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3f)(GLfloat red, GLfloat green, GLfloat blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3i)(GLint red, GLint green, GLint blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3s)(GLshort red, GLshort green, GLshort blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3ub)(GLubyte red, GLubyte green, GLubyte blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3ubv)(const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3ui)(GLuint red, GLuint green, GLuint blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3uiv)(const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3us)(GLushort red, GLushort green, GLushort blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3usv)(const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColorPointer)(GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glWindowPos2d)(GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos2f)(GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos2i)(GLint x, GLint y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos2s)(GLshort x, GLshort y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3d)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3dv)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3f)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3fv)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3i)(GLint x, GLint y, GLint z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3iv)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3s)(GLshort x, GLshort y, GLshort z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3sv)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glBlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLLOADER_API void (GLAPIENTRYP glBlendEquation)(GLenum mode);
#endif // GL_VERSION_1_4_IMPLEMENTATION
#ifndef GL_VERSION_1_5_IMPLEMENTATION
#define GL_VERSION_1_5_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGenQueries)(GLsizei n, GLuint *ids);
GLLOADER_API void (GLAPIENTRYP glDeleteQueries)(GLsizei n, const GLuint *ids);
GLLOADER_API GLboolean(GLAPIENTRYP glIsQuery)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glBeginQuery)(GLenum target, GLuint id);
GLLOADER_API void (GLAPIENTRYP glEndQuery)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glGetQueryiv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glBindBuffer)(GLenum target, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glDeleteBuffers)(GLsizei n, const GLuint *buffers);
GLLOADER_API void (GLAPIENTRYP glGenBuffers)(GLsizei n, GLuint *buffers);
GLLOADER_API GLboolean(GLAPIENTRYP glIsBuffer)(GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glBufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
GLLOADER_API void (GLAPIENTRYP glBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
GLLOADER_API void (GLAPIENTRYP glGetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
GLLOADER_API void *(GLAPIENTRYP glMapBuffer)(GLenum target, GLenum access);
GLLOADER_API GLboolean(GLAPIENTRYP glUnmapBuffer)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glGetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetBufferPointerv)(GLenum target, GLenum pname, void **params);
#endif // GL_VERSION_1_5_IMPLEMENTATION
#ifndef GL_VERSION_2_0_IMPLEMENTATION
#define GL_VERSION_2_0_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
GLLOADER_API void (GLAPIENTRYP glDrawBuffers)(GLsizei n, const GLenum *bufs);
GLLOADER_API void (GLAPIENTRYP glStencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLLOADER_API void (GLAPIENTRYP glStencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
GLLOADER_API void (GLAPIENTRYP glStencilMaskSeparate)(GLenum face, GLuint mask);
GLLOADER_API void (GLAPIENTRYP glAttachShader)(GLuint program, GLuint shader);
GLLOADER_API void (GLAPIENTRYP glBindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glCompileShader)(GLuint shader);
GLLOADER_API GLuint(GLAPIENTRYP glCreateProgram)(void);
GLLOADER_API GLuint(GLAPIENTRYP glCreateShader)(GLenum type);
GLLOADER_API void (GLAPIENTRYP glDeleteProgram)(GLuint program);
GLLOADER_API void (GLAPIENTRYP glDeleteShader)(GLuint shader);
GLLOADER_API void (GLAPIENTRYP glDetachShader)(GLuint program, GLuint shader);
GLLOADER_API void (GLAPIENTRYP glDisableVertexAttribArray)(GLuint index);
GLLOADER_API void (GLAPIENTRYP glEnableVertexAttribArray)(GLuint index);
GLLOADER_API void (GLAPIENTRYP glGetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
GLLOADER_API GLint(GLAPIENTRYP glGetAttribLocation)(GLuint program, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetProgramiv)(GLuint program, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
GLLOADER_API void (GLAPIENTRYP glGetShaderiv)(GLuint shader, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
GLLOADER_API void (GLAPIENTRYP glGetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
GLLOADER_API GLint(GLAPIENTRYP glGetUniformLocation)(GLuint program, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetUniformfv)(GLuint program, GLint location, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetUniformiv)(GLuint program, GLint location, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
GLLOADER_API GLboolean(GLAPIENTRYP glIsProgram)(GLuint program);
GLLOADER_API GLboolean(GLAPIENTRYP glIsShader)(GLuint shader);
GLLOADER_API void (GLAPIENTRYP glLinkProgram)(GLuint program);
GLLOADER_API void (GLAPIENTRYP glShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
GLLOADER_API void (GLAPIENTRYP glUseProgram)(GLuint program);
GLLOADER_API void (GLAPIENTRYP glUniform1f)(GLint location, GLfloat v0);
GLLOADER_API void (GLAPIENTRYP glUniform2f)(GLint location, GLfloat v0, GLfloat v1);
GLLOADER_API void (GLAPIENTRYP glUniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLLOADER_API void (GLAPIENTRYP glUniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLLOADER_API void (GLAPIENTRYP glUniform1i)(GLint location, GLint v0);
GLLOADER_API void (GLAPIENTRYP glUniform2i)(GLint location, GLint v0, GLint v1);
GLLOADER_API void (GLAPIENTRYP glUniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
GLLOADER_API void (GLAPIENTRYP glUniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLLOADER_API void (GLAPIENTRYP glUniform1fv)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniform2fv)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniform3fv)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniform4fv)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniform1iv)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glUniform2iv)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glUniform3iv)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glUniform4iv)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glValidateProgram)(GLuint program);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1d)(GLuint index, GLdouble x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1dv)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1f)(GLuint index, GLfloat x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1fv)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1s)(GLuint index, GLshort x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1sv)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2dv)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2fv)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2s)(GLuint index, GLshort x, GLshort y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2sv)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3dv)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3fv)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3sv)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4Nbv)(GLuint index, const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4Niv)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4Nsv)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4Nubv)(GLuint index, const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4Nuiv)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4Nusv)(GLuint index, const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4bv)(GLuint index, const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4dv)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4fv)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4iv)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4sv)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4ubv)(GLuint index, const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4uiv)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4usv)(GLuint index, const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
#endif // GL_VERSION_2_0_IMPLEMENTATION
#ifndef GL_VERSION_2_1_IMPLEMENTATION
#define GL_VERSION_2_1_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glUniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif // GL_VERSION_2_1_IMPLEMENTATION
#ifndef GL_VERSION_3_0_IMPLEMENTATION
#define GL_VERSION_3_0_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLLOADER_API void (GLAPIENTRYP glGetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
GLLOADER_API void (GLAPIENTRYP glGetIntegeri_v)(GLenum target, GLuint index, GLint *data);
GLLOADER_API void (GLAPIENTRYP glEnablei)(GLenum target, GLuint index);
GLLOADER_API void (GLAPIENTRYP glDisablei)(GLenum target, GLuint index);
GLLOADER_API GLboolean(GLAPIENTRYP glIsEnabledi)(GLenum target, GLuint index);
GLLOADER_API void (GLAPIENTRYP glBeginTransformFeedback)(GLenum primitiveMode);
GLLOADER_API void (GLAPIENTRYP glEndTransformFeedback)(void);
GLLOADER_API void (GLAPIENTRYP glBindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glBindBufferBase)(GLenum target, GLuint index, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glTransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
GLLOADER_API void (GLAPIENTRYP glGetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
GLLOADER_API void (GLAPIENTRYP glClampColor)(GLenum target, GLenum clamp);
GLLOADER_API void (GLAPIENTRYP glBeginConditionalRender)(GLuint id, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glEndConditionalRender)(void);
GLLOADER_API void (GLAPIENTRYP glVertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI1i)(GLuint index, GLint x);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI2i)(GLuint index, GLint x, GLint y);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI1ui)(GLuint index, GLuint x);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI1iv)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI2iv)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI3iv)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4iv)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI1uiv)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI2uiv)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI3uiv)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4uiv)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4bv)(GLuint index, const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4sv)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4ubv)(GLuint index, const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4usv)(GLuint index, const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glGetUniformuiv)(GLuint program, GLint location, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glBindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
GLLOADER_API GLint(GLAPIENTRYP glGetFragDataLocation)(GLuint program, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glUniform1ui)(GLint location, GLuint v0);
GLLOADER_API void (GLAPIENTRYP glUniform2ui)(GLint location, GLuint v0, GLuint v1);
GLLOADER_API void (GLAPIENTRYP glUniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLLOADER_API void (GLAPIENTRYP glUniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLLOADER_API void (GLAPIENTRYP glUniform1uiv)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glUniform2uiv)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glUniform3uiv)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glUniform4uiv)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glTexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glTexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLLOADER_API const GLubyte *(GLAPIENTRYP glGetStringi)(GLenum name, GLuint index);
GLLOADER_API GLboolean(GLAPIENTRYP glIsRenderbuffer)(GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glBindRenderbuffer)(GLenum target, GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glDeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
GLLOADER_API void (GLAPIENTRYP glGenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
GLLOADER_API void (GLAPIENTRYP glRenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glGetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API GLboolean(GLAPIENTRYP glIsFramebuffer)(GLuint framebuffer);
GLLOADER_API void (GLAPIENTRYP glBindFramebuffer)(GLenum target, GLuint framebuffer);
GLLOADER_API void (GLAPIENTRYP glDeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
GLLOADER_API void (GLAPIENTRYP glGenFramebuffers)(GLsizei n, GLuint *framebuffers);
GLLOADER_API GLenum(GLAPIENTRYP glCheckFramebufferStatus)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glFramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glFramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glFramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLLOADER_API void (GLAPIENTRYP glFramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glGetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGenerateMipmap)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glBlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLLOADER_API void (GLAPIENTRYP glRenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glFramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLLOADER_API void *(GLAPIENTRYP glMapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLLOADER_API void (GLAPIENTRYP glFlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
GLLOADER_API void (GLAPIENTRYP glBindVertexArray)(GLuint array);
GLLOADER_API void (GLAPIENTRYP glDeleteVertexArrays)(GLsizei n, const GLuint *arrays);
GLLOADER_API void (GLAPIENTRYP glGenVertexArrays)(GLsizei n, GLuint *arrays);
GLLOADER_API GLboolean(GLAPIENTRYP glIsVertexArray)(GLuint array);
#endif // GL_VERSION_3_0_IMPLEMENTATION
#ifndef GL_VERSION_3_1_IMPLEMENTATION
#define GL_VERSION_3_1_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
GLLOADER_API void (GLAPIENTRYP glDrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
GLLOADER_API void (GLAPIENTRYP glTexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glPrimitiveRestartIndex)(GLuint index);
GLLOADER_API void (GLAPIENTRYP glCopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glGetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
GLLOADER_API void (GLAPIENTRYP glGetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
GLLOADER_API GLuint(GLAPIENTRYP glGetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
GLLOADER_API void (GLAPIENTRYP glGetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
GLLOADER_API void (GLAPIENTRYP glUniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
#endif // GL_VERSION_3_1_IMPLEMENTATION
#ifndef GL_VERSION_3_2_IMPLEMENTATION
#define GL_VERSION_3_2_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
GLLOADER_API void (GLAPIENTRYP glDrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
GLLOADER_API void (GLAPIENTRYP glDrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
GLLOADER_API void (GLAPIENTRYP glMultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
GLLOADER_API void (GLAPIENTRYP glProvokingVertex)(GLenum mode);
GLLOADER_API GLsync(GLAPIENTRYP glFenceSync)(GLenum condition, GLbitfield flags);
GLLOADER_API GLboolean(GLAPIENTRYP glIsSync)(GLsync sync);
GLLOADER_API void (GLAPIENTRYP glDeleteSync)(GLsync sync);
GLLOADER_API GLenum(GLAPIENTRYP glClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLLOADER_API void (GLAPIENTRYP glWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLLOADER_API void (GLAPIENTRYP glGetInteger64v)(GLenum pname, GLint64 *data);
GLLOADER_API void (GLAPIENTRYP glGetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
GLLOADER_API void (GLAPIENTRYP glGetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
GLLOADER_API void (GLAPIENTRYP glGetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
GLLOADER_API void (GLAPIENTRYP glFramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glTexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLLOADER_API void (GLAPIENTRYP glTexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLLOADER_API void (GLAPIENTRYP glGetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
GLLOADER_API void (GLAPIENTRYP glSampleMaski)(GLuint maskNumber, GLbitfield mask);
#endif // GL_VERSION_3_2_IMPLEMENTATION
#ifndef GL_VERSION_3_3_IMPLEMENTATION
#define GL_VERSION_3_3_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
GLLOADER_API GLint(GLAPIENTRYP glGetFragDataIndex)(GLuint program, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGenSamplers)(GLsizei count, GLuint *samplers);
GLLOADER_API void (GLAPIENTRYP glDeleteSamplers)(GLsizei count, const GLuint *samplers);
GLLOADER_API GLboolean(GLAPIENTRYP glIsSampler)(GLuint sampler);
GLLOADER_API void (GLAPIENTRYP glBindSampler)(GLuint unit, GLuint sampler);
GLLOADER_API void (GLAPIENTRYP glSamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glSamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
GLLOADER_API void (GLAPIENTRYP glSamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glSamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
GLLOADER_API void (GLAPIENTRYP glSamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
GLLOADER_API void (GLAPIENTRYP glSamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
GLLOADER_API void (GLAPIENTRYP glGetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glQueryCounter)(GLuint id, GLenum target);
GLLOADER_API void (GLAPIENTRYP glGetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
GLLOADER_API void (GLAPIENTRYP glGetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
GLLOADER_API void (GLAPIENTRYP glVertexAttribDivisor)(GLuint index, GLuint divisor);
GLLOADER_API void (GLAPIENTRYP glVertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLLOADER_API void (GLAPIENTRYP glVertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glVertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLLOADER_API void (GLAPIENTRYP glVertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glVertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLLOADER_API void (GLAPIENTRYP glVertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glVertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLLOADER_API void (GLAPIENTRYP glVertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glVertexP2ui)(GLenum type, GLuint value);
GLLOADER_API void (GLAPIENTRYP glVertexP2uiv)(GLenum type, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glVertexP3ui)(GLenum type, GLuint value);
GLLOADER_API void (GLAPIENTRYP glVertexP3uiv)(GLenum type, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glVertexP4ui)(GLenum type, GLuint value);
GLLOADER_API void (GLAPIENTRYP glVertexP4uiv)(GLenum type, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glTexCoordP1ui)(GLenum type, GLuint coords);
GLLOADER_API void (GLAPIENTRYP glTexCoordP1uiv)(GLenum type, const GLuint *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoordP2ui)(GLenum type, GLuint coords);
GLLOADER_API void (GLAPIENTRYP glTexCoordP2uiv)(GLenum type, const GLuint *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoordP3ui)(GLenum type, GLuint coords);
GLLOADER_API void (GLAPIENTRYP glTexCoordP3uiv)(GLenum type, const GLuint *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoordP4ui)(GLenum type, GLuint coords);
GLLOADER_API void (GLAPIENTRYP glTexCoordP4uiv)(GLenum type, const GLuint *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoordP1ui)(GLenum texture, GLenum type, GLuint coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoordP1uiv)(GLenum texture, GLenum type, const GLuint *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoordP2ui)(GLenum texture, GLenum type, GLuint coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoordP2uiv)(GLenum texture, GLenum type, const GLuint *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoordP3ui)(GLenum texture, GLenum type, GLuint coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoordP3uiv)(GLenum texture, GLenum type, const GLuint *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoordP4ui)(GLenum texture, GLenum type, GLuint coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoordP4uiv)(GLenum texture, GLenum type, const GLuint *coords);
GLLOADER_API void (GLAPIENTRYP glNormalP3ui)(GLenum type, GLuint coords);
GLLOADER_API void (GLAPIENTRYP glNormalP3uiv)(GLenum type, const GLuint *coords);
GLLOADER_API void (GLAPIENTRYP glColorP3ui)(GLenum type, GLuint color);
GLLOADER_API void (GLAPIENTRYP glColorP3uiv)(GLenum type, const GLuint *color);
GLLOADER_API void (GLAPIENTRYP glColorP4ui)(GLenum type, GLuint color);
GLLOADER_API void (GLAPIENTRYP glColorP4uiv)(GLenum type, const GLuint *color);
GLLOADER_API void (GLAPIENTRYP glSecondaryColorP3ui)(GLenum type, GLuint color);
GLLOADER_API void (GLAPIENTRYP glSecondaryColorP3uiv)(GLenum type, const GLuint *color);
#endif // GL_VERSION_3_3_IMPLEMENTATION
#ifndef GL_VERSION_4_0_IMPLEMENTATION
#define GL_VERSION_4_0_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMinSampleShading)(GLfloat value);
GLLOADER_API void (GLAPIENTRYP glBlendEquationi)(GLuint buf, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glBlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLLOADER_API void (GLAPIENTRYP glBlendFunci)(GLuint buf, GLenum src, GLenum dst);
GLLOADER_API void (GLAPIENTRYP glBlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLLOADER_API void (GLAPIENTRYP glDrawArraysIndirect)(GLenum mode, const void *indirect);
GLLOADER_API void (GLAPIENTRYP glDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
GLLOADER_API void (GLAPIENTRYP glUniform1d)(GLint location, GLdouble x);
GLLOADER_API void (GLAPIENTRYP glUniform2d)(GLint location, GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glUniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glUniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glUniform1dv)(GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniform2dv)(GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniform3dv)(GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniform4dv)(GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glGetUniformdv)(GLuint program, GLint location, GLdouble *params);
GLLOADER_API GLint(GLAPIENTRYP glGetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
GLLOADER_API GLuint(GLAPIENTRYP glGetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
GLLOADER_API void (GLAPIENTRYP glGetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
GLLOADER_API void (GLAPIENTRYP glUniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
GLLOADER_API void (GLAPIENTRYP glGetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
GLLOADER_API void (GLAPIENTRYP glPatchParameteri)(GLenum pname, GLint value);
GLLOADER_API void (GLAPIENTRYP glPatchParameterfv)(GLenum pname, const GLfloat *values);
GLLOADER_API void (GLAPIENTRYP glBindTransformFeedback)(GLenum target, GLuint id);
GLLOADER_API void (GLAPIENTRYP glDeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
GLLOADER_API void (GLAPIENTRYP glGenTransformFeedbacks)(GLsizei n, GLuint *ids);
GLLOADER_API GLboolean(GLAPIENTRYP glIsTransformFeedback)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glPauseTransformFeedback)(void);
GLLOADER_API void (GLAPIENTRYP glResumeTransformFeedback)(void);
GLLOADER_API void (GLAPIENTRYP glDrawTransformFeedback)(GLenum mode, GLuint id);
GLLOADER_API void (GLAPIENTRYP glDrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
GLLOADER_API void (GLAPIENTRYP glBeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
GLLOADER_API void (GLAPIENTRYP glEndQueryIndexed)(GLenum target, GLuint index);
GLLOADER_API void (GLAPIENTRYP glGetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
#endif // GL_VERSION_4_0_IMPLEMENTATION
#ifndef GL_VERSION_4_1_IMPLEMENTATION
#define GL_VERSION_4_1_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glReleaseShaderCompiler)(void);
GLLOADER_API void (GLAPIENTRYP glShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
GLLOADER_API void (GLAPIENTRYP glGetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
GLLOADER_API void (GLAPIENTRYP glDepthRangef)(GLfloat n, GLfloat f);
GLLOADER_API void (GLAPIENTRYP glClearDepthf)(GLfloat d);
GLLOADER_API void (GLAPIENTRYP glGetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
GLLOADER_API void (GLAPIENTRYP glProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
GLLOADER_API void (GLAPIENTRYP glProgramParameteri)(GLuint program, GLenum pname, GLint value);
GLLOADER_API void (GLAPIENTRYP glUseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
GLLOADER_API void (GLAPIENTRYP glActiveShaderProgram)(GLuint pipeline, GLuint program);
GLLOADER_API GLuint(GLAPIENTRYP glCreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
GLLOADER_API void (GLAPIENTRYP glBindProgramPipeline)(GLuint pipeline);
GLLOADER_API void (GLAPIENTRYP glDeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
GLLOADER_API void (GLAPIENTRYP glGenProgramPipelines)(GLsizei n, GLuint *pipelines);
GLLOADER_API GLboolean(GLAPIENTRYP glIsProgramPipeline)(GLuint pipeline);
GLLOADER_API void (GLAPIENTRYP glGetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1i)(GLuint program, GLint location, GLint v0);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glValidateProgramPipeline)(GLuint pipeline);
GLLOADER_API void (GLAPIENTRYP glGetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1d)(GLuint index, GLdouble x);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1dv)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL2dv)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL3dv)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL4dv)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLLOADER_API void (GLAPIENTRYP glViewportIndexedfv)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glScissorIndexedv)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glDepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glDepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
GLLOADER_API void (GLAPIENTRYP glGetFloati_v)(GLenum target, GLuint index, GLfloat *data);
GLLOADER_API void (GLAPIENTRYP glGetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
#endif // GL_VERSION_4_1_IMPLEMENTATION
#ifndef GL_VERSION_4_2_IMPLEMENTATION
#define GL_VERSION_4_2_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLLOADER_API void (GLAPIENTRYP glDrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
GLLOADER_API void (GLAPIENTRYP glDrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLLOADER_API void (GLAPIENTRYP glGetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glBindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
GLLOADER_API void (GLAPIENTRYP glMemoryBarrier)(GLbitfield barriers);
GLLOADER_API void (GLAPIENTRYP glTexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glTexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glTexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLLOADER_API void (GLAPIENTRYP glDrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
GLLOADER_API void (GLAPIENTRYP glDrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
#endif // GL_VERSION_4_2_IMPLEMENTATION
#ifndef GL_VERSION_4_3_IMPLEMENTATION
#define GL_VERSION_4_3_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glClearBufferData)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
GLLOADER_API void (GLAPIENTRYP glClearBufferSubData)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
GLLOADER_API void (GLAPIENTRYP glDispatchCompute)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
GLLOADER_API void (GLAPIENTRYP glDispatchComputeIndirect)(GLintptr indirect);
GLLOADER_API void (GLAPIENTRYP glCopyImageSubData)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLLOADER_API void (GLAPIENTRYP glFramebufferParameteri)(GLenum target, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glGetFramebufferParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetInternalformati64v)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
GLLOADER_API void (GLAPIENTRYP glInvalidateTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
GLLOADER_API void (GLAPIENTRYP glInvalidateTexImage)(GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glInvalidateBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLLOADER_API void (GLAPIENTRYP glInvalidateBufferData)(GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glInvalidateFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
GLLOADER_API void (GLAPIENTRYP glInvalidateSubFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glMultiDrawArraysIndirect)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glMultiDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glGetProgramInterfaceiv)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
GLLOADER_API GLuint(GLAPIENTRYP glGetProgramResourceIndex)(GLuint program, GLenum programInterface, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetProgramResourceName)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetProgramResourceiv)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
GLLOADER_API GLint(GLAPIENTRYP glGetProgramResourceLocation)(GLuint program, GLenum programInterface, const GLchar *name);
GLLOADER_API GLint(GLAPIENTRYP glGetProgramResourceLocationIndex)(GLuint program, GLenum programInterface, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glShaderStorageBlockBinding)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
GLLOADER_API void (GLAPIENTRYP glTexBufferRange)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glTexStorage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLLOADER_API void (GLAPIENTRYP glTexStorage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLLOADER_API void (GLAPIENTRYP glTextureView)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLLOADER_API void (GLAPIENTRYP glBindVertexBuffer)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glVertexAttribFormat)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLLOADER_API void (GLAPIENTRYP glVertexAttribIFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API void (GLAPIENTRYP glVertexAttribLFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API void (GLAPIENTRYP glVertexAttribBinding)(GLuint attribindex, GLuint bindingindex);
GLLOADER_API void (GLAPIENTRYP glVertexBindingDivisor)(GLuint bindingindex, GLuint divisor);
GLLOADER_API void (GLAPIENTRYP glDebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
GLLOADER_API void (GLAPIENTRYP glDebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
GLLOADER_API void (GLAPIENTRYP glDebugMessageCallback)(GLDEBUGPROC callback, const void *userParam);
GLLOADER_API GLuint(GLAPIENTRYP glGetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
GLLOADER_API void (GLAPIENTRYP glPushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
GLLOADER_API void (GLAPIENTRYP glPopDebugGroup)(void);
GLLOADER_API void (GLAPIENTRYP glObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
GLLOADER_API void (GLAPIENTRYP glGetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
GLLOADER_API void (GLAPIENTRYP glObjectPtrLabel)(const void *ptr, GLsizei length, const GLchar *label);
GLLOADER_API void (GLAPIENTRYP glGetObjectPtrLabel)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
#endif // GL_VERSION_4_3_IMPLEMENTATION
#ifndef GL_VERSION_4_4_IMPLEMENTATION
#define GL_VERSION_4_4_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBufferStorage)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
GLLOADER_API void (GLAPIENTRYP glClearTexImage)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
GLLOADER_API void (GLAPIENTRYP glClearTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
GLLOADER_API void (GLAPIENTRYP glBindBuffersBase)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
GLLOADER_API void (GLAPIENTRYP glBindBuffersRange)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
GLLOADER_API void (GLAPIENTRYP glBindTextures)(GLuint first, GLsizei count, const GLuint *textures);
GLLOADER_API void (GLAPIENTRYP glBindSamplers)(GLuint first, GLsizei count, const GLuint *samplers);
GLLOADER_API void (GLAPIENTRYP glBindImageTextures)(GLuint first, GLsizei count, const GLuint *textures);
GLLOADER_API void (GLAPIENTRYP glBindVertexBuffers)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
#endif // GL_VERSION_4_4_IMPLEMENTATION
#ifndef GL_VERSION_4_5_IMPLEMENTATION
#define GL_VERSION_4_5_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glClipControl)(GLenum origin, GLenum depth);
GLLOADER_API void (GLAPIENTRYP glCreateTransformFeedbacks)(GLsizei n, GLuint *ids);
GLLOADER_API void (GLAPIENTRYP glTransformFeedbackBufferBase)(GLuint xfb, GLuint index, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glTransformFeedbackBufferRange)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glGetTransformFeedbackiv)(GLuint xfb, GLenum pname, GLint *param);
GLLOADER_API void (GLAPIENTRYP glGetTransformFeedbacki_v)(GLuint xfb, GLenum pname, GLuint index, GLint *param);
GLLOADER_API void (GLAPIENTRYP glGetTransformFeedbacki64_v)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
GLLOADER_API void (GLAPIENTRYP glCreateBuffers)(GLsizei n, GLuint *buffers);
GLLOADER_API void (GLAPIENTRYP glNamedBufferStorage)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
GLLOADER_API void (GLAPIENTRYP glNamedBufferData)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
GLLOADER_API void (GLAPIENTRYP glNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
GLLOADER_API void (GLAPIENTRYP glCopyNamedBufferSubData)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glClearNamedBufferData)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
GLLOADER_API void (GLAPIENTRYP glClearNamedBufferSubData)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
GLLOADER_API void *(GLAPIENTRYP glMapNamedBuffer)(GLuint buffer, GLenum access);
GLLOADER_API void *(GLAPIENTRYP glMapNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLLOADER_API GLboolean(GLAPIENTRYP glUnmapNamedBuffer)(GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glFlushMappedNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLLOADER_API void (GLAPIENTRYP glGetNamedBufferParameteriv)(GLuint buffer, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedBufferParameteri64v)(GLuint buffer, GLenum pname, GLint64 *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedBufferPointerv)(GLuint buffer, GLenum pname, void **params);
GLLOADER_API void (GLAPIENTRYP glGetNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
GLLOADER_API void (GLAPIENTRYP glCreateFramebuffers)(GLsizei n, GLuint *framebuffers);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferRenderbuffer)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferParameteri)(GLuint framebuffer, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferTexture)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferTextureLayer)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferDrawBuffer)(GLuint framebuffer, GLenum buf);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferDrawBuffers)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferReadBuffer)(GLuint framebuffer, GLenum src);
GLLOADER_API void (GLAPIENTRYP glInvalidateNamedFramebufferData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
GLLOADER_API void (GLAPIENTRYP glInvalidateNamedFramebufferSubData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glClearNamedFramebufferiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glClearNamedFramebufferuiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glClearNamedFramebufferfv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glClearNamedFramebufferfi)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLLOADER_API void (GLAPIENTRYP glBlitNamedFramebuffer)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLLOADER_API GLenum(GLAPIENTRYP glCheckNamedFramebufferStatus)(GLuint framebuffer, GLenum target);
GLLOADER_API void (GLAPIENTRYP glGetNamedFramebufferParameteriv)(GLuint framebuffer, GLenum pname, GLint *param);
GLLOADER_API void (GLAPIENTRYP glGetNamedFramebufferAttachmentParameteriv)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glCreateRenderbuffers)(GLsizei n, GLuint *renderbuffers);
GLLOADER_API void (GLAPIENTRYP glNamedRenderbufferStorage)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glNamedRenderbufferStorageMultisample)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glGetNamedRenderbufferParameteriv)(GLuint renderbuffer, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glCreateTextures)(GLenum target, GLsizei n, GLuint *textures);
GLLOADER_API void (GLAPIENTRYP glTextureBuffer)(GLuint texture, GLenum internalformat, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glTextureBufferRange)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glTextureStorage1D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glTextureStorage2D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glTextureStorage3D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLLOADER_API void (GLAPIENTRYP glTextureStorage2DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLLOADER_API void (GLAPIENTRYP glTextureStorage3DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLLOADER_API void (GLAPIENTRYP glTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glCompressedTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCopyTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glCopyTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glCopyTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glTextureParameterf)(GLuint texture, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glTextureParameterfv)(GLuint texture, GLenum pname, const GLfloat *param);
GLLOADER_API void (GLAPIENTRYP glTextureParameteri)(GLuint texture, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glTextureParameterIiv)(GLuint texture, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glTextureParameterIuiv)(GLuint texture, GLenum pname, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glTextureParameteriv)(GLuint texture, GLenum pname, const GLint *param);
GLLOADER_API void (GLAPIENTRYP glGenerateTextureMipmap)(GLuint texture);
GLLOADER_API void (GLAPIENTRYP glBindTextureUnit)(GLuint unit, GLuint texture);
GLLOADER_API void (GLAPIENTRYP glGetTextureImage)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
GLLOADER_API void (GLAPIENTRYP glGetCompressedTextureImage)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
GLLOADER_API void (GLAPIENTRYP glGetTextureLevelParameterfv)(GLuint texture, GLint level, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureLevelParameteriv)(GLuint texture, GLint level, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureParameterfv)(GLuint texture, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureParameterIiv)(GLuint texture, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureParameterIuiv)(GLuint texture, GLenum pname, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureParameteriv)(GLuint texture, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glCreateVertexArrays)(GLsizei n, GLuint *arrays);
GLLOADER_API void (GLAPIENTRYP glDisableVertexArrayAttrib)(GLuint vaobj, GLuint index);
GLLOADER_API void (GLAPIENTRYP glEnableVertexArrayAttrib)(GLuint vaobj, GLuint index);
GLLOADER_API void (GLAPIENTRYP glVertexArrayElementBuffer)(GLuint vaobj, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexBuffer)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexBuffers)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
GLLOADER_API void (GLAPIENTRYP glVertexArrayAttribBinding)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
GLLOADER_API void (GLAPIENTRYP glVertexArrayAttribFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayAttribIFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayAttribLFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayBindingDivisor)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
GLLOADER_API void (GLAPIENTRYP glGetVertexArrayiv)(GLuint vaobj, GLenum pname, GLint *param);
GLLOADER_API void (GLAPIENTRYP glGetVertexArrayIndexediv)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
GLLOADER_API void (GLAPIENTRYP glGetVertexArrayIndexed64iv)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
GLLOADER_API void (GLAPIENTRYP glCreateSamplers)(GLsizei n, GLuint *samplers);
GLLOADER_API void (GLAPIENTRYP glCreateProgramPipelines)(GLsizei n, GLuint *pipelines);
GLLOADER_API void (GLAPIENTRYP glCreateQueries)(GLenum target, GLsizei n, GLuint *ids);
GLLOADER_API void (GLAPIENTRYP glGetQueryBufferObjecti64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glGetQueryBufferObjectiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glGetQueryBufferObjectui64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glGetQueryBufferObjectuiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glMemoryBarrierByRegion)(GLbitfield barriers);
GLLOADER_API void (GLAPIENTRYP glGetTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
GLLOADER_API void (GLAPIENTRYP glGetCompressedTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
GLLOADER_API GLenum(GLAPIENTRYP glGetGraphicsResetStatus)(void);
GLLOADER_API void (GLAPIENTRYP glGetnCompressedTexImage)(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
GLLOADER_API void (GLAPIENTRYP glGetnTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
GLLOADER_API void (GLAPIENTRYP glGetnUniformdv)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetnUniformfv)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetnUniformiv)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetnUniformuiv)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glReadnPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
GLLOADER_API void (GLAPIENTRYP glGetnMapdv)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glGetnMapfv)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glGetnMapiv)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
GLLOADER_API void (GLAPIENTRYP glGetnPixelMapfv)(GLenum map, GLsizei bufSize, GLfloat *values);
GLLOADER_API void (GLAPIENTRYP glGetnPixelMapuiv)(GLenum map, GLsizei bufSize, GLuint *values);
GLLOADER_API void (GLAPIENTRYP glGetnPixelMapusv)(GLenum map, GLsizei bufSize, GLushort *values);
GLLOADER_API void (GLAPIENTRYP glGetnPolygonStipple)(GLsizei bufSize, GLubyte *pattern);
GLLOADER_API void (GLAPIENTRYP glGetnColorTable)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
GLLOADER_API void (GLAPIENTRYP glGetnConvolutionFilter)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
GLLOADER_API void (GLAPIENTRYP glGetnSeparableFilter)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
GLLOADER_API void (GLAPIENTRYP glGetnHistogram)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
GLLOADER_API void (GLAPIENTRYP glGetnMinmax)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
GLLOADER_API void (GLAPIENTRYP glTextureBarrier)(void);
#endif // GL_VERSION_4_5_IMPLEMENTATION
#ifndef GL_ARB_ES3_2_compatibility_IMPLEMENTATION
#define GL_ARB_ES3_2_compatibility_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPrimitiveBoundingBoxARB)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
#endif // GL_ARB_ES3_2_compatibility_IMPLEMENTATION
#ifndef GL_ARB_bindless_texture_IMPLEMENTATION
#define GL_ARB_bindless_texture_IMPLEMENTATION 1
GLLOADER_API GLuint64(GLAPIENTRYP glGetTextureHandleARB)(GLuint texture);
GLLOADER_API GLuint64(GLAPIENTRYP glGetTextureSamplerHandleARB)(GLuint texture, GLuint sampler);
GLLOADER_API void (GLAPIENTRYP glMakeTextureHandleResidentARB)(GLuint64 handle);
GLLOADER_API void (GLAPIENTRYP glMakeTextureHandleNonResidentARB)(GLuint64 handle);
GLLOADER_API GLuint64(GLAPIENTRYP glGetImageHandleARB)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLLOADER_API void (GLAPIENTRYP glMakeImageHandleResidentARB)(GLuint64 handle, GLenum access);
GLLOADER_API void (GLAPIENTRYP glMakeImageHandleNonResidentARB)(GLuint64 handle);
GLLOADER_API void (GLAPIENTRYP glUniformHandleui64ARB)(GLint location, GLuint64 value);
GLLOADER_API void (GLAPIENTRYP glUniformHandleui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformHandleui64ARB)(GLuint program, GLint location, GLuint64 value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformHandleui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
GLLOADER_API GLboolean(GLAPIENTRYP glIsTextureHandleResidentARB)(GLuint64 handle);
GLLOADER_API GLboolean(GLAPIENTRYP glIsImageHandleResidentARB)(GLuint64 handle);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1ui64ARB)(GLuint index, GLuint64EXT x);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1ui64vARB)(GLuint index, const GLuint64EXT *v);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribLui64vARB)(GLuint index, GLenum pname, GLuint64EXT *params);
#endif // GL_ARB_bindless_texture_IMPLEMENTATION
#ifndef GL_ARB_cl_event_IMPLEMENTATION
#define GL_ARB_cl_event_IMPLEMENTATION 1
GLLOADER_API GLsync(GLAPIENTRYP glCreateSyncFromCLeventARB)(struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
#endif // GL_ARB_cl_event_IMPLEMENTATION
#ifndef GL_ARB_color_buffer_float_IMPLEMENTATION
#define GL_ARB_color_buffer_float_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glClampColorARB)(GLenum target, GLenum clamp);
#endif // GL_ARB_color_buffer_float_IMPLEMENTATION
#ifndef GL_ARB_compute_variable_group_size_IMPLEMENTATION
#define GL_ARB_compute_variable_group_size_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDispatchComputeGroupSizeARB)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
#endif // GL_ARB_compute_variable_group_size_IMPLEMENTATION
#ifndef GL_ARB_debug_output_IMPLEMENTATION
#define GL_ARB_debug_output_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDebugMessageControlARB)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
GLLOADER_API void (GLAPIENTRYP glDebugMessageInsertARB)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
GLLOADER_API void (GLAPIENTRYP glDebugMessageCallbackARB)(GLDEBUGPROCARB callback, const void *userParam);
GLLOADER_API GLuint(GLAPIENTRYP glGetDebugMessageLogARB)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
#endif // GL_ARB_debug_output_IMPLEMENTATION
#ifndef GL_ARB_draw_buffers_IMPLEMENTATION
#define GL_ARB_draw_buffers_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawBuffersARB)(GLsizei n, const GLenum *bufs);
#endif // GL_ARB_draw_buffers_IMPLEMENTATION
#ifndef GL_ARB_draw_buffers_blend_IMPLEMENTATION
#define GL_ARB_draw_buffers_blend_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendEquationiARB)(GLuint buf, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glBlendEquationSeparateiARB)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLLOADER_API void (GLAPIENTRYP glBlendFunciARB)(GLuint buf, GLenum src, GLenum dst);
GLLOADER_API void (GLAPIENTRYP glBlendFuncSeparateiARB)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
#endif // GL_ARB_draw_buffers_blend_IMPLEMENTATION
#ifndef GL_ARB_draw_instanced_IMPLEMENTATION
#define GL_ARB_draw_instanced_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawArraysInstancedARB)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLLOADER_API void (GLAPIENTRYP glDrawElementsInstancedARB)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
#endif // GL_ARB_draw_instanced_IMPLEMENTATION
#ifndef GL_ARB_fragment_program_IMPLEMENTATION
#define GL_ARB_fragment_program_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProgramStringARB)(GLenum target, GLenum format, GLsizei len, const void *string);
GLLOADER_API void (GLAPIENTRYP glBindProgramARB)(GLenum target, GLuint program);
GLLOADER_API void (GLAPIENTRYP glDeleteProgramsARB)(GLsizei n, const GLuint *programs);
GLLOADER_API void (GLAPIENTRYP glGenProgramsARB)(GLsizei n, GLuint *programs);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramEnvParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramEnvParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramLocalParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramLocalParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramivARB)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramStringARB)(GLenum target, GLenum pname, void *string);
GLLOADER_API GLboolean(GLAPIENTRYP glIsProgramARB)(GLuint program);
#endif // GL_ARB_fragment_program_IMPLEMENTATION
#ifndef GL_ARB_geometry_shader4_IMPLEMENTATION
#define GL_ARB_geometry_shader4_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProgramParameteriARB)(GLuint program, GLenum pname, GLint value);
GLLOADER_API void (GLAPIENTRYP glFramebufferTextureARB)(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glFramebufferTextureLayerARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLLOADER_API void (GLAPIENTRYP glFramebufferTextureFaceARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif // GL_ARB_geometry_shader4_IMPLEMENTATION
#ifndef GL_ARB_gpu_shader_int64_IMPLEMENTATION
#define GL_ARB_gpu_shader_int64_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glUniform1i64ARB)(GLint location, GLint64 x);
GLLOADER_API void (GLAPIENTRYP glUniform2i64ARB)(GLint location, GLint64 x, GLint64 y);
GLLOADER_API void (GLAPIENTRYP glUniform3i64ARB)(GLint location, GLint64 x, GLint64 y, GLint64 z);
GLLOADER_API void (GLAPIENTRYP glUniform4i64ARB)(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
GLLOADER_API void (GLAPIENTRYP glUniform1i64vARB)(GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API void (GLAPIENTRYP glUniform2i64vARB)(GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API void (GLAPIENTRYP glUniform3i64vARB)(GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API void (GLAPIENTRYP glUniform4i64vARB)(GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API void (GLAPIENTRYP glUniform1ui64ARB)(GLint location, GLuint64 x);
GLLOADER_API void (GLAPIENTRYP glUniform2ui64ARB)(GLint location, GLuint64 x, GLuint64 y);
GLLOADER_API void (GLAPIENTRYP glUniform3ui64ARB)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
GLLOADER_API void (GLAPIENTRYP glUniform4ui64ARB)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
GLLOADER_API void (GLAPIENTRYP glUniform1ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API void (GLAPIENTRYP glUniform2ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API void (GLAPIENTRYP glUniform3ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API void (GLAPIENTRYP glUniform4ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API void (GLAPIENTRYP glGetUniformi64vARB)(GLuint program, GLint location, GLint64 *params);
GLLOADER_API void (GLAPIENTRYP glGetUniformui64vARB)(GLuint program, GLint location, GLuint64 *params);
GLLOADER_API void (GLAPIENTRYP glGetnUniformi64vARB)(GLuint program, GLint location, GLsizei bufSize, GLint64 *params);
GLLOADER_API void (GLAPIENTRYP glGetnUniformui64vARB)(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1i64ARB)(GLuint program, GLint location, GLint64 x);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1ui64ARB)(GLuint program, GLint location, GLuint64 x);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
#endif // GL_ARB_gpu_shader_int64_IMPLEMENTATION
#ifndef GL_ARB_imaging_IMPLEMENTATION
#define GL_ARB_imaging_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glColorTable)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
GLLOADER_API void (GLAPIENTRYP glColorTableParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glColorTableParameteriv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glCopyColorTable)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glGetColorTable)(GLenum target, GLenum format, GLenum type, void *table);
GLLOADER_API void (GLAPIENTRYP glGetColorTableParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetColorTableParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glColorSubTable)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
GLLOADER_API void (GLAPIENTRYP glCopyColorSubTable)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glConvolutionFilter1D)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
GLLOADER_API void (GLAPIENTRYP glConvolutionFilter2D)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameterf)(GLenum target, GLenum pname, GLfloat params);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameteri)(GLenum target, GLenum pname, GLint params);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameteriv)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glCopyConvolutionFilter1D)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glCopyConvolutionFilter2D)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glGetConvolutionFilter)(GLenum target, GLenum format, GLenum type, void *image);
GLLOADER_API void (GLAPIENTRYP glGetConvolutionParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetConvolutionParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetSeparableFilter)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
GLLOADER_API void (GLAPIENTRYP glSeparableFilter2D)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
GLLOADER_API void (GLAPIENTRYP glGetHistogram)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
GLLOADER_API void (GLAPIENTRYP glGetHistogramParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetHistogramParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetMinmax)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
GLLOADER_API void (GLAPIENTRYP glGetMinmaxParameterfv)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetMinmaxParameteriv)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glHistogram)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLLOADER_API void (GLAPIENTRYP glMinmax)(GLenum target, GLenum internalformat, GLboolean sink);
GLLOADER_API void (GLAPIENTRYP glResetHistogram)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glResetMinmax)(GLenum target);
#endif // GL_ARB_imaging_IMPLEMENTATION
#ifndef GL_ARB_indirect_parameters_IMPLEMENTATION
#define GL_ARB_indirect_parameters_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMultiDrawArraysIndirectCountARB)(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glMultiDrawElementsIndirectCountARB)(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
#endif // GL_ARB_indirect_parameters_IMPLEMENTATION
#ifndef GL_ARB_instanced_arrays_IMPLEMENTATION
#define GL_ARB_instanced_arrays_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexAttribDivisorARB)(GLuint index, GLuint divisor);
#endif // GL_ARB_instanced_arrays_IMPLEMENTATION
#ifndef GL_ARB_matrix_palette_IMPLEMENTATION
#define GL_ARB_matrix_palette_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glCurrentPaletteMatrixARB)(GLint index);
GLLOADER_API void (GLAPIENTRYP glMatrixIndexubvARB)(GLint size, const GLubyte *indices);
GLLOADER_API void (GLAPIENTRYP glMatrixIndexusvARB)(GLint size, const GLushort *indices);
GLLOADER_API void (GLAPIENTRYP glMatrixIndexuivARB)(GLint size, const GLuint *indices);
GLLOADER_API void (GLAPIENTRYP glMatrixIndexPointerARB)(GLint size, GLenum type, GLsizei stride, const void *pointer);
#endif // GL_ARB_matrix_palette_IMPLEMENTATION
#ifndef GL_ARB_multisample_IMPLEMENTATION
#define GL_ARB_multisample_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glSampleCoverageARB)(GLfloat value, GLboolean invert);
#endif // GL_ARB_multisample_IMPLEMENTATION
#ifndef GL_ARB_multitexture_IMPLEMENTATION
#define GL_ARB_multitexture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glActiveTextureARB)(GLenum texture);
GLLOADER_API void (GLAPIENTRYP glClientActiveTextureARB)(GLenum texture);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1dARB)(GLenum target, GLdouble s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1dvARB)(GLenum target, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1fARB)(GLenum target, GLfloat s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1fvARB)(GLenum target, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1iARB)(GLenum target, GLint s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1ivARB)(GLenum target, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1sARB)(GLenum target, GLshort s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1svARB)(GLenum target, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2dARB)(GLenum target, GLdouble s, GLdouble t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2dvARB)(GLenum target, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2fARB)(GLenum target, GLfloat s, GLfloat t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2fvARB)(GLenum target, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2iARB)(GLenum target, GLint s, GLint t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2ivARB)(GLenum target, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2sARB)(GLenum target, GLshort s, GLshort t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2svARB)(GLenum target, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3dARB)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3dvARB)(GLenum target, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3fARB)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3fvARB)(GLenum target, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3iARB)(GLenum target, GLint s, GLint t, GLint r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3ivARB)(GLenum target, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3sARB)(GLenum target, GLshort s, GLshort t, GLshort r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3svARB)(GLenum target, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4dARB)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4dvARB)(GLenum target, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4fARB)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4fvARB)(GLenum target, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4iARB)(GLenum target, GLint s, GLint t, GLint r, GLint q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4ivARB)(GLenum target, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4sARB)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4svARB)(GLenum target, const GLshort *v);
#endif // GL_ARB_multitexture_IMPLEMENTATION
#ifndef GL_ARB_occlusion_query_IMPLEMENTATION
#define GL_ARB_occlusion_query_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGenQueriesARB)(GLsizei n, GLuint *ids);
GLLOADER_API void (GLAPIENTRYP glDeleteQueriesARB)(GLsizei n, const GLuint *ids);
GLLOADER_API GLboolean(GLAPIENTRYP glIsQueryARB)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glBeginQueryARB)(GLenum target, GLuint id);
GLLOADER_API void (GLAPIENTRYP glEndQueryARB)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glGetQueryivARB)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetQueryObjectivARB)(GLuint id, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetQueryObjectuivARB)(GLuint id, GLenum pname, GLuint *params);
#endif // GL_ARB_occlusion_query_IMPLEMENTATION
#ifndef GL_ARB_parallel_shader_compile_IMPLEMENTATION
#define GL_ARB_parallel_shader_compile_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMaxShaderCompilerThreadsARB)(GLuint count);
#endif // GL_ARB_parallel_shader_compile_IMPLEMENTATION
#ifndef GL_ARB_point_parameters_IMPLEMENTATION
#define GL_ARB_point_parameters_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPointParameterfARB)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glPointParameterfvARB)(GLenum pname, const GLfloat *params);
#endif // GL_ARB_point_parameters_IMPLEMENTATION
#ifndef GL_ARB_robustness_IMPLEMENTATION
#define GL_ARB_robustness_IMPLEMENTATION 1
GLLOADER_API GLenum(GLAPIENTRYP glGetGraphicsResetStatusARB)(void);
GLLOADER_API void (GLAPIENTRYP glGetnTexImageARB)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
GLLOADER_API void (GLAPIENTRYP glReadnPixelsARB)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
GLLOADER_API void (GLAPIENTRYP glGetnCompressedTexImageARB)(GLenum target, GLint lod, GLsizei bufSize, void *img);
GLLOADER_API void (GLAPIENTRYP glGetnUniformfvARB)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetnUniformivARB)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetnUniformuivARB)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetnUniformdvARB)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetnMapdvARB)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glGetnMapfvARB)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glGetnMapivARB)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
GLLOADER_API void (GLAPIENTRYP glGetnPixelMapfvARB)(GLenum map, GLsizei bufSize, GLfloat *values);
GLLOADER_API void (GLAPIENTRYP glGetnPixelMapuivARB)(GLenum map, GLsizei bufSize, GLuint *values);
GLLOADER_API void (GLAPIENTRYP glGetnPixelMapusvARB)(GLenum map, GLsizei bufSize, GLushort *values);
GLLOADER_API void (GLAPIENTRYP glGetnPolygonStippleARB)(GLsizei bufSize, GLubyte *pattern);
GLLOADER_API void (GLAPIENTRYP glGetnColorTableARB)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
GLLOADER_API void (GLAPIENTRYP glGetnConvolutionFilterARB)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
GLLOADER_API void (GLAPIENTRYP glGetnSeparableFilterARB)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
GLLOADER_API void (GLAPIENTRYP glGetnHistogramARB)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
GLLOADER_API void (GLAPIENTRYP glGetnMinmaxARB)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
#endif // GL_ARB_robustness_IMPLEMENTATION
#ifndef GL_ARB_sample_locations_IMPLEMENTATION
#define GL_ARB_sample_locations_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFramebufferSampleLocationsfvARB)(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferSampleLocationsfvARB)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glEvaluateDepthValuesARB)(void);
#endif // GL_ARB_sample_locations_IMPLEMENTATION
#ifndef GL_ARB_sample_shading_IMPLEMENTATION
#define GL_ARB_sample_shading_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMinSampleShadingARB)(GLfloat value);
#endif // GL_ARB_sample_shading_IMPLEMENTATION
#ifndef GL_ARB_shader_objects_IMPLEMENTATION
#define GL_ARB_shader_objects_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDeleteObjectARB)(GLhandleARB obj);
GLhandleARB(GLAPIENTRYP glGetHandleARB)(GLenum pname);
GLLOADER_API void (GLAPIENTRYP glDetachObjectARB)(GLhandleARB containerObj, GLhandleARB attachedObj);
GLhandleARB(GLAPIENTRYP glCreateShaderObjectARB)(GLenum shaderType);
GLLOADER_API void (GLAPIENTRYP glShaderSourceARB)(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
GLLOADER_API void (GLAPIENTRYP glCompileShaderARB)(GLhandleARB shaderObj);
GLhandleARB(GLAPIENTRYP glCreateProgramObjectARB)(void);
GLLOADER_API void (GLAPIENTRYP glAttachObjectARB)(GLhandleARB containerObj, GLhandleARB obj);
GLLOADER_API void (GLAPIENTRYP glLinkProgramARB)(GLhandleARB programObj);
GLLOADER_API void (GLAPIENTRYP glUseProgramObjectARB)(GLhandleARB programObj);
GLLOADER_API void (GLAPIENTRYP glValidateProgramARB)(GLhandleARB programObj);
GLLOADER_API void (GLAPIENTRYP glUniform1fARB)(GLint location, GLfloat v0);
GLLOADER_API void (GLAPIENTRYP glUniform2fARB)(GLint location, GLfloat v0, GLfloat v1);
GLLOADER_API void (GLAPIENTRYP glUniform3fARB)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLLOADER_API void (GLAPIENTRYP glUniform4fARB)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLLOADER_API void (GLAPIENTRYP glUniform1iARB)(GLint location, GLint v0);
GLLOADER_API void (GLAPIENTRYP glUniform2iARB)(GLint location, GLint v0, GLint v1);
GLLOADER_API void (GLAPIENTRYP glUniform3iARB)(GLint location, GLint v0, GLint v1, GLint v2);
GLLOADER_API void (GLAPIENTRYP glUniform4iARB)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLLOADER_API void (GLAPIENTRYP glUniform1fvARB)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniform2fvARB)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniform3fvARB)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniform4fvARB)(GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniform1ivARB)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glUniform2ivARB)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glUniform3ivARB)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glUniform4ivARB)(GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix2fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix3fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glUniformMatrix4fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glGetObjectParameterfvARB)(GLhandleARB obj, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetObjectParameterivARB)(GLhandleARB obj, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetInfoLogARB)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
GLLOADER_API void (GLAPIENTRYP glGetAttachedObjectsARB)(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
GLLOADER_API GLint(GLAPIENTRYP glGetUniformLocationARB)(GLhandleARB programObj, const GLcharARB *name);
GLLOADER_API void (GLAPIENTRYP glGetActiveUniformARB)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
GLLOADER_API void (GLAPIENTRYP glGetUniformfvARB)(GLhandleARB programObj, GLint location, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetUniformivARB)(GLhandleARB programObj, GLint location, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetShaderSourceARB)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
#endif // GL_ARB_shader_objects_IMPLEMENTATION
#ifndef GL_ARB_shading_language_include_IMPLEMENTATION
#define GL_ARB_shading_language_include_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glNamedStringARB)(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
GLLOADER_API void (GLAPIENTRYP glDeleteNamedStringARB)(GLint namelen, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glCompileShaderIncludeARB)(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
GLLOADER_API GLboolean(GLAPIENTRYP glIsNamedStringARB)(GLint namelen, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetNamedStringARB)(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
GLLOADER_API void (GLAPIENTRYP glGetNamedStringivARB)(GLint namelen, const GLchar *name, GLenum pname, GLint *params);
#endif // GL_ARB_shading_language_include_IMPLEMENTATION
#ifndef GL_ARB_sparse_buffer_IMPLEMENTATION
#define GL_ARB_sparse_buffer_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBufferPageCommitmentARB)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLLOADER_API void (GLAPIENTRYP glNamedBufferPageCommitmentEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLLOADER_API void (GLAPIENTRYP glNamedBufferPageCommitmentARB)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
#endif // GL_ARB_sparse_buffer_IMPLEMENTATION
#ifndef GL_ARB_sparse_texture_IMPLEMENTATION
#define GL_ARB_sparse_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexPageCommitmentARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
#endif // GL_ARB_sparse_texture_IMPLEMENTATION
#ifndef GL_ARB_texture_buffer_object_IMPLEMENTATION
#define GL_ARB_texture_buffer_object_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexBufferARB)(GLenum target, GLenum internalformat, GLuint buffer);
#endif // GL_ARB_texture_buffer_object_IMPLEMENTATION
#ifndef GL_ARB_texture_compression_IMPLEMENTATION
#define GL_ARB_texture_compression_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glCompressedTexImage3DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexImage2DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexImage1DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexSubImage3DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexSubImage2DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTexSubImage1DARB)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
GLLOADER_API void (GLAPIENTRYP glGetCompressedTexImageARB)(GLenum target, GLint level, void *img);
#endif // GL_ARB_texture_compression_IMPLEMENTATION
#ifndef GL_ARB_transpose_matrix_IMPLEMENTATION
#define GL_ARB_transpose_matrix_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glLoadTransposeMatrixfARB)(const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glLoadTransposeMatrixdARB)(const GLdouble *m);
GLLOADER_API void (GLAPIENTRYP glMultTransposeMatrixfARB)(const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMultTransposeMatrixdARB)(const GLdouble *m);
#endif // GL_ARB_transpose_matrix_IMPLEMENTATION
#ifndef GL_ARB_vertex_blend_IMPLEMENTATION
#define GL_ARB_vertex_blend_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glWeightbvARB)(GLint size, const GLbyte *weights);
GLLOADER_API void (GLAPIENTRYP glWeightsvARB)(GLint size, const GLshort *weights);
GLLOADER_API void (GLAPIENTRYP glWeightivARB)(GLint size, const GLint *weights);
GLLOADER_API void (GLAPIENTRYP glWeightfvARB)(GLint size, const GLfloat *weights);
GLLOADER_API void (GLAPIENTRYP glWeightdvARB)(GLint size, const GLdouble *weights);
GLLOADER_API void (GLAPIENTRYP glWeightubvARB)(GLint size, const GLubyte *weights);
GLLOADER_API void (GLAPIENTRYP glWeightusvARB)(GLint size, const GLushort *weights);
GLLOADER_API void (GLAPIENTRYP glWeightuivARB)(GLint size, const GLuint *weights);
GLLOADER_API void (GLAPIENTRYP glWeightPointerARB)(GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glVertexBlendARB)(GLint count);
#endif // GL_ARB_vertex_blend_IMPLEMENTATION
#ifndef GL_ARB_vertex_buffer_object_IMPLEMENTATION
#define GL_ARB_vertex_buffer_object_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBindBufferARB)(GLenum target, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glDeleteBuffersARB)(GLsizei n, const GLuint *buffers);
GLLOADER_API void (GLAPIENTRYP glGenBuffersARB)(GLsizei n, GLuint *buffers);
GLLOADER_API GLboolean(GLAPIENTRYP glIsBufferARB)(GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glBufferDataARB)(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);
GLLOADER_API void (GLAPIENTRYP glBufferSubDataARB)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);
GLLOADER_API void (GLAPIENTRYP glGetBufferSubDataARB)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);
GLLOADER_API void *(GLAPIENTRYP glMapBufferARB)(GLenum target, GLenum access);
GLLOADER_API GLboolean(GLAPIENTRYP glUnmapBufferARB)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glGetBufferParameterivARB)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetBufferPointervARB)(GLenum target, GLenum pname, void **params);
#endif // GL_ARB_vertex_buffer_object_IMPLEMENTATION
#ifndef GL_ARB_vertex_program_IMPLEMENTATION
#define GL_ARB_vertex_program_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1dARB)(GLuint index, GLdouble x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1dvARB)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1fARB)(GLuint index, GLfloat x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1fvARB)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1sARB)(GLuint index, GLshort x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1svARB)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2dARB)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2dvARB)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2fARB)(GLuint index, GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2fvARB)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2sARB)(GLuint index, GLshort x, GLshort y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2svARB)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3dARB)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3dvARB)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3fARB)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3fvARB)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3sARB)(GLuint index, GLshort x, GLshort y, GLshort z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3svARB)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4NbvARB)(GLuint index, const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4NivARB)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4NsvARB)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4NubARB)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4NubvARB)(GLuint index, const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4NuivARB)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4NusvARB)(GLuint index, const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4bvARB)(GLuint index, const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4dARB)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4dvARB)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4fARB)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4fvARB)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4ivARB)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4sARB)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4svARB)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4ubvARB)(GLuint index, const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4uivARB)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4usvARB)(GLuint index, const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribPointerARB)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glEnableVertexAttribArrayARB)(GLuint index);
GLLOADER_API void (GLAPIENTRYP glDisableVertexAttribArrayARB)(GLuint index);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribdvARB)(GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribfvARB)(GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribivARB)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribPointervARB)(GLuint index, GLenum pname, void **pointer);
#endif // GL_ARB_vertex_program_IMPLEMENTATION
#ifndef GL_ARB_vertex_shader_IMPLEMENTATION
#define GL_ARB_vertex_shader_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBindAttribLocationARB)(GLhandleARB programObj, GLuint index, const GLcharARB *name);
GLLOADER_API void (GLAPIENTRYP glGetActiveAttribARB)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
GLLOADER_API GLint(GLAPIENTRYP glGetAttribLocationARB)(GLhandleARB programObj, const GLcharARB *name);
#endif // GL_ARB_vertex_shader_IMPLEMENTATION
#ifndef GL_ARB_window_pos_IMPLEMENTATION
#define GL_ARB_window_pos_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glWindowPos2dARB)(GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2dvARB)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos2fARB)(GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2fvARB)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos2iARB)(GLint x, GLint y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2ivARB)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos2sARB)(GLshort x, GLshort y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2svARB)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3dARB)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3dvARB)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3fARB)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3fvARB)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3iARB)(GLint x, GLint y, GLint z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3ivARB)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3sARB)(GLshort x, GLshort y, GLshort z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3svARB)(const GLshort *v);
#endif // GL_ARB_window_pos_IMPLEMENTATION
#ifndef GL_KHR_blend_equation_advanced_IMPLEMENTATION
#define GL_KHR_blend_equation_advanced_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendBarrierKHR)(void);
#endif // GL_KHR_blend_equation_advanced_IMPLEMENTATION
#ifndef GL_OES_byte_coordinates_IMPLEMENTATION
#define GL_OES_byte_coordinates_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1bOES)(GLenum texture, GLbyte s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1bvOES)(GLenum texture, const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2bOES)(GLenum texture, GLbyte s, GLbyte t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2bvOES)(GLenum texture, const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3bOES)(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3bvOES)(GLenum texture, const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4bOES)(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4bvOES)(GLenum texture, const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoord1bOES)(GLbyte s);
GLLOADER_API void (GLAPIENTRYP glTexCoord1bvOES)(const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoord2bOES)(GLbyte s, GLbyte t);
GLLOADER_API void (GLAPIENTRYP glTexCoord2bvOES)(const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoord3bOES)(GLbyte s, GLbyte t, GLbyte r);
GLLOADER_API void (GLAPIENTRYP glTexCoord3bvOES)(const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoord4bOES)(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLLOADER_API void (GLAPIENTRYP glTexCoord4bvOES)(const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glVertex2bOES)(GLbyte x, GLbyte y);
GLLOADER_API void (GLAPIENTRYP glVertex2bvOES)(const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glVertex3bOES)(GLbyte x, GLbyte y, GLbyte z);
GLLOADER_API void (GLAPIENTRYP glVertex3bvOES)(const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glVertex4bOES)(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
GLLOADER_API void (GLAPIENTRYP glVertex4bvOES)(const GLbyte *coords);
#endif // GL_OES_byte_coordinates_IMPLEMENTATION
#ifndef GL_OES_fixed_point_IMPLEMENTATION
#define GL_OES_fixed_point_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glAlphaFuncxOES)(GLenum func, GLfixed ref);
GLLOADER_API void (GLAPIENTRYP glClearColorxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLLOADER_API void (GLAPIENTRYP glClearDepthxOES)(GLfixed depth);
GLLOADER_API void (GLAPIENTRYP glClipPlanexOES)(GLenum plane, const GLfixed *equation);
GLLOADER_API void (GLAPIENTRYP glColor4xOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLLOADER_API void (GLAPIENTRYP glDepthRangexOES)(GLfixed n, GLfixed f);
GLLOADER_API void (GLAPIENTRYP glFogxOES)(GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glFogxvOES)(GLenum pname, const GLfixed *param);
GLLOADER_API void (GLAPIENTRYP glFrustumxOES)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLLOADER_API void (GLAPIENTRYP glGetClipPlanexOES)(GLenum plane, GLfixed *equation);
GLLOADER_API void (GLAPIENTRYP glGetFixedvOES)(GLenum pname, GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glGetTexEnvxvOES)(GLenum target, GLenum pname, GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glGetTexParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glLightModelxOES)(GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glLightModelxvOES)(GLenum pname, const GLfixed *param);
GLLOADER_API void (GLAPIENTRYP glLightxOES)(GLenum light, GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glLightxvOES)(GLenum light, GLenum pname, const GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glLineWidthxOES)(GLfixed width);
GLLOADER_API void (GLAPIENTRYP glLoadMatrixxOES)(const GLfixed *m);
GLLOADER_API void (GLAPIENTRYP glMaterialxOES)(GLenum face, GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glMaterialxvOES)(GLenum face, GLenum pname, const GLfixed *param);
GLLOADER_API void (GLAPIENTRYP glMultMatrixxOES)(const GLfixed *m);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4xOES)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLLOADER_API void (GLAPIENTRYP glNormal3xOES)(GLfixed nx, GLfixed ny, GLfixed nz);
GLLOADER_API void (GLAPIENTRYP glOrthoxOES)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLLOADER_API void (GLAPIENTRYP glPointParameterxvOES)(GLenum pname, const GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glPointSizexOES)(GLfixed size);
GLLOADER_API void (GLAPIENTRYP glPolygonOffsetxOES)(GLfixed factor, GLfixed units);
GLLOADER_API void (GLAPIENTRYP glRotatexOES)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API void (GLAPIENTRYP glScalexOES)(GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API void (GLAPIENTRYP glTexEnvxOES)(GLenum target, GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glTexEnvxvOES)(GLenum target, GLenum pname, const GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glTexParameterxOES)(GLenum target, GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glTexParameterxvOES)(GLenum target, GLenum pname, const GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glTranslatexOES)(GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API void (GLAPIENTRYP glAccumxOES)(GLenum op, GLfixed value);
GLLOADER_API void (GLAPIENTRYP glBitmapxOES)(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
GLLOADER_API void (GLAPIENTRYP glBlendColorxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLLOADER_API void (GLAPIENTRYP glClearAccumxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLLOADER_API void (GLAPIENTRYP glColor3xOES)(GLfixed red, GLfixed green, GLfixed blue);
GLLOADER_API void (GLAPIENTRYP glColor3xvOES)(const GLfixed *components);
GLLOADER_API void (GLAPIENTRYP glColor4xvOES)(const GLfixed *components);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameterxOES)(GLenum target, GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameterxvOES)(GLenum target, GLenum pname, const GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glEvalCoord1xOES)(GLfixed u);
GLLOADER_API void (GLAPIENTRYP glEvalCoord1xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glEvalCoord2xOES)(GLfixed u, GLfixed v);
GLLOADER_API void (GLAPIENTRYP glEvalCoord2xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glFeedbackBufferxOES)(GLsizei n, GLenum type, const GLfixed *buffer);
GLLOADER_API void (GLAPIENTRYP glGetConvolutionParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glGetHistogramParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glGetLightxOES)(GLenum light, GLenum pname, GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glGetMapxvOES)(GLenum target, GLenum query, GLfixed *v);
GLLOADER_API void (GLAPIENTRYP glGetMaterialxOES)(GLenum face, GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glGetPixelMapxv)(GLenum map, GLint size, GLfixed *values);
GLLOADER_API void (GLAPIENTRYP glGetTexGenxvOES)(GLenum coord, GLenum pname, GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glGetTexLevelParameterxvOES)(GLenum target, GLint level, GLenum pname, GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glIndexxOES)(GLfixed component);
GLLOADER_API void (GLAPIENTRYP glIndexxvOES)(const GLfixed *component);
GLLOADER_API void (GLAPIENTRYP glLoadTransposeMatrixxOES)(const GLfixed *m);
GLLOADER_API void (GLAPIENTRYP glMap1xOES)(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
GLLOADER_API void (GLAPIENTRYP glMap2xOES)(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
GLLOADER_API void (GLAPIENTRYP glMapGrid1xOES)(GLint n, GLfixed u1, GLfixed u2);
GLLOADER_API void (GLAPIENTRYP glMapGrid2xOES)(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
GLLOADER_API void (GLAPIENTRYP glMultTransposeMatrixxOES)(const GLfixed *m);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1xOES)(GLenum texture, GLfixed s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1xvOES)(GLenum texture, const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2xOES)(GLenum texture, GLfixed s, GLfixed t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2xvOES)(GLenum texture, const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3xOES)(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3xvOES)(GLenum texture, const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4xvOES)(GLenum texture, const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glNormal3xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glPassThroughxOES)(GLfixed token);
GLLOADER_API void (GLAPIENTRYP glPixelMapx)(GLenum map, GLint size, const GLfixed *values);
GLLOADER_API void (GLAPIENTRYP glPixelStorex)(GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glPixelTransferxOES)(GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glPixelZoomxOES)(GLfixed xfactor, GLfixed yfactor);
GLLOADER_API void (GLAPIENTRYP glPrioritizeTexturesxOES)(GLsizei n, const GLuint *textures, const GLfixed *priorities);
GLLOADER_API void (GLAPIENTRYP glRasterPos2xOES)(GLfixed x, GLfixed y);
GLLOADER_API void (GLAPIENTRYP glRasterPos2xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glRasterPos3xOES)(GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API void (GLAPIENTRYP glRasterPos3xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glRasterPos4xOES)(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
GLLOADER_API void (GLAPIENTRYP glRasterPos4xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glRectxOES)(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
GLLOADER_API void (GLAPIENTRYP glRectxvOES)(const GLfixed *v1, const GLfixed *v2);
GLLOADER_API void (GLAPIENTRYP glTexCoord1xOES)(GLfixed s);
GLLOADER_API void (GLAPIENTRYP glTexCoord1xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoord2xOES)(GLfixed s, GLfixed t);
GLLOADER_API void (GLAPIENTRYP glTexCoord2xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoord3xOES)(GLfixed s, GLfixed t, GLfixed r);
GLLOADER_API void (GLAPIENTRYP glTexCoord3xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glTexCoord4xOES)(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLLOADER_API void (GLAPIENTRYP glTexCoord4xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glTexGenxOES)(GLenum coord, GLenum pname, GLfixed param);
GLLOADER_API void (GLAPIENTRYP glTexGenxvOES)(GLenum coord, GLenum pname, const GLfixed *params);
GLLOADER_API void (GLAPIENTRYP glVertex2xOES)(GLfixed x);
GLLOADER_API void (GLAPIENTRYP glVertex2xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glVertex3xOES)(GLfixed x, GLfixed y);
GLLOADER_API void (GLAPIENTRYP glVertex3xvOES)(const GLfixed *coords);
GLLOADER_API void (GLAPIENTRYP glVertex4xOES)(GLfixed x, GLfixed y, GLfixed z);
GLLOADER_API void (GLAPIENTRYP glVertex4xvOES)(const GLfixed *coords);
#endif // GL_OES_fixed_point_IMPLEMENTATION
#ifndef GL_OES_query_matrix_IMPLEMENTATION
#define GL_OES_query_matrix_IMPLEMENTATION 1
GLbitfield(GLAPIENTRYP glQueryMatrixxOES)(GLfixed *mantissa, GLint *exponent);
#endif // GL_OES_query_matrix_IMPLEMENTATION
#ifndef GL_OES_single_precision_IMPLEMENTATION
#define GL_OES_single_precision_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glClearDepthfOES)(GLclampf depth);
GLLOADER_API void (GLAPIENTRYP glClipPlanefOES)(GLenum plane, const GLfloat *equation);
GLLOADER_API void (GLAPIENTRYP glDepthRangefOES)(GLclampf n, GLclampf f);
GLLOADER_API void (GLAPIENTRYP glFrustumfOES)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLLOADER_API void (GLAPIENTRYP glGetClipPlanefOES)(GLenum plane, GLfloat *equation);
GLLOADER_API void (GLAPIENTRYP glOrthofOES)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
#endif // GL_OES_single_precision_IMPLEMENTATION
#ifndef GL_3DFX_tbuffer_IMPLEMENTATION
#define GL_3DFX_tbuffer_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTbufferMask3DFX)(GLuint mask);
#endif // GL_3DFX_tbuffer_IMPLEMENTATION
#ifndef GL_AMD_debug_output_IMPLEMENTATION
#define GL_AMD_debug_output_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDebugMessageEnableAMD)(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
GLLOADER_API void (GLAPIENTRYP glDebugMessageInsertAMD)(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
GLLOADER_API void (GLAPIENTRYP glDebugMessageCallbackAMD)(GLDEBUGPROCAMD callback, void *userParam);
GLLOADER_API GLuint(GLAPIENTRYP glGetDebugMessageLogAMD)(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif // GL_AMD_debug_output_IMPLEMENTATION
#ifndef GL_AMD_draw_buffers_blend_IMPLEMENTATION
#define GL_AMD_draw_buffers_blend_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendFuncIndexedAMD)(GLuint buf, GLenum src, GLenum dst);
GLLOADER_API void (GLAPIENTRYP glBlendFuncSeparateIndexedAMD)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLLOADER_API void (GLAPIENTRYP glBlendEquationIndexedAMD)(GLuint buf, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glBlendEquationSeparateIndexedAMD)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
#endif // GL_AMD_draw_buffers_blend_IMPLEMENTATION
#ifndef GL_AMD_gpu_shader_int64_IMPLEMENTATION
#define GL_AMD_gpu_shader_int64_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glUniform1i64NV)(GLint location, GLint64EXT x);
GLLOADER_API void (GLAPIENTRYP glUniform2i64NV)(GLint location, GLint64EXT x, GLint64EXT y);
GLLOADER_API void (GLAPIENTRYP glUniform3i64NV)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLLOADER_API void (GLAPIENTRYP glUniform4i64NV)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLLOADER_API void (GLAPIENTRYP glUniform1i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glUniform2i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glUniform3i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glUniform4i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glUniform1ui64NV)(GLint location, GLuint64EXT x);
GLLOADER_API void (GLAPIENTRYP glUniform2ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y);
GLLOADER_API void (GLAPIENTRYP glUniform3ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLLOADER_API void (GLAPIENTRYP glUniform4ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLLOADER_API void (GLAPIENTRYP glUniform1ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glUniform2ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glUniform3ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glUniform4ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glGetUniformi64vNV)(GLuint program, GLint location, GLint64EXT *params);
GLLOADER_API void (GLAPIENTRYP glGetUniformui64vNV)(GLuint program, GLint location, GLuint64EXT *params);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1i64NV)(GLuint program, GLint location, GLint64EXT x);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1ui64NV)(GLuint program, GLint location, GLuint64EXT x);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif // GL_AMD_gpu_shader_int64_IMPLEMENTATION
#ifndef GL_AMD_interleaved_elements_IMPLEMENTATION
#define GL_AMD_interleaved_elements_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexAttribParameteriAMD)(GLuint index, GLenum pname, GLint param);
#endif // GL_AMD_interleaved_elements_IMPLEMENTATION
#ifndef GL_AMD_multi_draw_indirect_IMPLEMENTATION
#define GL_AMD_multi_draw_indirect_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMultiDrawArraysIndirectAMD)(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glMultiDrawElementsIndirectAMD)(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);
#endif // GL_AMD_multi_draw_indirect_IMPLEMENTATION
#ifndef GL_AMD_name_gen_delete_IMPLEMENTATION
#define GL_AMD_name_gen_delete_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGenNamesAMD)(GLenum identifier, GLuint num, GLuint *names);
GLLOADER_API void (GLAPIENTRYP glDeleteNamesAMD)(GLenum identifier, GLuint num, const GLuint *names);
GLLOADER_API GLboolean(GLAPIENTRYP glIsNameAMD)(GLenum identifier, GLuint name);
#endif // GL_AMD_name_gen_delete_IMPLEMENTATION
#ifndef GL_AMD_occlusion_query_event_IMPLEMENTATION
#define GL_AMD_occlusion_query_event_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glQueryObjectParameteruiAMD)(GLenum target, GLuint id, GLenum pname, GLuint param);
#endif // GL_AMD_occlusion_query_event_IMPLEMENTATION
#ifndef GL_AMD_performance_monitor_IMPLEMENTATION
#define GL_AMD_performance_monitor_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGetPerfMonitorGroupsAMD)(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
GLLOADER_API void (GLAPIENTRYP glGetPerfMonitorCountersAMD)(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
GLLOADER_API void (GLAPIENTRYP glGetPerfMonitorGroupStringAMD)(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
GLLOADER_API void (GLAPIENTRYP glGetPerfMonitorCounterStringAMD)(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
GLLOADER_API void (GLAPIENTRYP glGetPerfMonitorCounterInfoAMD)(GLuint group, GLuint counter, GLenum pname, void *data);
GLLOADER_API void (GLAPIENTRYP glGenPerfMonitorsAMD)(GLsizei n, GLuint *monitors);
GLLOADER_API void (GLAPIENTRYP glDeletePerfMonitorsAMD)(GLsizei n, GLuint *monitors);
GLLOADER_API void (GLAPIENTRYP glSelectPerfMonitorCountersAMD)(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
GLLOADER_API void (GLAPIENTRYP glBeginPerfMonitorAMD)(GLuint monitor);
GLLOADER_API void (GLAPIENTRYP glEndPerfMonitorAMD)(GLuint monitor);
GLLOADER_API void (GLAPIENTRYP glGetPerfMonitorCounterDataAMD)(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif // GL_AMD_performance_monitor_IMPLEMENTATION
#ifndef GL_AMD_sample_positions_IMPLEMENTATION
#define GL_AMD_sample_positions_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glSetMultisamplefvAMD)(GLenum pname, GLuint index, const GLfloat *val);
#endif // GL_AMD_sample_positions_IMPLEMENTATION
#ifndef GL_AMD_sparse_texture_IMPLEMENTATION
#define GL_AMD_sparse_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexStorageSparseAMD)(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
GLLOADER_API void (GLAPIENTRYP glTextureStorageSparseAMD)(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
#endif // GL_AMD_sparse_texture_IMPLEMENTATION
#ifndef GL_AMD_stencil_operation_extended_IMPLEMENTATION
#define GL_AMD_stencil_operation_extended_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glStencilOpValueAMD)(GLenum face, GLuint value);
#endif // GL_AMD_stencil_operation_extended_IMPLEMENTATION
#ifndef GL_AMD_vertex_shader_tessellator_IMPLEMENTATION
#define GL_AMD_vertex_shader_tessellator_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTessellationFactorAMD)(GLfloat factor);
GLLOADER_API void (GLAPIENTRYP glTessellationModeAMD)(GLenum mode);
#endif // GL_AMD_vertex_shader_tessellator_IMPLEMENTATION
#ifndef GL_APPLE_element_array_IMPLEMENTATION
#define GL_APPLE_element_array_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glElementPointerAPPLE)(GLenum type, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glDrawElementArrayAPPLE)(GLenum mode, GLint first, GLsizei count);
GLLOADER_API void (GLAPIENTRYP glDrawRangeElementArrayAPPLE)(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
GLLOADER_API void (GLAPIENTRYP glMultiDrawElementArrayAPPLE)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
GLLOADER_API void (GLAPIENTRYP glMultiDrawRangeElementArrayAPPLE)(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif // GL_APPLE_element_array_IMPLEMENTATION
#ifndef GL_APPLE_fence_IMPLEMENTATION
#define GL_APPLE_fence_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGenFencesAPPLE)(GLsizei n, GLuint *fences);
GLLOADER_API void (GLAPIENTRYP glDeleteFencesAPPLE)(GLsizei n, const GLuint *fences);
GLLOADER_API void (GLAPIENTRYP glSetFenceAPPLE)(GLuint fence);
GLLOADER_API GLboolean(GLAPIENTRYP glIsFenceAPPLE)(GLuint fence);
GLLOADER_API GLboolean(GLAPIENTRYP glTestFenceAPPLE)(GLuint fence);
GLLOADER_API void (GLAPIENTRYP glFinishFenceAPPLE)(GLuint fence);
GLLOADER_API GLboolean(GLAPIENTRYP glTestObjectAPPLE)(GLenum object, GLuint name);
GLLOADER_API void (GLAPIENTRYP glFinishObjectAPPLE)(GLenum object, GLint name);
#endif // GL_APPLE_fence_IMPLEMENTATION
#ifndef GL_APPLE_flush_buffer_range_IMPLEMENTATION
#define GL_APPLE_flush_buffer_range_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBufferParameteriAPPLE)(GLenum target, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glFlushMappedBufferRangeAPPLE)(GLenum target, GLintptr offset, GLsizeiptr size);
#endif // GL_APPLE_flush_buffer_range_IMPLEMENTATION
#ifndef GL_APPLE_object_purgeable_IMPLEMENTATION
#define GL_APPLE_object_purgeable_IMPLEMENTATION 1
GLLOADER_API GLenum(GLAPIENTRYP glObjectPurgeableAPPLE)(GLenum objectType, GLuint name, GLenum option);
GLLOADER_API GLenum(GLAPIENTRYP glObjectUnpurgeableAPPLE)(GLenum objectType, GLuint name, GLenum option);
GLLOADER_API void (GLAPIENTRYP glGetObjectParameterivAPPLE)(GLenum objectType, GLuint name, GLenum pname, GLint *params);
#endif // GL_APPLE_object_purgeable_IMPLEMENTATION
#ifndef GL_APPLE_texture_range_IMPLEMENTATION
#define GL_APPLE_texture_range_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTextureRangeAPPLE)(GLenum target, GLsizei length, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glGetTexParameterPointervAPPLE)(GLenum target, GLenum pname, void **params);
#endif // GL_APPLE_texture_range_IMPLEMENTATION
#ifndef GL_APPLE_vertex_array_object_IMPLEMENTATION
#define GL_APPLE_vertex_array_object_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBindVertexArrayAPPLE)(GLuint array);
GLLOADER_API void (GLAPIENTRYP glDeleteVertexArraysAPPLE)(GLsizei n, const GLuint *arrays);
GLLOADER_API void (GLAPIENTRYP glGenVertexArraysAPPLE)(GLsizei n, GLuint *arrays);
GLLOADER_API GLboolean(GLAPIENTRYP glIsVertexArrayAPPLE)(GLuint array);
#endif // GL_APPLE_vertex_array_object_IMPLEMENTATION
#ifndef GL_APPLE_vertex_array_range_IMPLEMENTATION
#define GL_APPLE_vertex_array_range_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexArrayRangeAPPLE)(GLsizei length, void *pointer);
GLLOADER_API void (GLAPIENTRYP glFlushVertexArrayRangeAPPLE)(GLsizei length, void *pointer);
GLLOADER_API void (GLAPIENTRYP glVertexArrayParameteriAPPLE)(GLenum pname, GLint param);
#endif // GL_APPLE_vertex_array_range_IMPLEMENTATION
#ifndef GL_APPLE_vertex_program_evaluators_IMPLEMENTATION
#define GL_APPLE_vertex_program_evaluators_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glEnableVertexAttribAPPLE)(GLuint index, GLenum pname);
GLLOADER_API void (GLAPIENTRYP glDisableVertexAttribAPPLE)(GLuint index, GLenum pname);
GLLOADER_API GLboolean(GLAPIENTRYP glIsVertexAttribEnabledAPPLE)(GLuint index, GLenum pname);
GLLOADER_API void (GLAPIENTRYP glMapVertexAttrib1dAPPLE)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
GLLOADER_API void (GLAPIENTRYP glMapVertexAttrib1fAPPLE)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
GLLOADER_API void (GLAPIENTRYP glMapVertexAttrib2dAPPLE)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
GLLOADER_API void (GLAPIENTRYP glMapVertexAttrib2fAPPLE)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
#endif // GL_APPLE_vertex_program_evaluators_IMPLEMENTATION
#ifndef GL_ATI_draw_buffers_IMPLEMENTATION
#define GL_ATI_draw_buffers_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawBuffersATI)(GLsizei n, const GLenum *bufs);
#endif // GL_ATI_draw_buffers_IMPLEMENTATION
#ifndef GL_ATI_element_array_IMPLEMENTATION
#define GL_ATI_element_array_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glElementPointerATI)(GLenum type, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glDrawElementArrayATI)(GLenum mode, GLsizei count);
GLLOADER_API void (GLAPIENTRYP glDrawRangeElementArrayATI)(GLenum mode, GLuint start, GLuint end, GLsizei count);
#endif // GL_ATI_element_array_IMPLEMENTATION
#ifndef GL_ATI_envmap_bumpmap_IMPLEMENTATION
#define GL_ATI_envmap_bumpmap_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexBumpParameterivATI)(GLenum pname, const GLint *param);
GLLOADER_API void (GLAPIENTRYP glTexBumpParameterfvATI)(GLenum pname, const GLfloat *param);
GLLOADER_API void (GLAPIENTRYP glGetTexBumpParameterivATI)(GLenum pname, GLint *param);
GLLOADER_API void (GLAPIENTRYP glGetTexBumpParameterfvATI)(GLenum pname, GLfloat *param);
#endif // GL_ATI_envmap_bumpmap_IMPLEMENTATION
#ifndef GL_ATI_fragment_shader_IMPLEMENTATION
#define GL_ATI_fragment_shader_IMPLEMENTATION 1
GLLOADER_API GLuint(GLAPIENTRYP glGenFragmentShadersATI)(GLuint range);
GLLOADER_API void (GLAPIENTRYP glBindFragmentShaderATI)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glDeleteFragmentShaderATI)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glBeginFragmentShaderATI)(void);
GLLOADER_API void (GLAPIENTRYP glEndFragmentShaderATI)(void);
GLLOADER_API void (GLAPIENTRYP glPassTexCoordATI)(GLuint dst, GLuint coord, GLenum swizzle);
GLLOADER_API void (GLAPIENTRYP glSampleMapATI)(GLuint dst, GLuint interp, GLenum swizzle);
GLLOADER_API void (GLAPIENTRYP glColorFragmentOp1ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
GLLOADER_API void (GLAPIENTRYP glColorFragmentOp2ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
GLLOADER_API void (GLAPIENTRYP glColorFragmentOp3ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
GLLOADER_API void (GLAPIENTRYP glAlphaFragmentOp1ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
GLLOADER_API void (GLAPIENTRYP glAlphaFragmentOp2ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
GLLOADER_API void (GLAPIENTRYP glAlphaFragmentOp3ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
GLLOADER_API void (GLAPIENTRYP glSetFragmentShaderConstantATI)(GLuint dst, const GLfloat *value);
#endif // GL_ATI_fragment_shader_IMPLEMENTATION
#ifndef GL_ATI_map_object_buffer_IMPLEMENTATION
#define GL_ATI_map_object_buffer_IMPLEMENTATION 1
GLLOADER_API void *(GLAPIENTRYP glMapObjectBufferATI)(GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glUnmapObjectBufferATI)(GLuint buffer);
#endif // GL_ATI_map_object_buffer_IMPLEMENTATION
#ifndef GL_ATI_pn_triangles_IMPLEMENTATION
#define GL_ATI_pn_triangles_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPNTrianglesiATI)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glPNTrianglesfATI)(GLenum pname, GLfloat param);
#endif // GL_ATI_pn_triangles_IMPLEMENTATION
#ifndef GL_ATI_separate_stencil_IMPLEMENTATION
#define GL_ATI_separate_stencil_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glStencilOpSeparateATI)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLLOADER_API void (GLAPIENTRYP glStencilFuncSeparateATI)(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
#endif // GL_ATI_separate_stencil_IMPLEMENTATION
#ifndef GL_ATI_vertex_array_object_IMPLEMENTATION
#define GL_ATI_vertex_array_object_IMPLEMENTATION 1
GLLOADER_API GLuint(GLAPIENTRYP glNewObjectBufferATI)(GLsizei size, const void *pointer, GLenum usage);
GLLOADER_API GLboolean(GLAPIENTRYP glIsObjectBufferATI)(GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glUpdateObjectBufferATI)(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);
GLLOADER_API void (GLAPIENTRYP glGetObjectBufferfvATI)(GLuint buffer, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetObjectBufferivATI)(GLuint buffer, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glFreeObjectBufferATI)(GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glArrayObjectATI)(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLLOADER_API void (GLAPIENTRYP glGetArrayObjectfvATI)(GLenum array, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetArrayObjectivATI)(GLenum array, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glVariantArrayObjectATI)(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLLOADER_API void (GLAPIENTRYP glGetVariantArrayObjectfvATI)(GLuint id, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetVariantArrayObjectivATI)(GLuint id, GLenum pname, GLint *params);
#endif // GL_ATI_vertex_array_object_IMPLEMENTATION
#ifndef GL_ATI_vertex_attrib_array_object_IMPLEMENTATION
#define GL_ATI_vertex_attrib_array_object_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexAttribArrayObjectATI)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribArrayObjectfvATI)(GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribArrayObjectivATI)(GLuint index, GLenum pname, GLint *params);
#endif // GL_ATI_vertex_attrib_array_object_IMPLEMENTATION
#ifndef GL_ATI_vertex_streams_IMPLEMENTATION
#define GL_ATI_vertex_streams_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexStream1sATI)(GLenum stream, GLshort x);
GLLOADER_API void (GLAPIENTRYP glVertexStream1svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream1iATI)(GLenum stream, GLint x);
GLLOADER_API void (GLAPIENTRYP glVertexStream1ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream1fATI)(GLenum stream, GLfloat x);
GLLOADER_API void (GLAPIENTRYP glVertexStream1fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream1dATI)(GLenum stream, GLdouble x);
GLLOADER_API void (GLAPIENTRYP glVertexStream1dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream2sATI)(GLenum stream, GLshort x, GLshort y);
GLLOADER_API void (GLAPIENTRYP glVertexStream2svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream2iATI)(GLenum stream, GLint x, GLint y);
GLLOADER_API void (GLAPIENTRYP glVertexStream2ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream2fATI)(GLenum stream, GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glVertexStream2fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream2dATI)(GLenum stream, GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glVertexStream2dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream3sATI)(GLenum stream, GLshort x, GLshort y, GLshort z);
GLLOADER_API void (GLAPIENTRYP glVertexStream3svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream3iATI)(GLenum stream, GLint x, GLint y, GLint z);
GLLOADER_API void (GLAPIENTRYP glVertexStream3ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream3fATI)(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glVertexStream3fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream3dATI)(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glVertexStream3dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream4sATI)(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API void (GLAPIENTRYP glVertexStream4svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream4iATI)(GLenum stream, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API void (GLAPIENTRYP glVertexStream4ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream4fATI)(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glVertexStream4fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API void (GLAPIENTRYP glVertexStream4dATI)(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glVertexStream4dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API void (GLAPIENTRYP glNormalStream3bATI)(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
GLLOADER_API void (GLAPIENTRYP glNormalStream3bvATI)(GLenum stream, const GLbyte *coords);
GLLOADER_API void (GLAPIENTRYP glNormalStream3sATI)(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
GLLOADER_API void (GLAPIENTRYP glNormalStream3svATI)(GLenum stream, const GLshort *coords);
GLLOADER_API void (GLAPIENTRYP glNormalStream3iATI)(GLenum stream, GLint nx, GLint ny, GLint nz);
GLLOADER_API void (GLAPIENTRYP glNormalStream3ivATI)(GLenum stream, const GLint *coords);
GLLOADER_API void (GLAPIENTRYP glNormalStream3fATI)(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
GLLOADER_API void (GLAPIENTRYP glNormalStream3fvATI)(GLenum stream, const GLfloat *coords);
GLLOADER_API void (GLAPIENTRYP glNormalStream3dATI)(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
GLLOADER_API void (GLAPIENTRYP glNormalStream3dvATI)(GLenum stream, const GLdouble *coords);
GLLOADER_API void (GLAPIENTRYP glClientActiveVertexStreamATI)(GLenum stream);
GLLOADER_API void (GLAPIENTRYP glVertexBlendEnviATI)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glVertexBlendEnvfATI)(GLenum pname, GLfloat param);
#endif // GL_ATI_vertex_streams_IMPLEMENTATION
#ifndef GL_EXT_bindable_uniform_IMPLEMENTATION
#define GL_EXT_bindable_uniform_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glUniformBufferEXT)(GLuint program, GLint location, GLuint buffer);
GLLOADER_API GLint(GLAPIENTRYP glGetUniformBufferSizeEXT)(GLuint program, GLint location);
GLLOADER_API GLintptr(GLAPIENTRYP glGetUniformOffsetEXT)(GLuint program, GLint location);
#endif // GL_EXT_bindable_uniform_IMPLEMENTATION
#ifndef GL_EXT_blend_color_IMPLEMENTATION
#define GL_EXT_blend_color_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendColorEXT)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
#endif // GL_EXT_blend_color_IMPLEMENTATION
#ifndef GL_EXT_blend_equation_separate_IMPLEMENTATION
#define GL_EXT_blend_equation_separate_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendEquationSeparateEXT)(GLenum modeRGB, GLenum modeAlpha);
#endif // GL_EXT_blend_equation_separate_IMPLEMENTATION
#ifndef GL_EXT_blend_func_separate_IMPLEMENTATION
#define GL_EXT_blend_func_separate_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendFuncSeparateEXT)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
#endif // GL_EXT_blend_func_separate_IMPLEMENTATION
#ifndef GL_EXT_blend_minmax_IMPLEMENTATION
#define GL_EXT_blend_minmax_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendEquationEXT)(GLenum mode);
#endif // GL_EXT_blend_minmax_IMPLEMENTATION
#ifndef GL_EXT_color_subtable_IMPLEMENTATION
#define GL_EXT_color_subtable_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glColorSubTableEXT)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
GLLOADER_API void (GLAPIENTRYP glCopyColorSubTableEXT)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
#endif // GL_EXT_color_subtable_IMPLEMENTATION
#ifndef GL_EXT_compiled_vertex_array_IMPLEMENTATION
#define GL_EXT_compiled_vertex_array_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glLockArraysEXT)(GLint first, GLsizei count);
GLLOADER_API void (GLAPIENTRYP glUnlockArraysEXT)(void);
#endif // GL_EXT_compiled_vertex_array_IMPLEMENTATION
#ifndef GL_EXT_convolution_IMPLEMENTATION
#define GL_EXT_convolution_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glConvolutionFilter1DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
GLLOADER_API void (GLAPIENTRYP glConvolutionFilter2DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameterfEXT)(GLenum target, GLenum pname, GLfloat params);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameterfvEXT)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameteriEXT)(GLenum target, GLenum pname, GLint params);
GLLOADER_API void (GLAPIENTRYP glConvolutionParameterivEXT)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glCopyConvolutionFilter1DEXT)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glCopyConvolutionFilter2DEXT)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glGetConvolutionFilterEXT)(GLenum target, GLenum format, GLenum type, void *image);
GLLOADER_API void (GLAPIENTRYP glGetConvolutionParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetConvolutionParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetSeparableFilterEXT)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
GLLOADER_API void (GLAPIENTRYP glSeparableFilter2DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
#endif // GL_EXT_convolution_IMPLEMENTATION
#ifndef GL_EXT_coordinate_frame_IMPLEMENTATION
#define GL_EXT_coordinate_frame_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTangent3bEXT)(GLbyte tx, GLbyte ty, GLbyte tz);
GLLOADER_API void (GLAPIENTRYP glTangent3bvEXT)(const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glTangent3dEXT)(GLdouble tx, GLdouble ty, GLdouble tz);
GLLOADER_API void (GLAPIENTRYP glTangent3dvEXT)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glTangent3fEXT)(GLfloat tx, GLfloat ty, GLfloat tz);
GLLOADER_API void (GLAPIENTRYP glTangent3fvEXT)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTangent3iEXT)(GLint tx, GLint ty, GLint tz);
GLLOADER_API void (GLAPIENTRYP glTangent3ivEXT)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glTangent3sEXT)(GLshort tx, GLshort ty, GLshort tz);
GLLOADER_API void (GLAPIENTRYP glTangent3svEXT)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glBinormal3bEXT)(GLbyte bx, GLbyte by, GLbyte bz);
GLLOADER_API void (GLAPIENTRYP glBinormal3bvEXT)(const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glBinormal3dEXT)(GLdouble bx, GLdouble by, GLdouble bz);
GLLOADER_API void (GLAPIENTRYP glBinormal3dvEXT)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glBinormal3fEXT)(GLfloat bx, GLfloat by, GLfloat bz);
GLLOADER_API void (GLAPIENTRYP glBinormal3fvEXT)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glBinormal3iEXT)(GLint bx, GLint by, GLint bz);
GLLOADER_API void (GLAPIENTRYP glBinormal3ivEXT)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glBinormal3sEXT)(GLshort bx, GLshort by, GLshort bz);
GLLOADER_API void (GLAPIENTRYP glBinormal3svEXT)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glTangentPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glBinormalPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
#endif // GL_EXT_coordinate_frame_IMPLEMENTATION
#ifndef GL_EXT_copy_texture_IMPLEMENTATION
#define GL_EXT_copy_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glCopyTexImage1DEXT)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLLOADER_API void (GLAPIENTRYP glCopyTexImage2DEXT)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLLOADER_API void (GLAPIENTRYP glCopyTexSubImage1DEXT)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glCopyTexSubImage2DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glCopyTexSubImage3DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif // GL_EXT_copy_texture_IMPLEMENTATION
#ifndef GL_EXT_cull_vertex_IMPLEMENTATION
#define GL_EXT_cull_vertex_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glCullParameterdvEXT)(GLenum pname, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glCullParameterfvEXT)(GLenum pname, GLfloat *params);
#endif // GL_EXT_cull_vertex_IMPLEMENTATION
#ifndef GL_EXT_debug_label_IMPLEMENTATION
#define GL_EXT_debug_label_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glLabelObjectEXT)(GLenum type, GLuint object, GLsizei length, const GLchar *label);
GLLOADER_API void (GLAPIENTRYP glGetObjectLabelEXT)(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
#endif // GL_EXT_debug_label_IMPLEMENTATION
#ifndef GL_EXT_debug_marker_IMPLEMENTATION
#define GL_EXT_debug_marker_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glInsertEventMarkerEXT)(GLsizei length, const GLchar *marker);
GLLOADER_API void (GLAPIENTRYP glPushGroupMarkerEXT)(GLsizei length, const GLchar *marker);
GLLOADER_API void (GLAPIENTRYP glPopGroupMarkerEXT)(void);
#endif // GL_EXT_debug_marker_IMPLEMENTATION
#ifndef GL_EXT_depth_bounds_test_IMPLEMENTATION
#define GL_EXT_depth_bounds_test_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDepthBoundsEXT)(GLclampd zmin, GLclampd zmax);
#endif // GL_EXT_depth_bounds_test_IMPLEMENTATION
#ifndef GL_EXT_direct_state_access_IMPLEMENTATION
#define GL_EXT_direct_state_access_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMatrixLoadfEXT)(GLenum mode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMatrixLoaddEXT)(GLenum mode, const GLdouble *m);
GLLOADER_API void (GLAPIENTRYP glMatrixMultfEXT)(GLenum mode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMatrixMultdEXT)(GLenum mode, const GLdouble *m);
GLLOADER_API void (GLAPIENTRYP glMatrixLoadIdentityEXT)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glMatrixRotatefEXT)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glMatrixRotatedEXT)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glMatrixScalefEXT)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glMatrixScaledEXT)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glMatrixTranslatefEXT)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glMatrixTranslatedEXT)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glMatrixFrustumEXT)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLLOADER_API void (GLAPIENTRYP glMatrixOrthoEXT)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLLOADER_API void (GLAPIENTRYP glMatrixPopEXT)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glMatrixPushEXT)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glClientAttribDefaultEXT)(GLbitfield mask);
GLLOADER_API void (GLAPIENTRYP glPushClientAttribDefaultEXT)(GLbitfield mask);
GLLOADER_API void (GLAPIENTRYP glTextureParameterfEXT)(GLuint texture, GLenum target, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glTextureParameterfvEXT)(GLuint texture, GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glTextureParameteriEXT)(GLuint texture, GLenum target, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glTextureParameterivEXT)(GLuint texture, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glCopyTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLLOADER_API void (GLAPIENTRYP glCopyTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLLOADER_API void (GLAPIENTRYP glCopyTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glCopyTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glGetTextureImageEXT)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
GLLOADER_API void (GLAPIENTRYP glGetTextureParameterfvEXT)(GLuint texture, GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureParameterivEXT)(GLuint texture, GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureLevelParameterfvEXT)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureLevelParameterivEXT)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glTextureImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glCopyTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glBindMultiTextureEXT)(GLenum texunit, GLenum target, GLuint texture);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoordPointerEXT)(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glMultiTexEnvfEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glMultiTexEnvfvEXT)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexEnviEXT)(GLenum texunit, GLenum target, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glMultiTexEnvivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexGendEXT)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
GLLOADER_API void (GLAPIENTRYP glMultiTexGendvEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexGenfEXT)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glMultiTexGenfvEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexGeniEXT)(GLenum texunit, GLenum coord, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glMultiTexGenivEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexEnvfvEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexEnvivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexGendvEXT)(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexGenfvEXT)(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexGenivEXT)(GLenum texunit, GLenum coord, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexParameteriEXT)(GLenum texunit, GLenum target, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glMultiTexParameterivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexParameterfEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glMultiTexParameterfvEXT)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glCopyMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLLOADER_API void (GLAPIENTRYP glCopyMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLLOADER_API void (GLAPIENTRYP glCopyMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glCopyMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexImageEXT)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexParameterfvEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexParameterivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexLevelParameterfvEXT)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexLevelParameterivEXT)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glCopyMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glEnableClientStateIndexedEXT)(GLenum array, GLuint index);
GLLOADER_API void (GLAPIENTRYP glDisableClientStateIndexedEXT)(GLenum array, GLuint index);
GLLOADER_API void (GLAPIENTRYP glGetFloatIndexedvEXT)(GLenum target, GLuint index, GLfloat *data);
GLLOADER_API void (GLAPIENTRYP glGetDoubleIndexedvEXT)(GLenum target, GLuint index, GLdouble *data);
GLLOADER_API void (GLAPIENTRYP glGetPointerIndexedvEXT)(GLenum target, GLuint index, void **data);
GLLOADER_API void (GLAPIENTRYP glEnableIndexedEXT)(GLenum target, GLuint index);
GLLOADER_API void (GLAPIENTRYP glDisableIndexedEXT)(GLenum target, GLuint index);
GLLOADER_API GLboolean(GLAPIENTRYP glIsEnabledIndexedEXT)(GLenum target, GLuint index);
GLLOADER_API void (GLAPIENTRYP glGetIntegerIndexedvEXT)(GLenum target, GLuint index, GLint *data);
GLLOADER_API void (GLAPIENTRYP glGetBooleanIndexedvEXT)(GLenum target, GLuint index, GLboolean *data);
GLLOADER_API void (GLAPIENTRYP glCompressedTextureImage3DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glGetCompressedTextureImageEXT)(GLuint texture, GLenum target, GLint lod, void *img);
GLLOADER_API void (GLAPIENTRYP glCompressedMultiTexImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glCompressedMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
GLLOADER_API void (GLAPIENTRYP glGetCompressedMultiTexImageEXT)(GLenum texunit, GLenum target, GLint lod, void *img);
GLLOADER_API void (GLAPIENTRYP glMatrixLoadTransposefEXT)(GLenum mode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMatrixLoadTransposedEXT)(GLenum mode, const GLdouble *m);
GLLOADER_API void (GLAPIENTRYP glMatrixMultTransposefEXT)(GLenum mode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMatrixMultTransposedEXT)(GLenum mode, const GLdouble *m);
GLLOADER_API void (GLAPIENTRYP glNamedBufferDataEXT)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
GLLOADER_API void (GLAPIENTRYP glNamedBufferSubDataEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
GLLOADER_API void *(GLAPIENTRYP glMapNamedBufferEXT)(GLuint buffer, GLenum access);
GLLOADER_API GLboolean(GLAPIENTRYP glUnmapNamedBufferEXT)(GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glGetNamedBufferParameterivEXT)(GLuint buffer, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedBufferPointervEXT)(GLuint buffer, GLenum pname, void **params);
GLLOADER_API void (GLAPIENTRYP glGetNamedBufferSubDataEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1fEXT)(GLuint program, GLint location, GLfloat v0);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1iEXT)(GLuint program, GLint location, GLint v0);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2iEXT)(GLuint program, GLint location, GLint v0, GLint v1);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3iEXT)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4iEXT)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2x3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3x2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2x4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4x2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3x4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4x3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glTextureBufferEXT)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glMultiTexBufferEXT)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glTextureParameterIivEXT)(GLuint texture, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glTextureParameterIuivEXT)(GLuint texture, GLenum target, GLenum pname, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureParameterIivEXT)(GLuint texture, GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetTextureParameterIuivEXT)(GLuint texture, GLenum target, GLenum pname, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexParameterIivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glMultiTexParameterIuivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexParameterIivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetMultiTexParameterIuivEXT)(GLenum texunit, GLenum target, GLenum pname, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1uiEXT)(GLuint program, GLint location, GLuint v0);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParameters4fvEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParameterI4iEXT)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParameterI4ivEXT)(GLuint program, GLenum target, GLuint index, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParametersI4ivEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParameterI4uiEXT)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParameterI4uivEXT)(GLuint program, GLenum target, GLuint index, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParametersI4uivEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedProgramLocalParameterIivEXT)(GLuint program, GLenum target, GLuint index, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedProgramLocalParameterIuivEXT)(GLuint program, GLenum target, GLuint index, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glEnableClientStateiEXT)(GLenum array, GLuint index);
GLLOADER_API void (GLAPIENTRYP glDisableClientStateiEXT)(GLenum array, GLuint index);
GLLOADER_API void (GLAPIENTRYP glGetFloati_vEXT)(GLenum pname, GLuint index, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetDoublei_vEXT)(GLenum pname, GLuint index, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetPointeri_vEXT)(GLenum pname, GLuint index, void **params);
GLLOADER_API void (GLAPIENTRYP glNamedProgramStringEXT)(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParameter4dEXT)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParameter4dvEXT)(GLuint program, GLenum target, GLuint index, const GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParameter4fEXT)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glNamedProgramLocalParameter4fvEXT)(GLuint program, GLenum target, GLuint index, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedProgramLocalParameterdvEXT)(GLuint program, GLenum target, GLuint index, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedProgramLocalParameterfvEXT)(GLuint program, GLenum target, GLuint index, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedProgramivEXT)(GLuint program, GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedProgramStringEXT)(GLuint program, GLenum target, GLenum pname, void *string);
GLLOADER_API void (GLAPIENTRYP glNamedRenderbufferStorageEXT)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glGetNamedRenderbufferParameterivEXT)(GLuint renderbuffer, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glNamedRenderbufferStorageMultisampleEXT)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glNamedRenderbufferStorageMultisampleCoverageEXT)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API GLenum(GLAPIENTRYP glCheckNamedFramebufferStatusEXT)(GLuint framebuffer, GLenum target);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferTexture1DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferTexture2DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferTexture3DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferRenderbufferEXT)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glGetNamedFramebufferAttachmentParameterivEXT)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGenerateTextureMipmapEXT)(GLuint texture, GLenum target);
GLLOADER_API void (GLAPIENTRYP glGenerateMultiTexMipmapEXT)(GLenum texunit, GLenum target);
GLLOADER_API void (GLAPIENTRYP glFramebufferDrawBufferEXT)(GLuint framebuffer, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glFramebufferDrawBuffersEXT)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
GLLOADER_API void (GLAPIENTRYP glFramebufferReadBufferEXT)(GLuint framebuffer, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glGetFramebufferParameterivEXT)(GLuint framebuffer, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glNamedCopyBufferSubDataEXT)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferTextureEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferTextureLayerEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferTextureFaceEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLLOADER_API void (GLAPIENTRYP glTextureRenderbufferEXT)(GLuint texture, GLenum target, GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glMultiTexRenderbufferEXT)(GLenum texunit, GLenum target, GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayColorOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayEdgeFlagOffsetEXT)(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayIndexOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayNormalOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayTexCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayMultiTexCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayFogCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArraySecondaryColorOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexAttribOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexAttribIOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glEnableVertexArrayEXT)(GLuint vaobj, GLenum array);
GLLOADER_API void (GLAPIENTRYP glDisableVertexArrayEXT)(GLuint vaobj, GLenum array);
GLLOADER_API void (GLAPIENTRYP glEnableVertexArrayAttribEXT)(GLuint vaobj, GLuint index);
GLLOADER_API void (GLAPIENTRYP glDisableVertexArrayAttribEXT)(GLuint vaobj, GLuint index);
GLLOADER_API void (GLAPIENTRYP glGetVertexArrayIntegervEXT)(GLuint vaobj, GLenum pname, GLint *param);
GLLOADER_API void (GLAPIENTRYP glGetVertexArrayPointervEXT)(GLuint vaobj, GLenum pname, void **param);
GLLOADER_API void (GLAPIENTRYP glGetVertexArrayIntegeri_vEXT)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
GLLOADER_API void (GLAPIENTRYP glGetVertexArrayPointeri_vEXT)(GLuint vaobj, GLuint index, GLenum pname, void **param);
GLLOADER_API void *(GLAPIENTRYP glMapNamedBufferRangeEXT)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLLOADER_API void (GLAPIENTRYP glFlushMappedNamedBufferRangeEXT)(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLLOADER_API void (GLAPIENTRYP glNamedBufferStorageEXT)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
GLLOADER_API void (GLAPIENTRYP glClearNamedBufferDataEXT)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
GLLOADER_API void (GLAPIENTRYP glClearNamedBufferSubDataEXT)(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferParameteriEXT)(GLuint framebuffer, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glGetNamedFramebufferParameterivEXT)(GLuint framebuffer, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1dEXT)(GLuint program, GLint location, GLdouble x);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glProgramUniform1dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform2dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform3dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniform4dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2x3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix2x4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3x2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix3x4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4x2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformMatrix4x3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLLOADER_API void (GLAPIENTRYP glTextureBufferRangeEXT)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glTextureStorage1DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glTextureStorage2DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glTextureStorage3DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLLOADER_API void (GLAPIENTRYP glTextureStorage2DMultisampleEXT)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLLOADER_API void (GLAPIENTRYP glTextureStorage3DMultisampleEXT)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLLOADER_API void (GLAPIENTRYP glVertexArrayBindVertexBufferEXT)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexAttribFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexAttribIFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexAttribLFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexAttribBindingEXT)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexBindingDivisorEXT)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexAttribLOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glTexturePageCommitmentEXT)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLLOADER_API void (GLAPIENTRYP glVertexArrayVertexAttribDivisorEXT)(GLuint vaobj, GLuint index, GLuint divisor);
#endif // GL_EXT_direct_state_access_IMPLEMENTATION
#ifndef GL_EXT_draw_buffers2_IMPLEMENTATION
#define GL_EXT_draw_buffers2_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glColorMaskIndexedEXT)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
#endif // GL_EXT_draw_buffers2_IMPLEMENTATION
#ifndef GL_EXT_draw_instanced_IMPLEMENTATION
#define GL_EXT_draw_instanced_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawArraysInstancedEXT)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
GLLOADER_API void (GLAPIENTRYP glDrawElementsInstancedEXT)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
#endif // GL_EXT_draw_instanced_IMPLEMENTATION
#ifndef GL_EXT_draw_range_elements_IMPLEMENTATION
#define GL_EXT_draw_range_elements_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawRangeElementsEXT)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
#endif // GL_EXT_draw_range_elements_IMPLEMENTATION
#ifndef GL_EXT_fog_coord_IMPLEMENTATION
#define GL_EXT_fog_coord_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFogCoordfEXT)(GLfloat coord);
GLLOADER_API void (GLAPIENTRYP glFogCoordfvEXT)(const GLfloat *coord);
GLLOADER_API void (GLAPIENTRYP glFogCoorddEXT)(GLdouble coord);
GLLOADER_API void (GLAPIENTRYP glFogCoorddvEXT)(const GLdouble *coord);
GLLOADER_API void (GLAPIENTRYP glFogCoordPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
#endif // GL_EXT_fog_coord_IMPLEMENTATION
#ifndef GL_EXT_framebuffer_blit_IMPLEMENTATION
#define GL_EXT_framebuffer_blit_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlitFramebufferEXT)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif // GL_EXT_framebuffer_blit_IMPLEMENTATION
#ifndef GL_EXT_framebuffer_multisample_IMPLEMENTATION
#define GL_EXT_framebuffer_multisample_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glRenderbufferStorageMultisampleEXT)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif // GL_EXT_framebuffer_multisample_IMPLEMENTATION
#ifndef GL_EXT_framebuffer_object_IMPLEMENTATION
#define GL_EXT_framebuffer_object_IMPLEMENTATION 1
GLLOADER_API GLboolean(GLAPIENTRYP glIsRenderbufferEXT)(GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glBindRenderbufferEXT)(GLenum target, GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glDeleteRenderbuffersEXT)(GLsizei n, const GLuint *renderbuffers);
GLLOADER_API void (GLAPIENTRYP glGenRenderbuffersEXT)(GLsizei n, GLuint *renderbuffers);
GLLOADER_API void (GLAPIENTRYP glRenderbufferStorageEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLLOADER_API void (GLAPIENTRYP glGetRenderbufferParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API GLboolean(GLAPIENTRYP glIsFramebufferEXT)(GLuint framebuffer);
GLLOADER_API void (GLAPIENTRYP glBindFramebufferEXT)(GLenum target, GLuint framebuffer);
GLLOADER_API void (GLAPIENTRYP glDeleteFramebuffersEXT)(GLsizei n, const GLuint *framebuffers);
GLLOADER_API void (GLAPIENTRYP glGenFramebuffersEXT)(GLsizei n, GLuint *framebuffers);
GLLOADER_API GLenum(GLAPIENTRYP glCheckFramebufferStatusEXT)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glFramebufferTexture1DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glFramebufferTexture2DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glFramebufferTexture3DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLLOADER_API void (GLAPIENTRYP glFramebufferRenderbufferEXT)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLLOADER_API void (GLAPIENTRYP glGetFramebufferAttachmentParameterivEXT)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGenerateMipmapEXT)(GLenum target);
#endif // GL_EXT_framebuffer_object_IMPLEMENTATION
#ifndef GL_EXT_geometry_shader4_IMPLEMENTATION
#define GL_EXT_geometry_shader4_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProgramParameteriEXT)(GLuint program, GLenum pname, GLint value);
#endif // GL_EXT_geometry_shader4_IMPLEMENTATION
#ifndef GL_EXT_gpu_program_parameters_IMPLEMENTATION
#define GL_EXT_gpu_program_parameters_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProgramEnvParameters4fvEXT)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParameters4fvEXT)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
#endif // GL_EXT_gpu_program_parameters_IMPLEMENTATION
#ifndef GL_EXT_gpu_shader4_IMPLEMENTATION
#define GL_EXT_gpu_shader4_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGetUniformuivEXT)(GLuint program, GLint location, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glBindFragDataLocationEXT)(GLuint program, GLuint color, const GLchar *name);
GLLOADER_API GLint(GLAPIENTRYP glGetFragDataLocationEXT)(GLuint program, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glUniform1uiEXT)(GLint location, GLuint v0);
GLLOADER_API void (GLAPIENTRYP glUniform2uiEXT)(GLint location, GLuint v0, GLuint v1);
GLLOADER_API void (GLAPIENTRYP glUniform3uiEXT)(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLLOADER_API void (GLAPIENTRYP glUniform4uiEXT)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLLOADER_API void (GLAPIENTRYP glUniform1uivEXT)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glUniform2uivEXT)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glUniform3uivEXT)(GLint location, GLsizei count, const GLuint *value);
GLLOADER_API void (GLAPIENTRYP glUniform4uivEXT)(GLint location, GLsizei count, const GLuint *value);
#endif // GL_EXT_gpu_shader4_IMPLEMENTATION
#ifndef GL_EXT_histogram_IMPLEMENTATION
#define GL_EXT_histogram_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGetHistogramEXT)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
GLLOADER_API void (GLAPIENTRYP glGetHistogramParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetHistogramParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetMinmaxEXT)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
GLLOADER_API void (GLAPIENTRYP glGetMinmaxParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetMinmaxParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glHistogramEXT)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLLOADER_API void (GLAPIENTRYP glMinmaxEXT)(GLenum target, GLenum internalformat, GLboolean sink);
GLLOADER_API void (GLAPIENTRYP glResetHistogramEXT)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glResetMinmaxEXT)(GLenum target);
#endif // GL_EXT_histogram_IMPLEMENTATION
#ifndef GL_EXT_index_func_IMPLEMENTATION
#define GL_EXT_index_func_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glIndexFuncEXT)(GLenum func, GLclampf ref);
#endif // GL_EXT_index_func_IMPLEMENTATION
#ifndef GL_EXT_index_material_IMPLEMENTATION
#define GL_EXT_index_material_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glIndexMaterialEXT)(GLenum face, GLenum mode);
#endif // GL_EXT_index_material_IMPLEMENTATION
#ifndef GL_EXT_light_texture_IMPLEMENTATION
#define GL_EXT_light_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glApplyTextureEXT)(GLenum mode);
GLLOADER_API void (GLAPIENTRYP glTextureLightEXT)(GLenum pname);
GLLOADER_API void (GLAPIENTRYP glTextureMaterialEXT)(GLenum face, GLenum mode);
#endif // GL_EXT_light_texture_IMPLEMENTATION
#ifndef GL_EXT_multi_draw_arrays_IMPLEMENTATION
#define GL_EXT_multi_draw_arrays_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMultiDrawArraysEXT)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
GLLOADER_API void (GLAPIENTRYP glMultiDrawElementsEXT)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);
#endif // GL_EXT_multi_draw_arrays_IMPLEMENTATION
#ifndef GL_EXT_multisample_IMPLEMENTATION
#define GL_EXT_multisample_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glSampleMaskEXT)(GLclampf value, GLboolean invert);
GLLOADER_API void (GLAPIENTRYP glSamplePatternEXT)(GLenum pattern);
#endif // GL_EXT_multisample_IMPLEMENTATION
#ifndef GL_EXT_paletted_texture_IMPLEMENTATION
#define GL_EXT_paletted_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glColorTableEXT)(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);
GLLOADER_API void (GLAPIENTRYP glGetColorTableEXT)(GLenum target, GLenum format, GLenum type, void *data);
GLLOADER_API void (GLAPIENTRYP glGetColorTableParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetColorTableParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
#endif // GL_EXT_paletted_texture_IMPLEMENTATION
#ifndef GL_EXT_pixel_transform_IMPLEMENTATION
#define GL_EXT_pixel_transform_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPixelTransformParameteriEXT)(GLenum target, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glPixelTransformParameterfEXT)(GLenum target, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glPixelTransformParameterivEXT)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glPixelTransformParameterfvEXT)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetPixelTransformParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetPixelTransformParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
#endif // GL_EXT_pixel_transform_IMPLEMENTATION
#ifndef GL_EXT_point_parameters_IMPLEMENTATION
#define GL_EXT_point_parameters_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPointParameterfEXT)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glPointParameterfvEXT)(GLenum pname, const GLfloat *params);
#endif // GL_EXT_point_parameters_IMPLEMENTATION
#ifndef GL_EXT_polygon_offset_IMPLEMENTATION
#define GL_EXT_polygon_offset_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPolygonOffsetEXT)(GLfloat factor, GLfloat bias);
#endif // GL_EXT_polygon_offset_IMPLEMENTATION
#ifndef GL_EXT_polygon_offset_clamp_IMPLEMENTATION
#define GL_EXT_polygon_offset_clamp_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPolygonOffsetClampEXT)(GLfloat factor, GLfloat units, GLfloat clamp);
#endif // GL_EXT_polygon_offset_clamp_IMPLEMENTATION
#ifndef GL_EXT_provoking_vertex_IMPLEMENTATION
#define GL_EXT_provoking_vertex_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProvokingVertexEXT)(GLenum mode);
#endif // GL_EXT_provoking_vertex_IMPLEMENTATION
#ifndef GL_EXT_raster_multisample_IMPLEMENTATION
#define GL_EXT_raster_multisample_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glRasterSamplesEXT)(GLuint samples, GLboolean fixedsamplelocations);
#endif // GL_EXT_raster_multisample_IMPLEMENTATION
#ifndef GL_EXT_secondary_color_IMPLEMENTATION
#define GL_EXT_secondary_color_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3bEXT)(GLbyte red, GLbyte green, GLbyte blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3bvEXT)(const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3dEXT)(GLdouble red, GLdouble green, GLdouble blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3dvEXT)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3fEXT)(GLfloat red, GLfloat green, GLfloat blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3fvEXT)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3iEXT)(GLint red, GLint green, GLint blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3ivEXT)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3sEXT)(GLshort red, GLshort green, GLshort blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3svEXT)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3ubEXT)(GLubyte red, GLubyte green, GLubyte blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3ubvEXT)(const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3uiEXT)(GLuint red, GLuint green, GLuint blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3uivEXT)(const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3usEXT)(GLushort red, GLushort green, GLushort blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3usvEXT)(const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glSecondaryColorPointerEXT)(GLint size, GLenum type, GLsizei stride, const void *pointer);
#endif // GL_EXT_secondary_color_IMPLEMENTATION
#ifndef GL_EXT_separate_shader_objects_IMPLEMENTATION
#define GL_EXT_separate_shader_objects_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glUseShaderProgramEXT)(GLenum type, GLuint program);
GLLOADER_API void (GLAPIENTRYP glActiveProgramEXT)(GLuint program);
GLLOADER_API GLuint(GLAPIENTRYP glCreateShaderProgramEXT)(GLenum type, const GLchar *string);
#endif // GL_EXT_separate_shader_objects_IMPLEMENTATION
#ifndef GL_EXT_shader_image_load_store_IMPLEMENTATION
#define GL_EXT_shader_image_load_store_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBindImageTextureEXT)(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
GLLOADER_API void (GLAPIENTRYP glMemoryBarrierEXT)(GLbitfield barriers);
#endif // GL_EXT_shader_image_load_store_IMPLEMENTATION
#ifndef GL_EXT_stencil_clear_tag_IMPLEMENTATION
#define GL_EXT_stencil_clear_tag_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glStencilClearTagEXT)(GLsizei stencilTagBits, GLuint stencilClearTag);
#endif // GL_EXT_stencil_clear_tag_IMPLEMENTATION
#ifndef GL_EXT_stencil_two_side_IMPLEMENTATION
#define GL_EXT_stencil_two_side_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glActiveStencilFaceEXT)(GLenum face);
#endif // GL_EXT_stencil_two_side_IMPLEMENTATION
#ifndef GL_EXT_subtexture_IMPLEMENTATION
#define GL_EXT_subtexture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexSubImage1DEXT)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTexSubImage2DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
#endif // GL_EXT_subtexture_IMPLEMENTATION
#ifndef GL_EXT_texture3D_IMPLEMENTATION
#define GL_EXT_texture3D_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexImage3DEXT)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTexSubImage3DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
#endif // GL_EXT_texture3D_IMPLEMENTATION
#ifndef GL_EXT_texture_array_IMPLEMENTATION
#define GL_EXT_texture_array_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFramebufferTextureLayerEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif // GL_EXT_texture_array_IMPLEMENTATION
#ifndef GL_EXT_texture_buffer_object_IMPLEMENTATION
#define GL_EXT_texture_buffer_object_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexBufferEXT)(GLenum target, GLenum internalformat, GLuint buffer);
#endif // GL_EXT_texture_buffer_object_IMPLEMENTATION
#ifndef GL_EXT_texture_integer_IMPLEMENTATION
#define GL_EXT_texture_integer_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexParameterIivEXT)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glTexParameterIuivEXT)(GLenum target, GLenum pname, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetTexParameterIivEXT)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetTexParameterIuivEXT)(GLenum target, GLenum pname, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glClearColorIiEXT)(GLint red, GLint green, GLint blue, GLint alpha);
GLLOADER_API void (GLAPIENTRYP glClearColorIuiEXT)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif // GL_EXT_texture_integer_IMPLEMENTATION
#ifndef GL_EXT_texture_object_IMPLEMENTATION
#define GL_EXT_texture_object_IMPLEMENTATION 1
GLLOADER_API GLboolean(GLAPIENTRYP glAreTexturesResidentEXT)(GLsizei n, const GLuint *textures, GLboolean *residences);
GLLOADER_API void (GLAPIENTRYP glBindTextureEXT)(GLenum target, GLuint texture);
GLLOADER_API void (GLAPIENTRYP glDeleteTexturesEXT)(GLsizei n, const GLuint *textures);
GLLOADER_API void (GLAPIENTRYP glGenTexturesEXT)(GLsizei n, GLuint *textures);
GLLOADER_API GLboolean(GLAPIENTRYP glIsTextureEXT)(GLuint texture);
GLLOADER_API void (GLAPIENTRYP glPrioritizeTexturesEXT)(GLsizei n, const GLuint *textures, const GLclampf *priorities);
#endif // GL_EXT_texture_object_IMPLEMENTATION
#ifndef GL_EXT_texture_perturb_normal_IMPLEMENTATION
#define GL_EXT_texture_perturb_normal_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTextureNormalEXT)(GLenum mode);
#endif // GL_EXT_texture_perturb_normal_IMPLEMENTATION
#ifndef GL_EXT_timer_query_IMPLEMENTATION
#define GL_EXT_timer_query_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGetQueryObjecti64vEXT)(GLuint id, GLenum pname, GLint64 *params);
GLLOADER_API void (GLAPIENTRYP glGetQueryObjectui64vEXT)(GLuint id, GLenum pname, GLuint64 *params);
#endif // GL_EXT_timer_query_IMPLEMENTATION
#ifndef GL_EXT_transform_feedback_IMPLEMENTATION
#define GL_EXT_transform_feedback_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBeginTransformFeedbackEXT)(GLenum primitiveMode);
GLLOADER_API void (GLAPIENTRYP glEndTransformFeedbackEXT)(void);
GLLOADER_API void (GLAPIENTRYP glBindBufferRangeEXT)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glBindBufferOffsetEXT)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glBindBufferBaseEXT)(GLenum target, GLuint index, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glTransformFeedbackVaryingsEXT)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
GLLOADER_API void (GLAPIENTRYP glGetTransformFeedbackVaryingEXT)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif // GL_EXT_transform_feedback_IMPLEMENTATION
#ifndef GL_EXT_vertex_array_IMPLEMENTATION
#define GL_EXT_vertex_array_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glArrayElementEXT)(GLint i);
GLLOADER_API void (GLAPIENTRYP glColorPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glDrawArraysEXT)(GLenum mode, GLint first, GLsizei count);
GLLOADER_API void (GLAPIENTRYP glEdgeFlagPointerEXT)(GLsizei stride, GLsizei count, const GLboolean *pointer);
GLLOADER_API void (GLAPIENTRYP glGetPointervEXT)(GLenum pname, void **params);
GLLOADER_API void (GLAPIENTRYP glIndexPointerEXT)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glNormalPointerEXT)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glTexCoordPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glVertexPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
#endif // GL_EXT_vertex_array_IMPLEMENTATION
#ifndef GL_EXT_vertex_attrib_64bit_IMPLEMENTATION
#define GL_EXT_vertex_attrib_64bit_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1dEXT)(GLuint index, GLdouble x);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL2dEXT)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL3dEXT)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL4dEXT)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1dvEXT)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL2dvEXT)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL3dvEXT)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL4dvEXT)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribLPointerEXT)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribLdvEXT)(GLuint index, GLenum pname, GLdouble *params);
#endif // GL_EXT_vertex_attrib_64bit_IMPLEMENTATION
#ifndef GL_EXT_vertex_shader_IMPLEMENTATION
#define GL_EXT_vertex_shader_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBeginVertexShaderEXT)(void);
GLLOADER_API void (GLAPIENTRYP glEndVertexShaderEXT)(void);
GLLOADER_API void (GLAPIENTRYP glBindVertexShaderEXT)(GLuint id);
GLLOADER_API GLuint(GLAPIENTRYP glGenVertexShadersEXT)(GLuint range);
GLLOADER_API void (GLAPIENTRYP glDeleteVertexShaderEXT)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glShaderOp1EXT)(GLenum op, GLuint res, GLuint arg1);
GLLOADER_API void (GLAPIENTRYP glShaderOp2EXT)(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
GLLOADER_API void (GLAPIENTRYP glShaderOp3EXT)(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
GLLOADER_API void (GLAPIENTRYP glSwizzleEXT)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
GLLOADER_API void (GLAPIENTRYP glWriteMaskEXT)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
GLLOADER_API void (GLAPIENTRYP glInsertComponentEXT)(GLuint res, GLuint src, GLuint num);
GLLOADER_API void (GLAPIENTRYP glExtractComponentEXT)(GLuint res, GLuint src, GLuint num);
GLLOADER_API GLuint(GLAPIENTRYP glGenSymbolsEXT)(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
GLLOADER_API void (GLAPIENTRYP glSetInvariantEXT)(GLuint id, GLenum type, const void *addr);
GLLOADER_API void (GLAPIENTRYP glSetLocalConstantEXT)(GLuint id, GLenum type, const void *addr);
GLLOADER_API void (GLAPIENTRYP glVariantbvEXT)(GLuint id, const GLbyte *addr);
GLLOADER_API void (GLAPIENTRYP glVariantsvEXT)(GLuint id, const GLshort *addr);
GLLOADER_API void (GLAPIENTRYP glVariantivEXT)(GLuint id, const GLint *addr);
GLLOADER_API void (GLAPIENTRYP glVariantfvEXT)(GLuint id, const GLfloat *addr);
GLLOADER_API void (GLAPIENTRYP glVariantdvEXT)(GLuint id, const GLdouble *addr);
GLLOADER_API void (GLAPIENTRYP glVariantubvEXT)(GLuint id, const GLubyte *addr);
GLLOADER_API void (GLAPIENTRYP glVariantusvEXT)(GLuint id, const GLushort *addr);
GLLOADER_API void (GLAPIENTRYP glVariantuivEXT)(GLuint id, const GLuint *addr);
GLLOADER_API void (GLAPIENTRYP glVariantPointerEXT)(GLuint id, GLenum type, GLuint stride, const void *addr);
GLLOADER_API void (GLAPIENTRYP glEnableVariantClientStateEXT)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glDisableVariantClientStateEXT)(GLuint id);
GLLOADER_API GLuint(GLAPIENTRYP glBindLightParameterEXT)(GLenum light, GLenum value);
GLLOADER_API GLuint(GLAPIENTRYP glBindMaterialParameterEXT)(GLenum face, GLenum value);
GLLOADER_API GLuint(GLAPIENTRYP glBindTexGenParameterEXT)(GLenum unit, GLenum coord, GLenum value);
GLLOADER_API GLuint(GLAPIENTRYP glBindTextureUnitParameterEXT)(GLenum unit, GLenum value);
GLLOADER_API GLuint(GLAPIENTRYP glBindParameterEXT)(GLenum value);
GLLOADER_API GLboolean(GLAPIENTRYP glIsVariantEnabledEXT)(GLuint id, GLenum cap);
GLLOADER_API void (GLAPIENTRYP glGetVariantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
GLLOADER_API void (GLAPIENTRYP glGetVariantIntegervEXT)(GLuint id, GLenum value, GLint *data);
GLLOADER_API void (GLAPIENTRYP glGetVariantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
GLLOADER_API void (GLAPIENTRYP glGetVariantPointervEXT)(GLuint id, GLenum value, void **data);
GLLOADER_API void (GLAPIENTRYP glGetInvariantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
GLLOADER_API void (GLAPIENTRYP glGetInvariantIntegervEXT)(GLuint id, GLenum value, GLint *data);
GLLOADER_API void (GLAPIENTRYP glGetInvariantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
GLLOADER_API void (GLAPIENTRYP glGetLocalConstantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
GLLOADER_API void (GLAPIENTRYP glGetLocalConstantIntegervEXT)(GLuint id, GLenum value, GLint *data);
GLLOADER_API void (GLAPIENTRYP glGetLocalConstantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
#endif // GL_EXT_vertex_shader_IMPLEMENTATION
#ifndef GL_EXT_vertex_weighting_IMPLEMENTATION
#define GL_EXT_vertex_weighting_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexWeightfEXT)(GLfloat weight);
GLLOADER_API void (GLAPIENTRYP glVertexWeightfvEXT)(const GLfloat *weight);
GLLOADER_API void (GLAPIENTRYP glVertexWeightPointerEXT)(GLint size, GLenum type, GLsizei stride, const void *pointer);
#endif // GL_EXT_vertex_weighting_IMPLEMENTATION
#ifndef GL_EXT_x11_sync_object_IMPLEMENTATION
#define GL_EXT_x11_sync_object_IMPLEMENTATION 1
GLLOADER_API GLsync(GLAPIENTRYP glImportSyncEXT)(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
#endif // GL_EXT_x11_sync_object_IMPLEMENTATION
#ifndef GL_GREMEDY_frame_terminator_IMPLEMENTATION
#define GL_GREMEDY_frame_terminator_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFrameTerminatorGREMEDY)(void);
#endif // GL_GREMEDY_frame_terminator_IMPLEMENTATION
#ifndef GL_GREMEDY_string_marker_IMPLEMENTATION
#define GL_GREMEDY_string_marker_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glStringMarkerGREMEDY)(GLsizei len, const void *string);
#endif // GL_GREMEDY_string_marker_IMPLEMENTATION
#ifndef GL_HP_image_transform_IMPLEMENTATION
#define GL_HP_image_transform_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glImageTransformParameteriHP)(GLenum target, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glImageTransformParameterfHP)(GLenum target, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glImageTransformParameterivHP)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glImageTransformParameterfvHP)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetImageTransformParameterivHP)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetImageTransformParameterfvHP)(GLenum target, GLenum pname, GLfloat *params);
#endif // GL_HP_image_transform_IMPLEMENTATION
#ifndef GL_IBM_multimode_draw_arrays_IMPLEMENTATION
#define GL_IBM_multimode_draw_arrays_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMultiModeDrawArraysIBM)(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
GLLOADER_API void (GLAPIENTRYP glMultiModeDrawElementsIBM)(const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);
#endif // GL_IBM_multimode_draw_arrays_IMPLEMENTATION
#ifndef GL_IBM_static_data_IMPLEMENTATION
#define GL_IBM_static_data_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFlushStaticDataIBM)(GLenum target);
#endif // GL_IBM_static_data_IMPLEMENTATION
#ifndef GL_IBM_vertex_array_lists_IMPLEMENTATION
#define GL_IBM_vertex_array_lists_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glColorPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API void (GLAPIENTRYP glSecondaryColorPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API void (GLAPIENTRYP glEdgeFlagPointerListIBM)(GLint stride, const GLboolean **pointer, GLint ptrstride);
GLLOADER_API void (GLAPIENTRYP glFogCoordPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API void (GLAPIENTRYP glIndexPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API void (GLAPIENTRYP glNormalPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API void (GLAPIENTRYP glTexCoordPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLLOADER_API void (GLAPIENTRYP glVertexPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
#endif // GL_IBM_vertex_array_lists_IMPLEMENTATION
#ifndef GL_INGR_blend_func_separate_IMPLEMENTATION
#define GL_INGR_blend_func_separate_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendFuncSeparateINGR)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
#endif // GL_INGR_blend_func_separate_IMPLEMENTATION
#ifndef GL_INTEL_framebuffer_CMAA_IMPLEMENTATION
#define GL_INTEL_framebuffer_CMAA_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glApplyFramebufferAttachmentCMAAINTEL)(void);
#endif // GL_INTEL_framebuffer_CMAA_IMPLEMENTATION
#ifndef GL_INTEL_map_texture_IMPLEMENTATION
#define GL_INTEL_map_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glSyncTextureINTEL)(GLuint texture);
GLLOADER_API void (GLAPIENTRYP glUnmapTexture2DINTEL)(GLuint texture, GLint level);
GLLOADER_API void *(GLAPIENTRYP glMapTexture2DINTEL)(GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);
#endif // GL_INTEL_map_texture_IMPLEMENTATION
#ifndef GL_INTEL_parallel_arrays_IMPLEMENTATION
#define GL_INTEL_parallel_arrays_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexPointervINTEL)(GLint size, GLenum type, const void **pointer);
GLLOADER_API void (GLAPIENTRYP glNormalPointervINTEL)(GLenum type, const void **pointer);
GLLOADER_API void (GLAPIENTRYP glColorPointervINTEL)(GLint size, GLenum type, const void **pointer);
GLLOADER_API void (GLAPIENTRYP glTexCoordPointervINTEL)(GLint size, GLenum type, const void **pointer);
#endif // GL_INTEL_parallel_arrays_IMPLEMENTATION
#ifndef GL_INTEL_performance_query_IMPLEMENTATION
#define GL_INTEL_performance_query_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBeginPerfQueryINTEL)(GLuint queryHandle);
GLLOADER_API void (GLAPIENTRYP glCreatePerfQueryINTEL)(GLuint queryId, GLuint *queryHandle);
GLLOADER_API void (GLAPIENTRYP glDeletePerfQueryINTEL)(GLuint queryHandle);
GLLOADER_API void (GLAPIENTRYP glEndPerfQueryINTEL)(GLuint queryHandle);
GLLOADER_API void (GLAPIENTRYP glGetFirstPerfQueryIdINTEL)(GLuint *queryId);
GLLOADER_API void (GLAPIENTRYP glGetNextPerfQueryIdINTEL)(GLuint queryId, GLuint *nextQueryId);
GLLOADER_API void (GLAPIENTRYP glGetPerfCounterInfoINTEL)(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
GLLOADER_API void (GLAPIENTRYP glGetPerfQueryDataINTEL)(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
GLLOADER_API void (GLAPIENTRYP glGetPerfQueryIdByNameINTEL)(GLchar *queryName, GLuint *queryId);
GLLOADER_API void (GLAPIENTRYP glGetPerfQueryInfoINTEL)(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
#endif // GL_INTEL_performance_query_IMPLEMENTATION
#ifndef GL_MESA_resize_buffers_IMPLEMENTATION
#define GL_MESA_resize_buffers_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glResizeBuffersMESA)(void);
#endif // GL_MESA_resize_buffers_IMPLEMENTATION
#ifndef GL_MESA_window_pos_IMPLEMENTATION
#define GL_MESA_window_pos_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glWindowPos2dMESA)(GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2dvMESA)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos2fMESA)(GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2fvMESA)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos2iMESA)(GLint x, GLint y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2ivMESA)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos2sMESA)(GLshort x, GLshort y);
GLLOADER_API void (GLAPIENTRYP glWindowPos2svMESA)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3dMESA)(GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3dvMESA)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3fMESA)(GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3fvMESA)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3iMESA)(GLint x, GLint y, GLint z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3ivMESA)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos3sMESA)(GLshort x, GLshort y, GLshort z);
GLLOADER_API void (GLAPIENTRYP glWindowPos3svMESA)(const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos4dMESA)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glWindowPos4dvMESA)(const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos4fMESA)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glWindowPos4fvMESA)(const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos4iMESA)(GLint x, GLint y, GLint z, GLint w);
GLLOADER_API void (GLAPIENTRYP glWindowPos4ivMESA)(const GLint *v);
GLLOADER_API void (GLAPIENTRYP glWindowPos4sMESA)(GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API void (GLAPIENTRYP glWindowPos4svMESA)(const GLshort *v);
#endif // GL_MESA_window_pos_IMPLEMENTATION
#ifndef GL_NVX_conditional_render_IMPLEMENTATION
#define GL_NVX_conditional_render_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBeginConditionalRenderNVX)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glEndConditionalRenderNVX)(void);
#endif // GL_NVX_conditional_render_IMPLEMENTATION
#ifndef GL_NV_bindless_multi_draw_indirect_IMPLEMENTATION
#define GL_NV_bindless_multi_draw_indirect_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMultiDrawArraysIndirectBindlessNV)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
GLLOADER_API void (GLAPIENTRYP glMultiDrawElementsIndirectBindlessNV)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
#endif // GL_NV_bindless_multi_draw_indirect_IMPLEMENTATION
#ifndef GL_NV_bindless_multi_draw_indirect_count_IMPLEMENTATION
#define GL_NV_bindless_multi_draw_indirect_count_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMultiDrawArraysIndirectBindlessCountNV)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
GLLOADER_API void (GLAPIENTRYP glMultiDrawElementsIndirectBindlessCountNV)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
#endif // GL_NV_bindless_multi_draw_indirect_count_IMPLEMENTATION
#ifndef GL_NV_bindless_texture_IMPLEMENTATION
#define GL_NV_bindless_texture_IMPLEMENTATION 1
GLLOADER_API GLuint64(GLAPIENTRYP glGetTextureHandleNV)(GLuint texture);
GLLOADER_API GLuint64(GLAPIENTRYP glGetTextureSamplerHandleNV)(GLuint texture, GLuint sampler);
GLLOADER_API void (GLAPIENTRYP glMakeTextureHandleResidentNV)(GLuint64 handle);
GLLOADER_API void (GLAPIENTRYP glMakeTextureHandleNonResidentNV)(GLuint64 handle);
GLLOADER_API GLuint64(GLAPIENTRYP glGetImageHandleNV)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLLOADER_API void (GLAPIENTRYP glMakeImageHandleResidentNV)(GLuint64 handle, GLenum access);
GLLOADER_API void (GLAPIENTRYP glMakeImageHandleNonResidentNV)(GLuint64 handle);
GLLOADER_API void (GLAPIENTRYP glUniformHandleui64NV)(GLint location, GLuint64 value);
GLLOADER_API void (GLAPIENTRYP glUniformHandleui64vNV)(GLint location, GLsizei count, const GLuint64 *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformHandleui64NV)(GLuint program, GLint location, GLuint64 value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformHandleui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
GLLOADER_API GLboolean(GLAPIENTRYP glIsTextureHandleResidentNV)(GLuint64 handle);
GLLOADER_API GLboolean(GLAPIENTRYP glIsImageHandleResidentNV)(GLuint64 handle);
#endif // GL_NV_bindless_texture_IMPLEMENTATION
#ifndef GL_NV_blend_equation_advanced_IMPLEMENTATION
#define GL_NV_blend_equation_advanced_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBlendParameteriNV)(GLenum pname, GLint value);
GLLOADER_API void (GLAPIENTRYP glBlendBarrierNV)(void);
#endif // GL_NV_blend_equation_advanced_IMPLEMENTATION
#ifndef GL_NV_command_list_IMPLEMENTATION
#define GL_NV_command_list_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glCreateStatesNV)(GLsizei n, GLuint *states);
GLLOADER_API void (GLAPIENTRYP glDeleteStatesNV)(GLsizei n, const GLuint *states);
GLLOADER_API GLboolean(GLAPIENTRYP glIsStateNV)(GLuint state);
GLLOADER_API void (GLAPIENTRYP glStateCaptureNV)(GLuint state, GLenum mode);
GLLOADER_API GLuint(GLAPIENTRYP glGetCommandHeaderNV)(GLenum tokenID, GLuint size);
GLushort(GLAPIENTRYP glGetStageIndexNV)(GLenum shadertype);
GLLOADER_API void (GLAPIENTRYP glDrawCommandsNV)(GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);
GLLOADER_API void (GLAPIENTRYP glDrawCommandsAddressNV)(GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);
GLLOADER_API void (GLAPIENTRYP glDrawCommandsStatesNV)(GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
GLLOADER_API void (GLAPIENTRYP glDrawCommandsStatesAddressNV)(const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
GLLOADER_API void (GLAPIENTRYP glCreateCommandListsNV)(GLsizei n, GLuint *lists);
GLLOADER_API void (GLAPIENTRYP glDeleteCommandListsNV)(GLsizei n, const GLuint *lists);
GLLOADER_API GLboolean(GLAPIENTRYP glIsCommandListNV)(GLuint list);
GLLOADER_API void (GLAPIENTRYP glListDrawCommandsStatesClientNV)(GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
GLLOADER_API void (GLAPIENTRYP glCommandListSegmentsNV)(GLuint list, GLuint segments);
GLLOADER_API void (GLAPIENTRYP glCompileCommandListNV)(GLuint list);
GLLOADER_API void (GLAPIENTRYP glCallCommandListNV)(GLuint list);
#endif // GL_NV_command_list_IMPLEMENTATION
#ifndef GL_NV_conditional_render_IMPLEMENTATION
#define GL_NV_conditional_render_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBeginConditionalRenderNV)(GLuint id, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glEndConditionalRenderNV)(void);
#endif // GL_NV_conditional_render_IMPLEMENTATION
#ifndef GL_NV_conservative_raster_IMPLEMENTATION
#define GL_NV_conservative_raster_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glSubpixelPrecisionBiasNV)(GLuint xbits, GLuint ybits);
#endif // GL_NV_conservative_raster_IMPLEMENTATION
#ifndef GL_NV_conservative_raster_dilate_IMPLEMENTATION
#define GL_NV_conservative_raster_dilate_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glConservativeRasterParameterfNV)(GLenum pname, GLfloat value);
#endif // GL_NV_conservative_raster_dilate_IMPLEMENTATION
#ifndef GL_NV_copy_image_IMPLEMENTATION
#define GL_NV_copy_image_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glCopyImageSubDataNV)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
#endif // GL_NV_copy_image_IMPLEMENTATION
#ifndef GL_NV_depth_buffer_float_IMPLEMENTATION
#define GL_NV_depth_buffer_float_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDepthRangedNV)(GLdouble zNear, GLdouble zFar);
GLLOADER_API void (GLAPIENTRYP glClearDepthdNV)(GLdouble depth);
GLLOADER_API void (GLAPIENTRYP glDepthBoundsdNV)(GLdouble zmin, GLdouble zmax);
#endif // GL_NV_depth_buffer_float_IMPLEMENTATION
#ifndef GL_NV_draw_texture_IMPLEMENTATION
#define GL_NV_draw_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawTextureNV)(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
#endif // GL_NV_draw_texture_IMPLEMENTATION
#ifndef GL_NV_evaluators_IMPLEMENTATION
#define GL_NV_evaluators_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMapControlPointsNV)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);
GLLOADER_API void (GLAPIENTRYP glMapParameterivNV)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glMapParameterfvNV)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetMapControlPointsNV)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);
GLLOADER_API void (GLAPIENTRYP glGetMapParameterivNV)(GLenum target, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetMapParameterfvNV)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetMapAttribParameterivNV)(GLenum target, GLuint index, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetMapAttribParameterfvNV)(GLenum target, GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glEvalMapsNV)(GLenum target, GLenum mode);
#endif // GL_NV_evaluators_IMPLEMENTATION
#ifndef GL_NV_explicit_multisample_IMPLEMENTATION
#define GL_NV_explicit_multisample_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGetMultisamplefvNV)(GLenum pname, GLuint index, GLfloat *val);
GLLOADER_API void (GLAPIENTRYP glSampleMaskIndexedNV)(GLuint index, GLbitfield mask);
GLLOADER_API void (GLAPIENTRYP glTexRenderbufferNV)(GLenum target, GLuint renderbuffer);
#endif // GL_NV_explicit_multisample_IMPLEMENTATION
#ifndef GL_NV_fence_IMPLEMENTATION
#define GL_NV_fence_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDeleteFencesNV)(GLsizei n, const GLuint *fences);
GLLOADER_API void (GLAPIENTRYP glGenFencesNV)(GLsizei n, GLuint *fences);
GLLOADER_API GLboolean(GLAPIENTRYP glIsFenceNV)(GLuint fence);
GLLOADER_API GLboolean(GLAPIENTRYP glTestFenceNV)(GLuint fence);
GLLOADER_API void (GLAPIENTRYP glGetFenceivNV)(GLuint fence, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glFinishFenceNV)(GLuint fence);
GLLOADER_API void (GLAPIENTRYP glSetFenceNV)(GLuint fence, GLenum condition);
#endif // GL_NV_fence_IMPLEMENTATION
#ifndef GL_NV_fragment_coverage_to_color_IMPLEMENTATION
#define GL_NV_fragment_coverage_to_color_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFragmentCoverageColorNV)(GLuint color);
#endif // GL_NV_fragment_coverage_to_color_IMPLEMENTATION
#ifndef GL_NV_fragment_program_IMPLEMENTATION
#define GL_NV_fragment_program_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProgramNamedParameter4fNV)(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glProgramNamedParameter4fvNV)(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glProgramNamedParameter4dNV)(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glProgramNamedParameter4dvNV)(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glGetProgramNamedParameterfvNV)(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramNamedParameterdvNV)(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
#endif // GL_NV_fragment_program_IMPLEMENTATION
#ifndef GL_NV_framebuffer_mixed_samples_IMPLEMENTATION
#define GL_NV_framebuffer_mixed_samples_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glCoverageModulationTableNV)(GLsizei n, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glGetCoverageModulationTableNV)(GLsizei bufsize, GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glCoverageModulationNV)(GLenum components);
#endif // GL_NV_framebuffer_mixed_samples_IMPLEMENTATION
#ifndef GL_NV_framebuffer_multisample_coverage_IMPLEMENTATION
#define GL_NV_framebuffer_multisample_coverage_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glRenderbufferStorageMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
#endif // GL_NV_framebuffer_multisample_coverage_IMPLEMENTATION
#ifndef GL_NV_geometry_program4_IMPLEMENTATION
#define GL_NV_geometry_program4_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProgramVertexLimitNV)(GLenum target, GLint limit);
GLLOADER_API void (GLAPIENTRYP glFramebufferTextureEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLLOADER_API void (GLAPIENTRYP glFramebufferTextureFaceEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif // GL_NV_geometry_program4_IMPLEMENTATION
#ifndef GL_NV_gpu_program4_IMPLEMENTATION
#define GL_NV_gpu_program4_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProgramLocalParameterI4iNV)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParameterI4ivNV)(GLenum target, GLuint index, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParametersI4ivNV)(GLenum target, GLuint index, GLsizei count, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParameterI4uiNV)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParameterI4uivNV)(GLenum target, GLuint index, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glProgramLocalParametersI4uivNV)(GLenum target, GLuint index, GLsizei count, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParameterI4iNV)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParameterI4ivNV)(GLenum target, GLuint index, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParametersI4ivNV)(GLenum target, GLuint index, GLsizei count, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParameterI4uiNV)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParameterI4uivNV)(GLenum target, GLuint index, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glProgramEnvParametersI4uivNV)(GLenum target, GLuint index, GLsizei count, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramLocalParameterIivNV)(GLenum target, GLuint index, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramLocalParameterIuivNV)(GLenum target, GLuint index, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramEnvParameterIivNV)(GLenum target, GLuint index, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramEnvParameterIuivNV)(GLenum target, GLuint index, GLuint *params);
#endif // GL_NV_gpu_program4_IMPLEMENTATION
#ifndef GL_NV_gpu_program5_IMPLEMENTATION
#define GL_NV_gpu_program5_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProgramSubroutineParametersuivNV)(GLenum target, GLsizei count, const GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramSubroutineParameteruivNV)(GLenum target, GLuint index, GLuint *param);
#endif // GL_NV_gpu_program5_IMPLEMENTATION
#ifndef GL_NV_half_float_IMPLEMENTATION
#define GL_NV_half_float_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertex2hNV)(GLhalfNV x, GLhalfNV y);
GLLOADER_API void (GLAPIENTRYP glVertex2hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertex3hNV)(GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLLOADER_API void (GLAPIENTRYP glVertex3hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertex4hNV)(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLLOADER_API void (GLAPIENTRYP glVertex4hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glNormal3hNV)(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
GLLOADER_API void (GLAPIENTRYP glNormal3hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glColor3hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLLOADER_API void (GLAPIENTRYP glColor3hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glColor4hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
GLLOADER_API void (GLAPIENTRYP glColor4hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord1hNV)(GLhalfNV s);
GLLOADER_API void (GLAPIENTRYP glTexCoord1hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2hNV)(GLhalfNV s, GLhalfNV t);
GLLOADER_API void (GLAPIENTRYP glTexCoord2hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord3hNV)(GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLLOADER_API void (GLAPIENTRYP glTexCoord3hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord4hNV)(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLLOADER_API void (GLAPIENTRYP glTexCoord4hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1hNV)(GLenum target, GLhalfNV s);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord1hvNV)(GLenum target, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2hNV)(GLenum target, GLhalfNV s, GLhalfNV t);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord2hvNV)(GLenum target, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3hNV)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord3hvNV)(GLenum target, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4hNV)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLLOADER_API void (GLAPIENTRYP glMultiTexCoord4hvNV)(GLenum target, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glFogCoordhNV)(GLhalfNV fog);
GLLOADER_API void (GLAPIENTRYP glFogCoordhvNV)(const GLhalfNV *fog);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLLOADER_API void (GLAPIENTRYP glSecondaryColor3hvNV)(const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertexWeighthNV)(GLhalfNV weight);
GLLOADER_API void (GLAPIENTRYP glVertexWeighthvNV)(const GLhalfNV *weight);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1hNV)(GLuint index, GLhalfNV x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1hvNV)(GLuint index, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2hNV)(GLuint index, GLhalfNV x, GLhalfNV y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2hvNV)(GLuint index, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3hNV)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3hvNV)(GLuint index, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4hNV)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4hvNV)(GLuint index, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs1hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs2hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs3hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs4hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
#endif // GL_NV_half_float_IMPLEMENTATION
#ifndef GL_NV_internalformat_sample_query_IMPLEMENTATION
#define GL_NV_internalformat_sample_query_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGetInternalformatSampleivNV)(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
#endif // GL_NV_internalformat_sample_query_IMPLEMENTATION
#ifndef GL_NV_occlusion_query_IMPLEMENTATION
#define GL_NV_occlusion_query_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGenOcclusionQueriesNV)(GLsizei n, GLuint *ids);
GLLOADER_API void (GLAPIENTRYP glDeleteOcclusionQueriesNV)(GLsizei n, const GLuint *ids);
GLLOADER_API GLboolean(GLAPIENTRYP glIsOcclusionQueryNV)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glBeginOcclusionQueryNV)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glEndOcclusionQueryNV)(void);
GLLOADER_API void (GLAPIENTRYP glGetOcclusionQueryivNV)(GLuint id, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetOcclusionQueryuivNV)(GLuint id, GLenum pname, GLuint *params);
#endif // GL_NV_occlusion_query_IMPLEMENTATION
#ifndef GL_NV_parameter_buffer_object_IMPLEMENTATION
#define GL_NV_parameter_buffer_object_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glProgramBufferParametersfvNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glProgramBufferParametersIivNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glProgramBufferParametersIuivNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);
#endif // GL_NV_parameter_buffer_object_IMPLEMENTATION
#ifndef GL_NV_path_rendering_IMPLEMENTATION
#define GL_NV_path_rendering_IMPLEMENTATION 1
GLLOADER_API GLuint(GLAPIENTRYP glGenPathsNV)(GLsizei range);
GLLOADER_API void (GLAPIENTRYP glDeletePathsNV)(GLuint path, GLsizei range);
GLLOADER_API GLboolean(GLAPIENTRYP glIsPathNV)(GLuint path);
GLLOADER_API void (GLAPIENTRYP glPathCommandsNV)(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
GLLOADER_API void (GLAPIENTRYP glPathCoordsNV)(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);
GLLOADER_API void (GLAPIENTRYP glPathSubCommandsNV)(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
GLLOADER_API void (GLAPIENTRYP glPathSubCoordsNV)(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);
GLLOADER_API void (GLAPIENTRYP glPathStringNV)(GLuint path, GLenum format, GLsizei length, const void *pathString);
GLLOADER_API void (GLAPIENTRYP glPathGlyphsNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLLOADER_API void (GLAPIENTRYP glPathGlyphRangeNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLLOADER_API void (GLAPIENTRYP glWeightPathsNV)(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
GLLOADER_API void (GLAPIENTRYP glCopyPathNV)(GLuint resultPath, GLuint srcPath);
GLLOADER_API void (GLAPIENTRYP glInterpolatePathsNV)(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
GLLOADER_API void (GLAPIENTRYP glTransformPathNV)(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API void (GLAPIENTRYP glPathParameterivNV)(GLuint path, GLenum pname, const GLint *value);
GLLOADER_API void (GLAPIENTRYP glPathParameteriNV)(GLuint path, GLenum pname, GLint value);
GLLOADER_API void (GLAPIENTRYP glPathParameterfvNV)(GLuint path, GLenum pname, const GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glPathParameterfNV)(GLuint path, GLenum pname, GLfloat value);
GLLOADER_API void (GLAPIENTRYP glPathDashArrayNV)(GLuint path, GLsizei dashCount, const GLfloat *dashArray);
GLLOADER_API void (GLAPIENTRYP glPathStencilFuncNV)(GLenum func, GLint ref, GLuint mask);
GLLOADER_API void (GLAPIENTRYP glPathStencilDepthOffsetNV)(GLfloat factor, GLfloat units);
GLLOADER_API void (GLAPIENTRYP glStencilFillPathNV)(GLuint path, GLenum fillMode, GLuint mask);
GLLOADER_API void (GLAPIENTRYP glStencilStrokePathNV)(GLuint path, GLint reference, GLuint mask);
GLLOADER_API void (GLAPIENTRYP glStencilFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API void (GLAPIENTRYP glStencilStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API void (GLAPIENTRYP glPathCoverDepthFuncNV)(GLenum func);
GLLOADER_API void (GLAPIENTRYP glCoverFillPathNV)(GLuint path, GLenum coverMode);
GLLOADER_API void (GLAPIENTRYP glCoverStrokePathNV)(GLuint path, GLenum coverMode);
GLLOADER_API void (GLAPIENTRYP glCoverFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API void (GLAPIENTRYP glCoverStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API void (GLAPIENTRYP glGetPathParameterivNV)(GLuint path, GLenum pname, GLint *value);
GLLOADER_API void (GLAPIENTRYP glGetPathParameterfvNV)(GLuint path, GLenum pname, GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glGetPathCommandsNV)(GLuint path, GLubyte *commands);
GLLOADER_API void (GLAPIENTRYP glGetPathCoordsNV)(GLuint path, GLfloat *coords);
GLLOADER_API void (GLAPIENTRYP glGetPathDashArrayNV)(GLuint path, GLfloat *dashArray);
GLLOADER_API void (GLAPIENTRYP glGetPathMetricsNV)(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
GLLOADER_API void (GLAPIENTRYP glGetPathMetricRangeNV)(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
GLLOADER_API void (GLAPIENTRYP glGetPathSpacingNV)(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
GLLOADER_API GLboolean(GLAPIENTRYP glIsPointInFillPathNV)(GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLLOADER_API GLboolean(GLAPIENTRYP glIsPointInStrokePathNV)(GLuint path, GLfloat x, GLfloat y);
GLfloat(GLAPIENTRYP glGetPathLengthNV)(GLuint path, GLsizei startSegment, GLsizei numSegments);
GLLOADER_API GLboolean(GLAPIENTRYP glPointAlongPathNV)(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
GLLOADER_API void (GLAPIENTRYP glMatrixLoad3x2fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMatrixLoad3x3fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMatrixLoadTranspose3x3fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMatrixMult3x2fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMatrixMult3x3fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glMatrixMultTranspose3x3fNV)(GLenum matrixMode, const GLfloat *m);
GLLOADER_API void (GLAPIENTRYP glStencilThenCoverFillPathNV)(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
GLLOADER_API void (GLAPIENTRYP glStencilThenCoverStrokePathNV)(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
GLLOADER_API void (GLAPIENTRYP glStencilThenCoverFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API void (GLAPIENTRYP glStencilThenCoverStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLLOADER_API GLenum(GLAPIENTRYP glPathGlyphIndexRangeNV)(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
GLLOADER_API GLenum(GLAPIENTRYP glPathGlyphIndexArrayNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLLOADER_API GLenum(GLAPIENTRYP glPathMemoryGlyphIndexArrayNV)(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLLOADER_API void (GLAPIENTRYP glProgramPathFragmentInputGenNV)(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
GLLOADER_API void (GLAPIENTRYP glGetProgramResourcefvNV)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glPathColorGenNV)(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
GLLOADER_API void (GLAPIENTRYP glPathTexGenNV)(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
GLLOADER_API void (GLAPIENTRYP glPathFogGenNV)(GLenum genMode);
GLLOADER_API void (GLAPIENTRYP glGetPathColorGenivNV)(GLenum color, GLenum pname, GLint *value);
GLLOADER_API void (GLAPIENTRYP glGetPathColorGenfvNV)(GLenum color, GLenum pname, GLfloat *value);
GLLOADER_API void (GLAPIENTRYP glGetPathTexGenivNV)(GLenum texCoordSet, GLenum pname, GLint *value);
GLLOADER_API void (GLAPIENTRYP glGetPathTexGenfvNV)(GLenum texCoordSet, GLenum pname, GLfloat *value);
#endif // GL_NV_path_rendering_IMPLEMENTATION
#ifndef GL_NV_pixel_data_range_IMPLEMENTATION
#define GL_NV_pixel_data_range_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPixelDataRangeNV)(GLenum target, GLsizei length, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glFlushPixelDataRangeNV)(GLenum target);
#endif // GL_NV_pixel_data_range_IMPLEMENTATION
#ifndef GL_NV_point_sprite_IMPLEMENTATION
#define GL_NV_point_sprite_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPointParameteriNV)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glPointParameterivNV)(GLenum pname, const GLint *params);
#endif // GL_NV_point_sprite_IMPLEMENTATION
#ifndef GL_NV_present_video_IMPLEMENTATION
#define GL_NV_present_video_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPresentFrameKeyedNV)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
GLLOADER_API void (GLAPIENTRYP glPresentFrameDualFillNV)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
GLLOADER_API void (GLAPIENTRYP glGetVideoivNV)(GLuint video_slot, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVideouivNV)(GLuint video_slot, GLenum pname, GLuint *params);
GLLOADER_API void (GLAPIENTRYP glGetVideoi64vNV)(GLuint video_slot, GLenum pname, GLint64EXT *params);
GLLOADER_API void (GLAPIENTRYP glGetVideoui64vNV)(GLuint video_slot, GLenum pname, GLuint64EXT *params);
#endif // GL_NV_present_video_IMPLEMENTATION
#ifndef GL_NV_primitive_restart_IMPLEMENTATION
#define GL_NV_primitive_restart_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPrimitiveRestartNV)(void);
GLLOADER_API void (GLAPIENTRYP glPrimitiveRestartIndexNV)(GLuint index);
#endif // GL_NV_primitive_restart_IMPLEMENTATION
#ifndef GL_NV_register_combiners_IMPLEMENTATION
#define GL_NV_register_combiners_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glCombinerParameterfvNV)(GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glCombinerParameterfNV)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glCombinerParameterivNV)(GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glCombinerParameteriNV)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glCombinerInputNV)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLLOADER_API void (GLAPIENTRYP glCombinerOutputNV)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
GLLOADER_API void (GLAPIENTRYP glFinalCombinerInputNV)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLLOADER_API void (GLAPIENTRYP glGetCombinerInputParameterfvNV)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetCombinerInputParameterivNV)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetCombinerOutputParameterfvNV)(GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetCombinerOutputParameterivNV)(GLenum stage, GLenum portion, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetFinalCombinerInputParameterfvNV)(GLenum variable, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetFinalCombinerInputParameterivNV)(GLenum variable, GLenum pname, GLint *params);
#endif // GL_NV_register_combiners_IMPLEMENTATION
#ifndef GL_NV_register_combiners2_IMPLEMENTATION
#define GL_NV_register_combiners2_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glCombinerStageParameterfvNV)(GLenum stage, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetCombinerStageParameterfvNV)(GLenum stage, GLenum pname, GLfloat *params);
#endif // GL_NV_register_combiners2_IMPLEMENTATION
#ifndef GL_NV_sample_locations_IMPLEMENTATION
#define GL_NV_sample_locations_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFramebufferSampleLocationsfvNV)(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glNamedFramebufferSampleLocationsfvNV)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glResolveDepthValuesNV)(void);
#endif // GL_NV_sample_locations_IMPLEMENTATION
#ifndef GL_NV_shader_buffer_load_IMPLEMENTATION
#define GL_NV_shader_buffer_load_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glMakeBufferResidentNV)(GLenum target, GLenum access);
GLLOADER_API void (GLAPIENTRYP glMakeBufferNonResidentNV)(GLenum target);
GLLOADER_API GLboolean(GLAPIENTRYP glIsBufferResidentNV)(GLenum target);
GLLOADER_API void (GLAPIENTRYP glMakeNamedBufferResidentNV)(GLuint buffer, GLenum access);
GLLOADER_API void (GLAPIENTRYP glMakeNamedBufferNonResidentNV)(GLuint buffer);
GLLOADER_API GLboolean(GLAPIENTRYP glIsNamedBufferResidentNV)(GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glGetBufferParameterui64vNV)(GLenum target, GLenum pname, GLuint64EXT *params);
GLLOADER_API void (GLAPIENTRYP glGetNamedBufferParameterui64vNV)(GLuint buffer, GLenum pname, GLuint64EXT *params);
GLLOADER_API void (GLAPIENTRYP glGetIntegerui64vNV)(GLenum value, GLuint64EXT *result);
GLLOADER_API void (GLAPIENTRYP glUniformui64NV)(GLint location, GLuint64EXT value);
GLLOADER_API void (GLAPIENTRYP glUniformui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformui64NV)(GLuint program, GLint location, GLuint64EXT value);
GLLOADER_API void (GLAPIENTRYP glProgramUniformui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif // GL_NV_shader_buffer_load_IMPLEMENTATION
#ifndef GL_NV_texture_barrier_IMPLEMENTATION
#define GL_NV_texture_barrier_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTextureBarrierNV)(void);
#endif // GL_NV_texture_barrier_IMPLEMENTATION
#ifndef GL_NV_texture_multisample_IMPLEMENTATION
#define GL_NV_texture_multisample_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexImage2DMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLLOADER_API void (GLAPIENTRYP glTexImage3DMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLLOADER_API void (GLAPIENTRYP glTextureImage2DMultisampleNV)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLLOADER_API void (GLAPIENTRYP glTextureImage3DMultisampleNV)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLLOADER_API void (GLAPIENTRYP glTextureImage2DMultisampleCoverageNV)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLLOADER_API void (GLAPIENTRYP glTextureImage3DMultisampleCoverageNV)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
#endif // GL_NV_texture_multisample_IMPLEMENTATION
#ifndef GL_NV_transform_feedback_IMPLEMENTATION
#define GL_NV_transform_feedback_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBeginTransformFeedbackNV)(GLenum primitiveMode);
GLLOADER_API void (GLAPIENTRYP glEndTransformFeedbackNV)(void);
GLLOADER_API void (GLAPIENTRYP glTransformFeedbackAttribsNV)(GLsizei count, const GLint *attribs, GLenum bufferMode);
GLLOADER_API void (GLAPIENTRYP glBindBufferRangeNV)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLLOADER_API void (GLAPIENTRYP glBindBufferOffsetNV)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLLOADER_API void (GLAPIENTRYP glBindBufferBaseNV)(GLenum target, GLuint index, GLuint buffer);
GLLOADER_API void (GLAPIENTRYP glTransformFeedbackVaryingsNV)(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
GLLOADER_API void (GLAPIENTRYP glActiveVaryingNV)(GLuint program, const GLchar *name);
GLLOADER_API GLint(GLAPIENTRYP glGetVaryingLocationNV)(GLuint program, const GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetActiveVaryingNV)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
GLLOADER_API void (GLAPIENTRYP glGetTransformFeedbackVaryingNV)(GLuint program, GLuint index, GLint *location);
GLLOADER_API void (GLAPIENTRYP glTransformFeedbackStreamAttribsNV)(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif // GL_NV_transform_feedback_IMPLEMENTATION
#ifndef GL_NV_transform_feedback2_IMPLEMENTATION
#define GL_NV_transform_feedback2_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBindTransformFeedbackNV)(GLenum target, GLuint id);
GLLOADER_API void (GLAPIENTRYP glDeleteTransformFeedbacksNV)(GLsizei n, const GLuint *ids);
GLLOADER_API void (GLAPIENTRYP glGenTransformFeedbacksNV)(GLsizei n, GLuint *ids);
GLLOADER_API GLboolean(GLAPIENTRYP glIsTransformFeedbackNV)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glPauseTransformFeedbackNV)(void);
GLLOADER_API void (GLAPIENTRYP glResumeTransformFeedbackNV)(void);
GLLOADER_API void (GLAPIENTRYP glDrawTransformFeedbackNV)(GLenum mode, GLuint id);
#endif // GL_NV_transform_feedback2_IMPLEMENTATION
#ifndef GL_NV_vdpau_interop_IMPLEMENTATION
#define GL_NV_vdpau_interop_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVDPAUInitNV)(const void *vdpDevice, const void *getProcAddress);
GLLOADER_API void (GLAPIENTRYP glVDPAUFiniNV)(void);
GLvdpauSurfaceNV(GLAPIENTRYP glVDPAURegisterVideoSurfaceNV)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLvdpauSurfaceNV(GLAPIENTRYP glVDPAURegisterOutputSurfaceNV)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLLOADER_API GLboolean(GLAPIENTRYP glVDPAUIsSurfaceNV)(GLvdpauSurfaceNV surface);
GLLOADER_API void (GLAPIENTRYP glVDPAUUnregisterSurfaceNV)(GLvdpauSurfaceNV surface);
GLLOADER_API void (GLAPIENTRYP glVDPAUGetSurfaceivNV)(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
GLLOADER_API void (GLAPIENTRYP glVDPAUSurfaceAccessNV)(GLvdpauSurfaceNV surface, GLenum access);
GLLOADER_API void (GLAPIENTRYP glVDPAUMapSurfacesNV)(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
GLLOADER_API void (GLAPIENTRYP glVDPAUUnmapSurfacesNV)(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
#endif // GL_NV_vdpau_interop_IMPLEMENTATION
#ifndef GL_NV_vertex_array_range_IMPLEMENTATION
#define GL_NV_vertex_array_range_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFlushVertexArrayRangeNV)(void);
GLLOADER_API void (GLAPIENTRYP glVertexArrayRangeNV)(GLsizei length, const void *pointer);
#endif // GL_NV_vertex_array_range_IMPLEMENTATION
#ifndef GL_NV_vertex_attrib_integer_64bit_IMPLEMENTATION
#define GL_NV_vertex_attrib_integer_64bit_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1i64NV)(GLuint index, GLint64EXT x);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL2i64NV)(GLuint index, GLint64EXT x, GLint64EXT y);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL3i64NV)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL4i64NV)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1i64vNV)(GLuint index, const GLint64EXT *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL2i64vNV)(GLuint index, const GLint64EXT *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL3i64vNV)(GLuint index, const GLint64EXT *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL4i64vNV)(GLuint index, const GLint64EXT *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1ui64NV)(GLuint index, GLuint64EXT x);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL2ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL3ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL4ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL1ui64vNV)(GLuint index, const GLuint64EXT *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL2ui64vNV)(GLuint index, const GLuint64EXT *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL3ui64vNV)(GLuint index, const GLuint64EXT *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribL4ui64vNV)(GLuint index, const GLuint64EXT *v);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribLi64vNV)(GLuint index, GLenum pname, GLint64EXT *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribLui64vNV)(GLuint index, GLenum pname, GLuint64EXT *params);
GLLOADER_API void (GLAPIENTRYP glVertexAttribLFormatNV)(GLuint index, GLint size, GLenum type, GLsizei stride);
#endif // GL_NV_vertex_attrib_integer_64bit_IMPLEMENTATION
#ifndef GL_NV_vertex_buffer_unified_memory_IMPLEMENTATION
#define GL_NV_vertex_buffer_unified_memory_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBufferAddressRangeNV)(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
GLLOADER_API void (GLAPIENTRYP glVertexFormatNV)(GLint size, GLenum type, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glNormalFormatNV)(GLenum type, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glColorFormatNV)(GLint size, GLenum type, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glIndexFormatNV)(GLenum type, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glTexCoordFormatNV)(GLint size, GLenum type, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glEdgeFlagFormatNV)(GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glSecondaryColorFormatNV)(GLint size, GLenum type, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glFogCoordFormatNV)(GLenum type, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glVertexAttribFormatNV)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glVertexAttribIFormatNV)(GLuint index, GLint size, GLenum type, GLsizei stride);
GLLOADER_API void (GLAPIENTRYP glGetIntegerui64i_vNV)(GLenum value, GLuint index, GLuint64EXT *result);
#endif // GL_NV_vertex_buffer_unified_memory_IMPLEMENTATION
#ifndef GL_NV_vertex_program_IMPLEMENTATION
#define GL_NV_vertex_program_IMPLEMENTATION 1
GLLOADER_API GLboolean(GLAPIENTRYP glAreProgramsResidentNV)(GLsizei n, const GLuint *programs, GLboolean *residences);
GLLOADER_API void (GLAPIENTRYP glBindProgramNV)(GLenum target, GLuint id);
GLLOADER_API void (GLAPIENTRYP glDeleteProgramsNV)(GLsizei n, const GLuint *programs);
GLLOADER_API void (GLAPIENTRYP glExecuteProgramNV)(GLenum target, GLuint id, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGenProgramsNV)(GLsizei n, GLuint *programs);
GLLOADER_API void (GLAPIENTRYP glGetProgramParameterdvNV)(GLenum target, GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramParameterfvNV)(GLenum target, GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramivNV)(GLuint id, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetProgramStringNV)(GLuint id, GLenum pname, GLubyte *program);
GLLOADER_API void (GLAPIENTRYP glGetTrackMatrixivNV)(GLenum target, GLuint address, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribdvNV)(GLuint index, GLenum pname, GLdouble *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribfvNV)(GLuint index, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribivNV)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribPointervNV)(GLuint index, GLenum pname, void **pointer);
GLLOADER_API GLboolean(GLAPIENTRYP glIsProgramNV)(GLuint id);
GLLOADER_API void (GLAPIENTRYP glLoadProgramNV)(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
GLLOADER_API void (GLAPIENTRYP glProgramParameter4dNV)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glProgramParameter4dvNV)(GLenum target, GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glProgramParameter4fNV)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glProgramParameter4fvNV)(GLenum target, GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glProgramParameters4dvNV)(GLenum target, GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glProgramParameters4fvNV)(GLenum target, GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glRequestResidentProgramsNV)(GLsizei n, const GLuint *programs);
GLLOADER_API void (GLAPIENTRYP glTrackMatrixNV)(GLenum target, GLuint address, GLenum matrix, GLenum transform);
GLLOADER_API void (GLAPIENTRYP glVertexAttribPointerNV)(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1dNV)(GLuint index, GLdouble x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1dvNV)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1fNV)(GLuint index, GLfloat x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1fvNV)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1sNV)(GLuint index, GLshort x);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib1svNV)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2dNV)(GLuint index, GLdouble x, GLdouble y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2dvNV)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2fNV)(GLuint index, GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2fvNV)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2sNV)(GLuint index, GLshort x, GLshort y);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib2svNV)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3dNV)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3dvNV)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3fNV)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3fvNV)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3sNV)(GLuint index, GLshort x, GLshort y, GLshort z);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib3svNV)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4dNV)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4dvNV)(GLuint index, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4fNV)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4fvNV)(GLuint index, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4sNV)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4svNV)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4ubNV)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLLOADER_API void (GLAPIENTRYP glVertexAttrib4ubvNV)(GLuint index, const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs1dvNV)(GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs1fvNV)(GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs1svNV)(GLuint index, GLsizei count, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs2dvNV)(GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs2fvNV)(GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs2svNV)(GLuint index, GLsizei count, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs3dvNV)(GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs3fvNV)(GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs3svNV)(GLuint index, GLsizei count, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs4dvNV)(GLuint index, GLsizei count, const GLdouble *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs4fvNV)(GLuint index, GLsizei count, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs4svNV)(GLuint index, GLsizei count, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribs4ubvNV)(GLuint index, GLsizei count, const GLubyte *v);
#endif // GL_NV_vertex_program_IMPLEMENTATION
#ifndef GL_NV_vertex_program4_IMPLEMENTATION
#define GL_NV_vertex_program4_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glVertexAttribI1iEXT)(GLuint index, GLint x);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI2iEXT)(GLuint index, GLint x, GLint y);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI3iEXT)(GLuint index, GLint x, GLint y, GLint z);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4iEXT)(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI1uiEXT)(GLuint index, GLuint x);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI2uiEXT)(GLuint index, GLuint x, GLuint y);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI3uiEXT)(GLuint index, GLuint x, GLuint y, GLuint z);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4uiEXT)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI1ivEXT)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI2ivEXT)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI3ivEXT)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4ivEXT)(GLuint index, const GLint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI1uivEXT)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI2uivEXT)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI3uivEXT)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4uivEXT)(GLuint index, const GLuint *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4bvEXT)(GLuint index, const GLbyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4svEXT)(GLuint index, const GLshort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4ubvEXT)(GLuint index, const GLubyte *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribI4usvEXT)(GLuint index, const GLushort *v);
GLLOADER_API void (GLAPIENTRYP glVertexAttribIPointerEXT)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribIivEXT)(GLuint index, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVertexAttribIuivEXT)(GLuint index, GLenum pname, GLuint *params);
#endif // GL_NV_vertex_program4_IMPLEMENTATION
#ifndef GL_NV_video_capture_IMPLEMENTATION
#define GL_NV_video_capture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glBeginVideoCaptureNV)(GLuint video_capture_slot);
GLLOADER_API void (GLAPIENTRYP glBindVideoCaptureStreamBufferNV)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
GLLOADER_API void (GLAPIENTRYP glBindVideoCaptureStreamTextureNV)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
GLLOADER_API void (GLAPIENTRYP glEndVideoCaptureNV)(GLuint video_capture_slot);
GLLOADER_API void (GLAPIENTRYP glGetVideoCaptureivNV)(GLuint video_capture_slot, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVideoCaptureStreamivNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetVideoCaptureStreamfvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetVideoCaptureStreamdvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);
GLLOADER_API GLenum(GLAPIENTRYP glVideoCaptureNV)(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);
GLLOADER_API void (GLAPIENTRYP glVideoCaptureStreamParameterivNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glVideoCaptureStreamParameterfvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glVideoCaptureStreamParameterdvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);
#endif // GL_NV_video_capture_IMPLEMENTATION
#ifndef GL_OVR_multiview_IMPLEMENTATION
#define GL_OVR_multiview_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFramebufferTextureMultiviewOVR)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
#endif // GL_OVR_multiview_IMPLEMENTATION
#ifndef GL_PGI_misc_hints_IMPLEMENTATION
#define GL_PGI_misc_hints_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glHintPGI)(GLenum target, GLint mode);
#endif // GL_PGI_misc_hints_IMPLEMENTATION
#ifndef GL_SGIS_detail_texture_IMPLEMENTATION
#define GL_SGIS_detail_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDetailTexFuncSGIS)(GLenum target, GLsizei n, const GLfloat *points);
GLLOADER_API void (GLAPIENTRYP glGetDetailTexFuncSGIS)(GLenum target, GLfloat *points);
#endif // GL_SGIS_detail_texture_IMPLEMENTATION
#ifndef GL_SGIS_fog_function_IMPLEMENTATION
#define GL_SGIS_fog_function_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFogFuncSGIS)(GLsizei n, const GLfloat *points);
GLLOADER_API void (GLAPIENTRYP glGetFogFuncSGIS)(GLfloat *points);
#endif // GL_SGIS_fog_function_IMPLEMENTATION
#ifndef GL_SGIS_multisample_IMPLEMENTATION
#define GL_SGIS_multisample_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glSampleMaskSGIS)(GLclampf value, GLboolean invert);
GLLOADER_API void (GLAPIENTRYP glSamplePatternSGIS)(GLenum pattern);
#endif // GL_SGIS_multisample_IMPLEMENTATION
#ifndef GL_SGIS_pixel_texture_IMPLEMENTATION
#define GL_SGIS_pixel_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPixelTexGenParameteriSGIS)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glPixelTexGenParameterivSGIS)(GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glPixelTexGenParameterfSGIS)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glPixelTexGenParameterfvSGIS)(GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetPixelTexGenParameterivSGIS)(GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetPixelTexGenParameterfvSGIS)(GLenum pname, GLfloat *params);
#endif // GL_SGIS_pixel_texture_IMPLEMENTATION
#ifndef GL_SGIS_point_parameters_IMPLEMENTATION
#define GL_SGIS_point_parameters_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPointParameterfSGIS)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glPointParameterfvSGIS)(GLenum pname, const GLfloat *params);
#endif // GL_SGIS_point_parameters_IMPLEMENTATION
#ifndef GL_SGIS_sharpen_texture_IMPLEMENTATION
#define GL_SGIS_sharpen_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glSharpenTexFuncSGIS)(GLenum target, GLsizei n, const GLfloat *points);
GLLOADER_API void (GLAPIENTRYP glGetSharpenTexFuncSGIS)(GLenum target, GLfloat *points);
#endif // GL_SGIS_sharpen_texture_IMPLEMENTATION
#ifndef GL_SGIS_texture4D_IMPLEMENTATION
#define GL_SGIS_texture4D_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTexImage4DSGIS)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);
GLLOADER_API void (GLAPIENTRYP glTexSubImage4DSGIS)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);
#endif // GL_SGIS_texture4D_IMPLEMENTATION
#ifndef GL_SGIS_texture_color_mask_IMPLEMENTATION
#define GL_SGIS_texture_color_mask_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTextureColorMaskSGIS)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
#endif // GL_SGIS_texture_color_mask_IMPLEMENTATION
#ifndef GL_SGIS_texture_filter4_IMPLEMENTATION
#define GL_SGIS_texture_filter4_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGetTexFilterFuncSGIS)(GLenum target, GLenum filter, GLfloat *weights);
GLLOADER_API void (GLAPIENTRYP glTexFilterFuncSGIS)(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);
#endif // GL_SGIS_texture_filter4_IMPLEMENTATION
#ifndef GL_SGIX_async_IMPLEMENTATION
#define GL_SGIX_async_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glAsyncMarkerSGIX)(GLuint marker);
GLLOADER_API GLint(GLAPIENTRYP glFinishAsyncSGIX)(GLuint *markerp);
GLLOADER_API GLint(GLAPIENTRYP glPollAsyncSGIX)(GLuint *markerp);
GLLOADER_API GLuint(GLAPIENTRYP glGenAsyncMarkersSGIX)(GLsizei range);
GLLOADER_API void (GLAPIENTRYP glDeleteAsyncMarkersSGIX)(GLuint marker, GLsizei range);
GLLOADER_API GLboolean(GLAPIENTRYP glIsAsyncMarkerSGIX)(GLuint marker);
#endif // GL_SGIX_async_IMPLEMENTATION
#ifndef GL_SGIX_flush_raster_IMPLEMENTATION
#define GL_SGIX_flush_raster_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFlushRasterSGIX)(void);
#endif // GL_SGIX_flush_raster_IMPLEMENTATION
#ifndef GL_SGIX_fragment_lighting_IMPLEMENTATION
#define GL_SGIX_fragment_lighting_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFragmentColorMaterialSGIX)(GLenum face, GLenum mode);
GLLOADER_API void (GLAPIENTRYP glFragmentLightfSGIX)(GLenum light, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glFragmentLightfvSGIX)(GLenum light, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glFragmentLightiSGIX)(GLenum light, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glFragmentLightivSGIX)(GLenum light, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glFragmentLightModelfSGIX)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glFragmentLightModelfvSGIX)(GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glFragmentLightModeliSGIX)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glFragmentLightModelivSGIX)(GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glFragmentMaterialfSGIX)(GLenum face, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glFragmentMaterialfvSGIX)(GLenum face, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glFragmentMaterialiSGIX)(GLenum face, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glFragmentMaterialivSGIX)(GLenum face, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetFragmentLightfvSGIX)(GLenum light, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetFragmentLightivSGIX)(GLenum light, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glGetFragmentMaterialfvSGIX)(GLenum face, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetFragmentMaterialivSGIX)(GLenum face, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glLightEnviSGIX)(GLenum pname, GLint param);
#endif // GL_SGIX_fragment_lighting_IMPLEMENTATION
#ifndef GL_SGIX_framezoom_IMPLEMENTATION
#define GL_SGIX_framezoom_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFrameZoomSGIX)(GLint factor);
#endif // GL_SGIX_framezoom_IMPLEMENTATION
#ifndef GL_SGIX_igloo_interface_IMPLEMENTATION
#define GL_SGIX_igloo_interface_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glIglooInterfaceSGIX)(GLenum pname, const void *params);
#endif // GL_SGIX_igloo_interface_IMPLEMENTATION
#ifndef GL_SGIX_instruments_IMPLEMENTATION
#define GL_SGIX_instruments_IMPLEMENTATION 1
GLLOADER_API GLint(GLAPIENTRYP glGetInstrumentsSGIX)(void);
GLLOADER_API void (GLAPIENTRYP glInstrumentsBufferSGIX)(GLsizei size, GLint *buffer);
GLLOADER_API GLint(GLAPIENTRYP glPollInstrumentsSGIX)(GLint *marker_p);
GLLOADER_API void (GLAPIENTRYP glReadInstrumentsSGIX)(GLint marker);
GLLOADER_API void (GLAPIENTRYP glStartInstrumentsSGIX)(void);
GLLOADER_API void (GLAPIENTRYP glStopInstrumentsSGIX)(GLint marker);
#endif // GL_SGIX_instruments_IMPLEMENTATION
#ifndef GL_SGIX_list_priority_IMPLEMENTATION
#define GL_SGIX_list_priority_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGetListParameterfvSGIX)(GLuint list, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetListParameterivSGIX)(GLuint list, GLenum pname, GLint *params);
GLLOADER_API void (GLAPIENTRYP glListParameterfSGIX)(GLuint list, GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glListParameterfvSGIX)(GLuint list, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glListParameteriSGIX)(GLuint list, GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glListParameterivSGIX)(GLuint list, GLenum pname, const GLint *params);
#endif // GL_SGIX_list_priority_IMPLEMENTATION
#ifndef GL_SGIX_pixel_texture_IMPLEMENTATION
#define GL_SGIX_pixel_texture_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glPixelTexGenSGIX)(GLenum mode);
#endif // GL_SGIX_pixel_texture_IMPLEMENTATION
#ifndef GL_SGIX_polynomial_ffd_IMPLEMENTATION
#define GL_SGIX_polynomial_ffd_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDeformationMap3dSGIX)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
GLLOADER_API void (GLAPIENTRYP glDeformationMap3fSGIX)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
GLLOADER_API void (GLAPIENTRYP glDeformSGIX)(GLbitfield mask);
GLLOADER_API void (GLAPIENTRYP glLoadIdentityDeformationMapSGIX)(GLbitfield mask);
#endif // GL_SGIX_polynomial_ffd_IMPLEMENTATION
#ifndef GL_SGIX_reference_plane_IMPLEMENTATION
#define GL_SGIX_reference_plane_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glReferencePlaneSGIX)(const GLdouble *equation);
#endif // GL_SGIX_reference_plane_IMPLEMENTATION
#ifndef GL_SGIX_sprite_IMPLEMENTATION
#define GL_SGIX_sprite_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glSpriteParameterfSGIX)(GLenum pname, GLfloat param);
GLLOADER_API void (GLAPIENTRYP glSpriteParameterfvSGIX)(GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glSpriteParameteriSGIX)(GLenum pname, GLint param);
GLLOADER_API void (GLAPIENTRYP glSpriteParameterivSGIX)(GLenum pname, const GLint *params);
#endif // GL_SGIX_sprite_IMPLEMENTATION
#ifndef GL_SGIX_tag_sample_buffer_IMPLEMENTATION
#define GL_SGIX_tag_sample_buffer_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glTagSampleBufferSGIX)(void);
#endif // GL_SGIX_tag_sample_buffer_IMPLEMENTATION
#ifndef GL_SGI_color_table_IMPLEMENTATION
#define GL_SGI_color_table_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glColorTableSGI)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
GLLOADER_API void (GLAPIENTRYP glColorTableParameterfvSGI)(GLenum target, GLenum pname, const GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glColorTableParameterivSGI)(GLenum target, GLenum pname, const GLint *params);
GLLOADER_API void (GLAPIENTRYP glCopyColorTableSGI)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLLOADER_API void (GLAPIENTRYP glGetColorTableSGI)(GLenum target, GLenum format, GLenum type, void *table);
GLLOADER_API void (GLAPIENTRYP glGetColorTableParameterfvSGI)(GLenum target, GLenum pname, GLfloat *params);
GLLOADER_API void (GLAPIENTRYP glGetColorTableParameterivSGI)(GLenum target, GLenum pname, GLint *params);
#endif // GL_SGI_color_table_IMPLEMENTATION
#ifndef GL_SUNX_constant_data_IMPLEMENTATION
#define GL_SUNX_constant_data_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glFinishTextureSUNX)(void);
#endif // GL_SUNX_constant_data_IMPLEMENTATION
#ifndef GL_SUN_global_alpha_IMPLEMENTATION
#define GL_SUN_global_alpha_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glGlobalAlphaFactorbSUN)(GLbyte factor);
GLLOADER_API void (GLAPIENTRYP glGlobalAlphaFactorsSUN)(GLshort factor);
GLLOADER_API void (GLAPIENTRYP glGlobalAlphaFactoriSUN)(GLint factor);
GLLOADER_API void (GLAPIENTRYP glGlobalAlphaFactorfSUN)(GLfloat factor);
GLLOADER_API void (GLAPIENTRYP glGlobalAlphaFactordSUN)(GLdouble factor);
GLLOADER_API void (GLAPIENTRYP glGlobalAlphaFactorubSUN)(GLubyte factor);
GLLOADER_API void (GLAPIENTRYP glGlobalAlphaFactorusSUN)(GLushort factor);
GLLOADER_API void (GLAPIENTRYP glGlobalAlphaFactoruiSUN)(GLuint factor);
#endif // GL_SUN_global_alpha_IMPLEMENTATION
#ifndef GL_SUN_mesh_array_IMPLEMENTATION
#define GL_SUN_mesh_array_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glDrawMeshArraysSUN)(GLenum mode, GLint first, GLsizei count, GLsizei width);
#endif // GL_SUN_mesh_array_IMPLEMENTATION
#ifndef GL_SUN_triangle_list_IMPLEMENTATION
#define GL_SUN_triangle_list_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiSUN)(GLuint code);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeusSUN)(GLushort code);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeubSUN)(GLubyte code);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuivSUN)(const GLuint *code);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeusvSUN)(const GLushort *code);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeubvSUN)(const GLubyte *code);
GLLOADER_API void (GLAPIENTRYP glReplacementCodePointerSUN)(GLenum type, GLsizei stride, const void **pointer);
#endif // GL_SUN_triangle_list_IMPLEMENTATION
#ifndef GL_SUN_vertex_IMPLEMENTATION
#define GL_SUN_vertex_IMPLEMENTATION 1
GLLOADER_API void (GLAPIENTRYP glColor4ubVertex2fSUN)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
GLLOADER_API void (GLAPIENTRYP glColor4ubVertex2fvSUN)(const GLubyte *c, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glColor4ubVertex3fSUN)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glColor4ubVertex3fvSUN)(const GLubyte *c, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glColor3fVertex3fSUN)(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glColor3fVertex3fvSUN)(const GLfloat *c, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glNormal3fVertex3fSUN)(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glNormal3fVertex3fvSUN)(const GLfloat *n, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glColor4fNormal3fVertex3fSUN)(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glColor4fNormal3fVertex3fvSUN)(const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fVertex3fvSUN)(const GLfloat *tc, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord4fVertex4fSUN)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glTexCoord4fVertex4fvSUN)(const GLfloat *tc, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fColor4ubVertex3fSUN)(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fColor4ubVertex3fvSUN)(const GLfloat *tc, const GLubyte *c, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fColor3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fColor3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fNormal3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fNormal3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *n, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fColor4fNormal3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glTexCoord4fColor4fNormal3fVertex4fSUN)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLLOADER_API void (GLAPIENTRYP glTexCoord4fColor4fNormal3fVertex4fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiVertex3fSUN)(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiVertex3fvSUN)(const GLuint *rc, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiColor4ubVertex3fSUN)(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiColor4ubVertex3fvSUN)(const GLuint *rc, const GLubyte *c, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiColor3fVertex3fSUN)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiColor3fVertex3fvSUN)(const GLuint *rc, const GLfloat *c, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiNormal3fVertex3fSUN)(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *n, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiColor4fNormal3fVertex3fSUN)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiColor4fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiTexCoord2fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiTexCoord2fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLLOADER_API void (GLAPIENTRYP glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
#endif // GL_SUN_vertex_IMPLEMENTATION
#endif // GLLOADER_IMPLEMENTATION

#endif // __glext_h_

/*++ BUILD Version: 0004    // Increment this if a change has global effects

Copyright (c) 1985-95, Microsoft Corporation

Module Name:

glu.h

Abstract:

Procedure declarations, constant definitions and macros for the OpenGL
Utility Library.

--*/

/*
** Copyright 1991-1993, Silicon Graphics, Inc.
** All Rights Reserved.
**
** This is UNPUBLISHED PROPRIETARY SOURCE CODE of Silicon Graphics, Inc.;
** the contents of this file may not be disclosed to third parties, copied or
** duplicated in any form, in whole or in part, without the prior written
** permission of Silicon Graphics, Inc.
**
** RESTRICTED RIGHTS LEGEND:
** Use, duplication or disclosure by the Government is subject to restrictions
** as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
** and Computer Software clause at DFARS 252.227-7013, and/or in similar or
** successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
** rights reserved under the Copyright Laws of the United States.
*/

#ifndef __GLU_H__
#define __GLU_H__

/*
** Return the error string associated with a particular error code.
** This will return 0 for an invalid error code.
**
** The generic function prototype that can be compiled for ANSI or Unicode
** is defined as follows:
**
** LPCTSTR gluErrorStringWIN (GLenum errCode);
*/
#ifdef UNICODE
#define gluErrorStringWIN(errCode) ((LPCSTR)  gluErrorUnicodeStringEXT(errCode))
#else
#define gluErrorStringWIN(errCode) ((LPCWSTR) gluErrorString(errCode))
#endif

#ifdef __cplusplus

class GLUnurbs;
class GLUquadric;
class GLUtesselator;

/* backwards compatibility: */
typedef class GLUnurbs GLUnurbsObj;
typedef class GLUquadric GLUquadricObj;
typedef class GLUtesselator GLUtesselatorObj;
typedef class GLUtesselator GLUtriangulatorObj;

#else

typedef struct GLUnurbs GLUnurbs;
typedef struct GLUquadric GLUquadric;
typedef struct GLUtesselator GLUtesselator;

/* backwards compatibility: */
typedef struct GLUnurbs GLUnurbsObj;
typedef struct GLUquadric GLUquadricObj;
typedef struct GLUtesselator GLUtesselatorObj;
typedef struct GLUtesselator GLUtriangulatorObj;

#endif

/****           Callback function prototypes    ****/

/* gluQuadricGLAPIENTRYP /
typedef void (GLAPIENTRYP GLUquadricErrorProc) (GLenum);

/* gluTessGLAPIENTRYP /
typedef void (GLAPIENTRYP GLUtessBeginProc)        (GLenum);
typedef void (GLAPIENTRYP GLUtessEdgeFlagProc)     (GLboolean);
typedef void (GLAPIENTRYP GLUtessVertexProc)       (void *);
typedef void (GLAPIENTRYP GLUtessEndProc)          (void);
typedef void (GLAPIENTRYP GLUtessErrorProc)        (GLenum);
typedef void (GLAPIENTRYP GLUtessCombineProc)      (GLdouble[3],
	void*[4],
	GLfloat[4],
	void**);
typedef void (GLAPIENTRYP GLUtessBeginDataProc)    (GLenum, void *);
typedef void (GLAPIENTRYP GLUtessEdgeFlagDataProc) (GLboolean, void *);
typedef void (GLAPIENTRYP GLUtessVertexDataProc)   (void *, void *);
typedef void (GLAPIENTRYP GLUtessEndDataProc)      (void *);
typedef void (GLAPIENTRYP GLUtessErrorDataProc)    (GLenum, void *);
typedef void (GLAPIENTRYP GLUtessCombineDataProc)  (GLdouble[3],void*[4],GLfloat[4],void**,void*);

/* gluNurbsGLAPIENTRYP /
typedef void (GLAPIENTRYP GLUnurbsErrorProc)   (GLenum);


/****           Generic constants               ****/

/* Version */
#define GLU_VERSION_1_1                 1
#define GLU_VERSION_1_2                 1

/* Errors: (return value 0 = no error) */
#define GLU_INVALID_ENUM        100900
#define GLU_INVALID_VALUE       100901
#define GLU_OUT_OF_MEMORY       100902
#define GLU_INCOMPATIBLE_GL_VERSION     100903

/* StringName */
#define GLU_VERSION             100800
#define GLU_EXTENSIONS          100801

/* Boolean */
#define GLU_TRUE                GL_TRUE
#define GLU_FALSE               GL_FALSE


/****           Quadric constants               ****/

/* QuadricNormal */
#define GLU_SMOOTH              100000
#define GLU_FLAT                100001
#define GLU_NONE                100002

/* QuadricDrawStyle */
#define GLU_POINT               100010
#define GLU_LINE                100011
#define GLU_FILL                100012
#define GLU_SILHOUETTE          100013

/* QuadricOrientation */
#define GLU_OUTSIDE             100020
#define GLU_INSIDE              100021

/* Callback types: */
/*      GLU_ERROR               100103 */


/****           Tesselation constants           ****/

#define GLU_TESS_MAX_COORD              1.0e150

/* TessProperty */
#define GLU_TESS_WINDING_RULE           100140
#define GLU_TESS_BOUNDARY_ONLY          100141
#define GLU_TESS_TOLERANCE              100142

/* TessWinding */
#define GLU_TESS_WINDING_ODD            100130
#define GLU_TESS_WINDING_NONZERO        100131
#define GLU_TESS_WINDING_POSITIVE       100132
#define GLU_TESS_WINDING_NEGATIVE       100133
#define GLU_TESS_WINDING_ABS_GEQ_TWO    100134

/* TessGLAPIENTRYP /
#define GLU_TESS_BEGIN          100100  /* void (CALLBACK*)(GLenum    type)  */
#define GLU_TESS_VERTEX         100101  /* void (CALLBACK*)(void      *data) */
#define GLU_TESS_END            100102  /* void (CALLBACK*)(void)            */
#define GLU_TESS_ERROR          100103  /* void (CALLBACK*)(GLenum    errno) */
#define GLU_TESS_EDGE_FLAG      100104  /* void (CALLBACK*)(GLboolean boundaryEdge)  */
#define GLU_TESS_COMBINE        100105  /* void (CALLBACK*)(GLdouble  coords[3],
void      *data[4],
GLfloat   weight[4],
void      **dataOut)     */
#define GLU_TESS_BEGIN_DATA     100106  /* void (CALLBACK*)(GLenum    type,  
void      *polygon_data) */
#define GLU_TESS_VERTEX_DATA    100107  /* void (CALLBACK*)(void      *data, 
void      *polygon_data) */
#define GLU_TESS_END_DATA       100108  /* void (CALLBACK*)(void      *polygon_data) */
#define GLU_TESS_ERROR_DATA     100109  /* void (CALLBACK*)(GLenum    errno, 
void      *polygon_data) */
#define GLU_TESS_EDGE_FLAG_DATA 100110  /* void (CALLBACK*)(GLboolean boundaryEdge,
void      *polygon_data) */
#define GLU_TESS_COMBINE_DATA   100111  /* void (CALLBACK*)(GLdouble  coords[3],
void      *data[4],
GLfloat   weight[4],
void      **dataOut,
void      *polygon_data) */

/* TessError */
#define GLU_TESS_ERROR1     100151
#define GLU_TESS_ERROR2     100152
#define GLU_TESS_ERROR3     100153
#define GLU_TESS_ERROR4     100154
#define GLU_TESS_ERROR5     100155
#define GLU_TESS_ERROR6     100156
#define GLU_TESS_ERROR7     100157
#define GLU_TESS_ERROR8     100158

#define GLU_TESS_MISSING_BEGIN_POLYGON  GLU_TESS_ERROR1
#define GLU_TESS_MISSING_BEGIN_CONTOUR  GLU_TESS_ERROR2
#define GLU_TESS_MISSING_END_POLYGON    GLU_TESS_ERROR3
#define GLU_TESS_MISSING_END_CONTOUR    GLU_TESS_ERROR4
#define GLU_TESS_COORD_TOO_LARGE        GLU_TESS_ERROR5
#define GLU_TESS_NEED_COMBINE_CALLBACK  GLU_TESS_ERROR6

/****           NURBS constants                 ****/

/* NurbsProperty */
#define GLU_AUTO_LOAD_MATRIX    100200
#define GLU_CULLING             100201
#define GLU_SAMPLING_TOLERANCE  100203
#define GLU_DISPLAY_MODE        100204
#define GLU_PARAMETRIC_TOLERANCE        100202
#define GLU_SAMPLING_METHOD             100205
#define GLU_U_STEP                      100206
#define GLU_V_STEP                      100207

/* NurbsSampling */
#define GLU_PATH_LENGTH                 100215
#define GLU_PARAMETRIC_ERROR            100216
#define GLU_DOMAIN_DISTANCE             100217


/* NurbsTrim */
#define GLU_MAP1_TRIM_2         100210
#define GLU_MAP1_TRIM_3         100211

/* NurbsDisplay */
/*      GLU_FILL                100012 */
#define GLU_OUTLINE_POLYGON     100240
#define GLU_OUTLINE_PATCH       100241

/* NurbsGLAPIENTRYP /
/*      GLU_ERROR               100103 */

/* NurbsErrors */
#define GLU_NURBS_ERROR1        100251
#define GLU_NURBS_ERROR2        100252
#define GLU_NURBS_ERROR3        100253
#define GLU_NURBS_ERROR4        100254
#define GLU_NURBS_ERROR5        100255
#define GLU_NURBS_ERROR6        100256
#define GLU_NURBS_ERROR7        100257
#define GLU_NURBS_ERROR8        100258
#define GLU_NURBS_ERROR9        100259
#define GLU_NURBS_ERROR10       100260
#define GLU_NURBS_ERROR11       100261
#define GLU_NURBS_ERROR12       100262
#define GLU_NURBS_ERROR13       100263
#define GLU_NURBS_ERROR14       100264
#define GLU_NURBS_ERROR15       100265
#define GLU_NURBS_ERROR16       100266
#define GLU_NURBS_ERROR17       100267
#define GLU_NURBS_ERROR18       100268
#define GLU_NURBS_ERROR19       100269
#define GLU_NURBS_ERROR20       100270
#define GLU_NURBS_ERROR21       100271
#define GLU_NURBS_ERROR22       100272
#define GLU_NURBS_ERROR23       100273
#define GLU_NURBS_ERROR24       100274
#define GLU_NURBS_ERROR25       100275
#define GLU_NURBS_ERROR26       100276
#define GLU_NURBS_ERROR27       100277
#define GLU_NURBS_ERROR28       100278
#define GLU_NURBS_ERROR29       100279
#define GLU_NURBS_ERROR30       100280
#define GLU_NURBS_ERROR31       100281
#define GLU_NURBS_ERROR32       100282
#define GLU_NURBS_ERROR33       100283
#define GLU_NURBS_ERROR34       100284
#define GLU_NURBS_ERROR35       100285
#define GLU_NURBS_ERROR36       100286
#define GLU_NURBS_ERROR37       100287

/****           Backwards compatibility for old tesselator           ****/

#ifdef GLLOADER_IMPLEMENTATION
GLLOADER_API const GLubyte* (GLAPIENTRYP gluErrorString)(GLenum errCode);
GLLOADER_API const wchar_t* (GLAPIENTRYP gluErrorUnicodeStringEXT)(GLenum errCode);
GLLOADER_API const GLubyte* (GLAPIENTRYP gluGetString)(GLenum name);
GLLOADER_API void (GLAPIENTRYP gluOrtho2D)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top);
GLLOADER_API void (GLAPIENTRYP gluPerspective)(GLdouble fovy, GLdouble aspect, GLdouble zNear, GLdouble zFar);
GLLOADER_API void (GLAPIENTRYP gluPickMatrix)(GLdouble x, GLdouble y, GLdouble width, GLdouble height, GLint viewport[4]);
GLLOADER_API void (GLAPIENTRYP gluLookAt)(GLdouble eyex, GLdouble eyey, GLdouble eyez, GLdouble centerx, GLdouble centery, GLdouble centerz, GLdouble upx, GLdouble upy, GLdouble upz);
GLLOADER_API int (GLAPIENTRYP gluProject)(GLdouble objx, GLdouble objy, GLdouble objz, const GLdouble modelMatrix[16], const GLdouble projMatrix[16], const GLint viewport[4], GLdouble *winx, GLdouble *winy, GLdouble *winz);
GLLOADER_API int (GLAPIENTRYP gluUnProject)(GLdouble winx, GLdouble winy, GLdouble winz, const GLdouble modelMatrix[16], const GLdouble projMatrix[16], const GLint viewport[4], GLdouble *objx, GLdouble *objy, GLdouble *objz);
GLLOADER_API int (GLAPIENTRYP gluScaleImage)(GLenum format, GLint widthin, GLint heightin, GLenum typein, const void *datain, GLint widthout, GLint heightout, GLenum typeout, void *dataout);
GLLOADER_API int (GLAPIENTRYP gluBuild1DMipmaps)(GLenum target, GLint components, GLint width, GLenum format, GLenum type, const void *data);
GLLOADER_API int (GLAPIENTRYP gluBuild2DMipmaps)(GLenum target, GLint components, GLint width, GLint height, GLenum format, GLenum type, const void *data);
GLLOADER_API GLUquadric* (GLAPIENTRYP gluNewQuadric)(void);
GLLOADER_API void (GLAPIENTRYP gluDeleteQuadric)(GLUquadric *state);
GLLOADER_API void (GLAPIENTRYP gluQuadricNormals)(GLUquadric *quadObject, GLenum normals);
GLLOADER_API void (GLAPIENTRYP gluQuadricTexture)(GLUquadric *quadObject, GLboolean textureCoords);
GLLOADER_API void (GLAPIENTRYP gluQuadricOrientation)(GLUquadric *quadObject, GLenum orientation);
GLLOADER_API void (GLAPIENTRYP gluQuadricDrawStyle)(GLUquadric *quadObject, GLenum drawStyle);
GLLOADER_API void (GLAPIENTRYP gluCylinder)(GLUquadric *qobj, GLdouble baseRadius, GLdouble topRadius, GLdouble height, GLint slices, GLint stacks);
GLLOADER_API void (GLAPIENTRYP gluDisk)(GLUquadric *qobj, GLdouble innerRadius, GLdouble outerRadius, GLint slices, GLint loops);
GLLOADER_API void (GLAPIENTRYP gluPartialDisk)(GLUquadric *qobj, GLdouble innerRadius, GLdouble outerRadius, GLint slices, GLint loops, GLdouble startAngle, GLdouble sweepAngle);
GLLOADER_API void (GLAPIENTRYP gluSphere)(GLUquadric *qobj, GLdouble radius, GLint slices, GLint stacks);
GLLOADER_API void (GLAPIENTRYP gluQuadricCallback)(GLUquadric *qobj, GLenum which, void (GLAPIENTRYP fn)());
GLLOADER_API GLUtesselator* (GLAPIENTRYP gluNewTess)(void);
GLLOADER_API void (GLAPIENTRYP gluDeleteTess)(GLUtesselator *tess);
GLLOADER_API void (GLAPIENTRYP gluTessBeginPolygon)(GLUtesselator *tess, void *polygon_data);
GLLOADER_API void (GLAPIENTRYP gluTessBeginContour)(GLUtesselator *tess);
GLLOADER_API void (GLAPIENTRYP gluTessVertex)(GLUtesselator *tess, GLdouble coords[3], void *data);
GLLOADER_API void (GLAPIENTRYP gluTessEndContour)(GLUtesselator *tess);
GLLOADER_API void (GLAPIENTRYP gluTessEndPolygon)(GLUtesselator *tess);
GLLOADER_API void (GLAPIENTRYP gluTessProperty)(GLUtesselator *tess, GLenum which, GLdouble value);
GLLOADER_API void (GLAPIENTRYP gluTessNormal)(GLUtesselator *tess, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API void (GLAPIENTRYP gluTessCallback)(GLUtesselator *tess, GLenum which, void (GLAPIENTRYP fn)());
GLLOADER_API void (GLAPIENTRYP gluGetTessProperty)(GLUtesselator *tess, GLenum which, GLdouble *value);
GLLOADER_API GLUnurbs* (GLAPIENTRYP gluNewNurbsRenderer)(void);
GLLOADER_API void (GLAPIENTRYP gluDeleteNurbsRenderer)(GLUnurbs *nobj);
GLLOADER_API void (GLAPIENTRYP gluBeginSurface)(GLUnurbs *nobj);
GLLOADER_API void (GLAPIENTRYP gluBeginCurve)(GLUnurbs *nobj);
GLLOADER_API void (GLAPIENTRYP gluEndCurve)(GLUnurbs *nobj);
GLLOADER_API void (GLAPIENTRYP gluEndSurface)(GLUnurbs *nobj);
GLLOADER_API void (GLAPIENTRYP gluBeginTrim)(GLUnurbs *nobj);
GLLOADER_API void (GLAPIENTRYP gluEndTrim)(GLUnurbs *nobj);
GLLOADER_API void (GLAPIENTRYP gluPwlCurve)(GLUnurbs *nobj, GLint count, GLfloat *array, GLint stride, GLenum type);
GLLOADER_API void (GLAPIENTRYP gluNurbsCurve)(GLUnurbs *nobj, GLint nknots, GLfloat *knot, GLint stride, GLfloat *ctlarray, GLint order, GLenum type);
GLLOADER_API void (GLAPIENTRYP gluNurbsSurface)(GLUnurbs *nobj, GLint sknot_count, float *sknot, GLint tknot_count, GLfloat *tknot, GLint s_stride, GLint t_stride, GLfloat *ctlarray, GLint sorder, GLint torder, GLenum type);
GLLOADER_API void (GLAPIENTRYP gluLoadSamplingMatrices)(GLUnurbs *nobj, const GLfloat modelMatrix[16], const GLfloat projMatrix[16], const GLint viewport[4]);
GLLOADER_API void (GLAPIENTRYP gluNurbsProperty)(GLUnurbs *nobj, GLenum property, GLfloat value);
GLLOADER_API void (GLAPIENTRYP gluGetNurbsProperty)(GLUnurbs *nobj, GLenum property, GLfloat *value);
GLLOADER_API void (GLAPIENTRYP gluNurbsCallback)(GLUnurbs *nobj, GLenum which, void (GLAPIENTRYP fn)());
GLLOADER_API void (GLAPIENTRYP gluBeginPolygon)(GLUtesselator *tess);
GLLOADER_API void (GLAPIENTRYP gluNextContour)(GLUtesselator *tess, GLenum type);
GLLOADER_API void (GLAPIENTRYP gluEndPolygon)(GLUtesselator *tess);
#else
GLLOADER_API extern const GLubyte* (GLAPIENTRYP gluErrorString)(GLenum errCode);
GLLOADER_API extern const wchar_t* (GLAPIENTRYP gluErrorUnicodeStringEXT)(GLenum errCode);
GLLOADER_API extern const GLubyte* (GLAPIENTRYP gluGetString)(GLenum name);
GLLOADER_API extern void (GLAPIENTRYP gluOrtho2D)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top);
GLLOADER_API extern void (GLAPIENTRYP gluPerspective)(GLdouble fovy, GLdouble aspect, GLdouble zNear, GLdouble zFar);
GLLOADER_API extern void (GLAPIENTRYP gluPickMatrix)(GLdouble x, GLdouble y, GLdouble width, GLdouble height, GLint viewport[4]);
GLLOADER_API extern void (GLAPIENTRYP gluLookAt)(GLdouble eyex, GLdouble eyey, GLdouble eyez, GLdouble centerx, GLdouble centery, GLdouble centerz, GLdouble upx, GLdouble upy, GLdouble upz);
GLLOADER_API extern int (GLAPIENTRYP gluProject)(GLdouble objx, GLdouble objy, GLdouble objz, const GLdouble modelMatrix[16], const GLdouble projMatrix[16], const GLint viewport[4], GLdouble *winx, GLdouble *winy, GLdouble *winz);
GLLOADER_API extern int (GLAPIENTRYP gluUnProject)(GLdouble winx, GLdouble winy, GLdouble winz, const GLdouble modelMatrix[16], const GLdouble projMatrix[16], const GLint viewport[4], GLdouble *objx, GLdouble *objy, GLdouble *objz);
GLLOADER_API extern int (GLAPIENTRYP gluScaleImage)(GLenum format, GLint widthin, GLint heightin, GLenum typein, const void *datain, GLint widthout, GLint heightout, GLenum typeout, void *dataout);
GLLOADER_API extern int (GLAPIENTRYP gluBuild1DMipmaps)(GLenum target, GLint components, GLint width, GLenum format, GLenum type, const void *data);
GLLOADER_API extern int (GLAPIENTRYP gluBuild2DMipmaps)(GLenum target, GLint components, GLint width, GLint height, GLenum format, GLenum type, const void *data);
GLLOADER_API extern GLUquadric* (GLAPIENTRYP gluNewQuadric)(void);
GLLOADER_API extern void (GLAPIENTRYP gluDeleteQuadric)(GLUquadric *state);
GLLOADER_API extern void (GLAPIENTRYP gluQuadricNormals)(GLUquadric *quadObject, GLenum normals);
GLLOADER_API extern void (GLAPIENTRYP gluQuadricTexture)(GLUquadric *quadObject, GLboolean textureCoords);
GLLOADER_API extern void (GLAPIENTRYP gluQuadricOrientation)(GLUquadric *quadObject, GLenum orientation);
GLLOADER_API extern void (GLAPIENTRYP gluQuadricDrawStyle)(GLUquadric *quadObject, GLenum drawStyle);
GLLOADER_API extern void (GLAPIENTRYP gluCylinder)(GLUquadric *qobj, GLdouble baseRadius, GLdouble topRadius, GLdouble height, GLint slices, GLint stacks);
GLLOADER_API extern void (GLAPIENTRYP gluDisk)(GLUquadric *qobj, GLdouble innerRadius, GLdouble outerRadius, GLint slices, GLint loops);
GLLOADER_API extern void (GLAPIENTRYP gluPartialDisk)(GLUquadric *qobj, GLdouble innerRadius, GLdouble outerRadius, GLint slices, GLint loops, GLdouble startAngle, GLdouble sweepAngle);
GLLOADER_API extern void (GLAPIENTRYP gluSphere)(GLUquadric *qobj, GLdouble radius, GLint slices, GLint stacks);
GLLOADER_API extern void (GLAPIENTRYP gluQuadricCallback)(GLUquadric *qobj, GLenum which, void (CALLBACK* fn)());
GLLOADER_API extern GLUtesselator* (GLAPIENTRYP gluNewTess)(void);
GLLOADER_API extern void (GLAPIENTRYP gluDeleteTess)(GLUtesselator *tess);
GLLOADER_API extern void (GLAPIENTRYP gluTessBeginPolygon)(GLUtesselator *tess, void *polygon_data);
GLLOADER_API extern void (GLAPIENTRYP gluTessBeginContour)(GLUtesselator *tess);
GLLOADER_API extern void (GLAPIENTRYP gluTessVertex)(GLUtesselator *tess, GLdouble coords[3], void *data);
GLLOADER_API extern void (GLAPIENTRYP gluTessEndContour)(GLUtesselator *tess);
GLLOADER_API extern void (GLAPIENTRYP gluTessEndPolygon)(GLUtesselator *tess);
GLLOADER_API extern void (GLAPIENTRYP gluTessProperty)(GLUtesselator *tess, GLenum which, GLdouble value);
GLLOADER_API extern void (GLAPIENTRYP gluTessNormal)(GLUtesselator *tess, GLdouble x, GLdouble y, GLdouble z);
GLLOADER_API extern void (GLAPIENTRYP gluTessCallback)(GLUtesselator *tess, GLenum which, void (GLAPIENTRYP fn)());
GLLOADER_API extern void (GLAPIENTRYP gluGetTessProperty)(GLUtesselator *tess, GLenum which, GLdouble *value);
GLLOADER_API extern GLUnurbs* (GLAPIENTRYP gluNewNurbsRenderer)(void);
GLLOADER_API extern void (GLAPIENTRYP gluDeleteNurbsRenderer)(GLUnurbs *nobj);
GLLOADER_API extern void (GLAPIENTRYP gluBeginSurface)(GLUnurbs *nobj);
GLLOADER_API extern void (GLAPIENTRYP gluBeginCurve)(GLUnurbs *nobj);
GLLOADER_API extern void (GLAPIENTRYP gluEndCurve)(GLUnurbs *nobj);
GLLOADER_API extern void (GLAPIENTRYP gluEndSurface)(GLUnurbs *nobj);
GLLOADER_API extern void (GLAPIENTRYP gluBeginTrim)(GLUnurbs *nobj);
GLLOADER_API extern void (GLAPIENTRYP gluEndTrim)(GLUnurbs *nobj);
GLLOADER_API extern void (GLAPIENTRYP gluPwlCurve)(GLUnurbs *nobj, GLint count, GLfloat *array, GLint stride, GLenum type);
GLLOADER_API extern void (GLAPIENTRYP gluNurbsCurve)(GLUnurbs *nobj, GLint nknots, GLfloat *knot, GLint stride, GLfloat *ctlarray, GLint order, GLenum type);
GLLOADER_API extern void (GLAPIENTRYP gluNurbsSurface)(GLUnurbs *nobj, GLint sknot_count, float *sknot, GLint tknot_count, GLfloat *tknot, GLint s_stride, GLint t_stride, GLfloat *ctlarray, GLint sorder, GLint torder, GLenum type);
GLLOADER_API extern void (GLAPIENTRYP gluLoadSamplingMatrices)(GLUnurbs *nobj, const GLfloat modelMatrix[16], const GLfloat projMatrix[16], const GLint viewport[4]);
GLLOADER_API extern void (GLAPIENTRYP gluNurbsProperty)(GLUnurbs *nobj, GLenum property, GLfloat value);
GLLOADER_API extern void (GLAPIENTRYP gluGetNurbsProperty)(GLUnurbs *nobj, GLenum property, GLfloat *value);
GLLOADER_API extern void (GLAPIENTRYP gluNurbsCallback)(GLUnurbs *nobj, GLenum which, void (CALLBACK* fn)());
GLLOADER_API extern void (GLAPIENTRYP gluBeginPolygon)(GLUtesselator *tess);
GLLOADER_API extern void (GLAPIENTRYP gluNextContour)(GLUtesselator *tess, GLenum type);
GLLOADER_API extern void (GLAPIENTRYP gluEndPolygon)(GLUtesselator *tess);
#endif

/* Contours types -- obsolete! */
#define GLU_CW          100120
#define GLU_CCW         100121
#define GLU_INTERIOR    100122
#define GLU_EXTERIOR    100123
#define GLU_UNKNOWN     100124

/* Names without "TESS_" prefix */
#define GLU_BEGIN       GLU_TESS_BEGIN
#define GLU_VERTEX      GLU_TESS_VERTEX
#define GLU_END         GLU_TESS_END
#define GLU_ERROR       GLU_TESS_ERROR
#define GLU_EDGE_FLAG   GLU_TESS_EDGE_FLAG

#endif /* __GLU_H__ */

// Indirect draw stuff
typedef struct GLDrawArraysIndirectCommand
{
	GLuint count;
	GLuint primCount;
	GLuint first;
	GLuint baseInstance;
} GLDrawArraysIndirectCommand;

typedef struct GLDrawElementsIndirectCommand
{
	GLuint count;
	GLuint primCount;
	GLuint firstIndex;
	GLuint baseVertex;
	GLuint baseInstance;
} GLDrawElementsIndirectCommand;

#ifdef __cplusplus
} // GLLOADER_API extern "C"
#endif